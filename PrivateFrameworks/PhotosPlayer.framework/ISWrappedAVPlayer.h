/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/PhotosPlayer.framework/PhotosPlayer
 */

@interface ISWrappedAVPlayer : NSObject {
    NSObject<OS_dispatch_queue> * _avPlayerQueue;
    <ISWrappedAVPlayerDelegate> * _delegate;
    NSObject<OS_dispatch_queue> * _delegateQueue;
    NSObject<OS_dispatch_queue> * _ivarQueue;
    void * _ivarQueueIdentifier;
    AVPlayerItem * _ivarQueue_currentItem;
    NSError * _ivarQueue_error;
    NSError * _ivarQueue_itemError;
    struct { 
        int value; 
        int timescale; 
        unsigned int flags; 
        int epoch; 
    }  _ivarQueue_itemForwardPlaybackEndTime;
    int  _ivarQueue_itemStatus;
    double  _ivarQueue_rate;
    int  _ivarQueue_status;
    double  _ivarQueue_volume;
    NSMutableDictionary * _observersByID;
    void * _playerQueueIdentifier;
    AVPlayer * _playerQueue_avPlayer;
}

@property <ISWrappedAVPlayerDelegate> *delegate;

+ (id)observedAVPIKeysAndContexts;
+ (id)observedAVPKeys;

- (void).cxx_destruct;
- (void)_assertOnIvarQueue;
- (void)_assertOnPlayerQueue;
- (id)_initWithAVPlayer:(id)arg1;
- (BOOL)_isOnIvarQueue;
- (BOOL)_isOnPlayerQueue;
- (id)_nextObserverUID;
- (id)_nilOrValue:(id)arg1;
- (void)_performIvarRead:(id /* block */)arg1;
- (void)_performIvarWrite:(id /* block */)arg1;
- (void)_performPlayerTransaction:(id /* block */)arg1;
- (void)_performPlayerTransaction:(id /* block */)arg1 sync:(BOOL)arg2;
- (void)_playerQueue_startObservingPlayerItem:(id)arg1;
- (void)_playerQueue_stopObservingPlayerItem:(id)arg1;
- (id)addBoundaryTimeObserverForTimes:(id)arg1 queue:(id)arg2 usingBlock:(id /* block */)arg3;
- (id)addPeriodicTimeObserverForInterval:(struct { int x1; int x2; unsigned int x3; int x4; })arg1 queue:(id)arg2 usingBlock:(id /* block */)arg3;
- (void)attachToPlayerLayerIfNeeded:(id)arg1;
- (void)cancelPendingPrerolls;
- (id)currentItem;
- (id)currentItemError;
- (int)currentItemStatus;
- (struct { int x1; int x2; unsigned int x3; int x4; })currentTime;
- (void)dealloc;
- (id)delegate;
- (id)error;
- (id)init;
- (struct { int x1; int x2; unsigned int x3; int x4; })itemForwardPlaybackEndTime;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void*)arg4;
- (void)pause;
- (void)prepareForReuseWithCompletion:(id /* block */)arg1;
- (void)prerollAtRate:(float)arg1 completionHandler:(id /* block */)arg2;
- (float)rate;
- (void)removeTimeObserver:(id)arg1;
- (void)replaceCurrentItemWithPlayerItem:(id)arg1;
- (void)replaceCurrentItemWithPlayerItem:(id)arg1 thenCall:(id /* block */)arg2;
- (void)seekToTime:(struct { int x1; int x2; unsigned int x3; int x4; })arg1 toleranceBefore:(struct { int x1; int x2; unsigned int x3; int x4; })arg2 toleranceAfter:(struct { int x1; int x2; unsigned int x3; int x4; })arg3 completionHandler:(id /* block */)arg4;
- (void)setAllowsExternalPlayback:(BOOL)arg1;
- (void)setAudioSession:(id)arg1;
- (void)setDelegate:(id)arg1;
- (void)setDimensionsOfReservedVideoMemory:(struct CGSize { double x1; double x2; })arg1;
- (void)setItemBlendsVideoFrames:(BOOL)arg1;
- (void)setItemForwardEndPlaybackTime:(struct { int x1; int x2; unsigned int x3; int x4; })arg1;
- (void)setRate:(float)arg1;
- (void)setRate:(float)arg1 time:(struct { int x1; int x2; unsigned int x3; int x4; })arg2 atHostTime:(struct { int x1; int x2; unsigned int x3; int x4; })arg3;
- (void)setVolume:(float)arg1;
- (int)status;
- (float)volume;

@end
