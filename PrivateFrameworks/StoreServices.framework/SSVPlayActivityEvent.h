/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/StoreServices.framework/StoreServices
 */

@class NSData, NSDate, NSString, NSTimeZone;

@interface SSVPlayActivityEvent : NSObject <NSCoding, NSCopying, NSMutableCopying, NSSecureCoding> {
    NSString *_containerID;
    unsigned long long _containerType;
    NSString *_deviceName;
    unsigned long long _endReasonType;
    NSDate *_eventDate;
    NSTimeZone *_eventTimeZone;
    NSString *_externalID;
    NSString *_featureName;
    double _itemDuration;
    double _itemEndTime;
    double _itemStartTime;
    unsigned long long _itemType;
    unsigned long long _mediaType;
    long long _persistentID;
    NSString *_personalizedContainerID;
    unsigned long long _sourceType;
    unsigned long long _storeAccountID;
    NSString *_storeID;
    NSData *_timedMetadata;
    NSData *_trackInfo;
    bool_SBEnabled;
    bool_offline;
}

@property(getter=isSBEnabled,readonly) bool SBEnabled;
@property(copy,readonly) NSString * containerID;
@property(readonly) unsigned long long containerType;
@property(copy,readonly) NSData * dataRepresentation;
@property(copy,readonly) NSString * deviceName;
@property(readonly) unsigned long long endReasonType;
@property(copy,readonly) NSDate * eventDate;
@property(copy,readonly) NSTimeZone * eventTimeZone;
@property(copy,readonly) NSString * externalID;
@property(copy,readonly) NSString * featureName;
@property(readonly) double itemDuration;
@property(readonly) double itemEndTime;
@property(readonly) double itemStartTime;
@property(readonly) unsigned long long itemType;
@property(readonly) unsigned long long mediaType;
@property(getter=isOffline,readonly) bool offline;
@property(readonly) long long persistentID;
@property(copy,readonly) NSString * personalizedContainerID;
@property(readonly) unsigned long long sourceType;
@property(readonly) unsigned long long storeAccountID;
@property(copy,readonly) NSString * storeID;
@property(copy,readonly) NSData * timedMetadata;
@property(copy,readonly) NSData * trackInfo;

+ (bool)supportsSecureCoding;

- (void).cxx_destruct;
- (Class)_mutableCopyClass;
- (id)containerID;
- (unsigned long long)containerType;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (id)dataRepresentation;
- (id)description;
- (id)deviceName;
- (void)encodeWithCoder:(id)arg1;
- (unsigned long long)endReasonType;
- (id)eventDate;
- (id)eventTimeZone;
- (id)externalID;
- (id)featureName;
- (unsigned long long)hash;
- (id)initWithCoder:(id)arg1;
- (id)initWithDataRepresentation:(id)arg1;
- (bool)isEqual:(id)arg1;
- (bool)isOffline;
- (bool)isSBEnabled;
- (double)itemDuration;
- (double)itemEndTime;
- (double)itemStartTime;
- (unsigned long long)itemType;
- (unsigned long long)mediaType;
- (id)mutableCopyWithZone:(struct _NSZone { }*)arg1;
- (long long)persistentID;
- (id)personalizedContainerID;
- (unsigned long long)sourceType;
- (unsigned long long)storeAccountID;
- (id)storeID;
- (id)timedMetadata;
- (id)trackInfo;

@end
