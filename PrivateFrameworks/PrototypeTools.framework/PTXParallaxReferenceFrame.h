/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/PrototypeTools.framework/PrototypeTools
 */

@interface PTXParallaxReferenceFrame : NSObject <_UISettingsKeyObserver> {
    union _GLKQuaternion { 
        struct { 
            union _GLKVector3 { 
                struct { 
                    double x; 
                    double y; 
                    double z; 
                } ; 
                struct { 
                    double r; 
                    double g; 
                    double b; 
                } ; 
                struct { 
                    double s; 
                    double t; 
                    double p; 
                } ; 
                double v[3]; 
            } v; 
            double s; 
        } ; 
        struct { 
            double x; 
            double y; 
            double z; 
            double w; 
        } ; 
        double q[4]; 
    }  _absoluteQuaternion;
    CAMediaTimingFunction * _curveFunction;
    UIWindow * _diagnosticsWindow;
    double  _distanceMultiplier;
    UIView * _horizontalLockIndicator;
    UILabel * _idleIndicator;
    double  _idleLeeway;
    struct CGPoint { 
        double x; 
        double y; 
    }  _idleStartOffset;
    double  _idleStartTime;
    unsigned long  _jumpSound;
    double  _jumpThreshold;
    struct CGPoint { 
        double x; 
        double y; 
    }  _lastOffset;
    double  _lastUpdate;
    double  _lockStrength;
    double  _lockValue;
    union _GLKQuaternion { 
        struct { 
            union _GLKVector3 { 
                struct { 
                    double x; 
                    double y; 
                    double z; 
                } ; 
                struct { 
                    double r; 
                    double g; 
                    double b; 
                } ; 
                struct { 
                    double s; 
                    double t; 
                    double p; 
                } ; 
                double v[3]; 
            } v; 
            double s; 
        } ; 
        struct { 
            double x; 
            double y; 
            double z; 
            double w; 
        } ; 
        double q[4]; 
    }  _referenceQuaternion;
    double  _referenceShiftSpeed;
    double  _secondsBeforeIdle;
    PTXParallaxEngineSettings * _settings;
    double  _smoothingDegree;
    UIView * _verticalLockIndicator;
}

@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned int hash;
@property (readonly) Class superclass;

- (void).cxx_destruct;
- (void)_createDiagnosticsWindow;
- (void)_createDirectionLockIndicators;
- (void)_createIdleIndicator;
- (struct CGPoint { double x1; double x2; })_currentRawOffset:(union _GLKQuaternion { struct { union _GLKVector3 { struct { double x_1_3_1; double x_1_3_2; double x_1_3_3; } x_1_2_1; struct { double x_2_3_1; double x_2_3_2; double x_2_3_3; } x_1_2_2; struct { double x_3_3_1; double x_3_3_2; double x_3_3_3; } x_1_2_3; double x_1_2_4[3]; } x_1_1_1; double x_1_1_2; } x1; struct { double x_2_1_1; double x_2_1_2; double x_2_1_3; double x_2_1_4; } x2; double x3[4]; })arg1;
- (struct CGPoint { double x1; double x2; })_curvedOffset;
- (BOOL)_isIdle;
- (float)_referenceShiftRadiansPerSecondForAngle:(float)arg1;
- (union _GLKQuaternion { struct { union _GLKVector3 { struct { double x_1_3_1; double x_1_3_2; double x_1_3_3; } x_1_2_1; struct { double x_2_3_1; double x_2_3_2; double x_2_3_3; } x_1_2_2; struct { double x_3_3_1; double x_3_3_2; double x_3_3_3; } x_1_2_3; double x_1_2_4[3]; } x_1_1_1; double x_1_1_2; } x1; struct { double x_2_1_1; double x_2_1_2; double x_2_1_3; double x_2_1_4; } x2; double x3[4]; })_relativeQuaternion:(union _GLKQuaternion { struct { union _GLKVector3 { struct { double x_1_3_1; double x_1_3_2; double x_1_3_3; } x_1_2_1; struct { double x_2_3_1; double x_2_3_2; double x_2_3_3; } x_1_2_2; struct { double x_3_3_1; double x_3_3_2; double x_3_3_3; } x_1_2_3; double x_1_2_4[3]; } x_1_1_1; double x_1_1_2; } x1; struct { double x_2_1_1; double x_2_1_2; double x_2_1_3; double x_2_1_4; } x2; double x3[4]; })arg1;
- (void)_showIdleUI:(BOOL)arg1;
- (void)_tearDownDiagnosticsWindow;
- (void)_tearDownDirectionLockIndicators;
- (void)_tearDownIdleIndicator;
- (void)_updateDirectionalLockIndicators;
- (void)_updateIdleStateForRawOffset:(struct CGPoint { double x1; double x2; })arg1;
- (void)_updateReferenceAttitude:(union _GLKQuaternion { struct { union _GLKVector3 { struct { double x_1_3_1; double x_1_3_2; double x_1_3_3; } x_1_2_1; struct { double x_2_3_1; double x_2_3_2; double x_2_3_3; } x_1_2_2; struct { double x_3_3_1; double x_3_3_2; double x_3_3_3; } x_1_2_3; double x_1_2_4[3]; } x_1_1_1; double x_1_1_2; } x1; struct { double x_2_1_1; double x_2_1_2; double x_2_1_3; double x_2_1_4; } x2; double x3[4]; })arg1;
- (void)_updateSettings;
- (void)_updateSmoothedOffsetForRawOffset:(struct CGPoint { double x1; double x2; })arg1;
- (void)dealloc;
- (int)directionLockStatus;
- (float)directionLockStrength;
- (id)initWithReferenceAttitude:(id)arg1 settings:(id)arg2;
- (struct CGPoint { double x1; double x2; })offset;
- (void)reset;
- (void)settings:(id)arg1 changedValueForKey:(id)arg2;
- (void)updateWithAttitude:(id)arg1;

@end
