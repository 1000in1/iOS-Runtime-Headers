/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/MediaPlayerUI.framework/MediaPlayerUI
 */

@interface MPUTransportControlsView : UIView {
    BOOL _alwaysLive;
    NSArray *_availableControls;
    NSMutableDictionary *_availableControlsByGroup;
    <MPUTransportControlsViewDelegate> *_delegate;
    double _displayedSkipBackwardInterval;
    double _displayedSkipForwardInterval;
    UIFont *_displayedSkipIntervalFont;
    struct UIEdgeInsets { 
        float top; 
        float left; 
        float bottom; 
        float right; 
    } _insetsForExpandingButtons;
    UIButton<MPUTransportButton> *_leftButton;
    MPUTransportButtonAttributes *_leftButtonAttributes;
    UIButton<MPUTransportButton> *_middleButton;
    MPUTransportButtonAttributes *_middleButtonAttributes;
    UIButton *_repeatButton;
    unsigned int _repeatType;
    UIButton<MPUTransportButton> *_rightButton;
    MPUTransportButtonAttributes *_rightButtonAttributes;
    BOOL _showAccessoryButtons;
    BOOL _showIsPlaying;
    UIButton *_shuffleButton;
    unsigned int _shuffleType;
    Class _transportButtonClass;
    BOOL _useCustomHighlightAppearance;
}

@property (setter=_setInsetsForExpandingButtons:, nonatomic) struct UIEdgeInsets { float x1; float x2; float x3; float x4; } _insetsForExpandingButtons;
@property (getter=isAlwaysLive, nonatomic) BOOL alwaysLive;
@property (nonatomic, copy) NSArray *availableControls;
@property (nonatomic) <MPUTransportControlsViewDelegate> *delegate;
@property (nonatomic) double displayedSkipBackwardInterval;
@property (nonatomic) double displayedSkipForwardInterval;
@property (nonatomic, retain) UIFont *displayedSkipIntervalFont;
@property (nonatomic) unsigned int repeatType;
@property (nonatomic) BOOL showAccessoryButtons;
@property (nonatomic) BOOL showIsPlaying;
@property (nonatomic) unsigned int shuffleType;
@property (nonatomic, retain) Class transportButtonClass;

+ (id)_skipIntervalButtonImageForInterval:(double)arg1 baseImage:(id)arg2 font:(id)arg3 scale:(float)arg4;
+ (id)_stringForDisplayedSkipInterval:(double)arg1;
+ (id)defaultTransportControls;

- (void).cxx_destruct;
- (id)_accessoryButtonEmphasizedTextAttributes;
- (id)_accessoryButtonTextAttributes;
- (void)_accessoryControlTap:(id)arg1;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })_adjustedFrameForButton:(id)arg1 proposedFrame:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg2;
- (id)_availableControlForGroup:(int)arg1;
- (void)_clearTransportButtonWeakReferencesToSelf;
- (void)_configureButton:(id)arg1 withAttributes:(id)arg2 forTransportControl:(id)arg3 deferApplyingAttributes:(BOOL)arg4;
- (id)_createAccessoryButton;
- (id)_createTransportButton;
- (struct UIEdgeInsets { float x1; float x2; float x3; float x4; })_insetsForExpandingButtons;
- (void)_layoutButton:(id)arg1 withAttributes:(id)arg2 frame:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg3 inExpandedTouchRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg4;
- (void)_reloadTransportButtons;
- (void)_setInsetsForExpandingButtons:(struct UIEdgeInsets { float x1; float x2; float x3; float x4; })arg1;
- (id)_transportButtonForControlType:(int)arg1;
- (struct CGSize { float x1; float x2; })_transportControlButtonSize;
- (void)_transportControlLongPressBegin:(id)arg1;
- (void)_transportControlLongPressEnd:(id)arg1;
- (void)_transportControlTap:(id)arg1;
- (void)_transportControlTouchEntered:(id)arg1;
- (void)_transportControlTouchExited:(id)arg1;
- (void)_updateTransportControlButtons;
- (void)_updateTransportControlButtonsAndDeferApplyingAttributes:(BOOL)arg1;
- (id)availableControls;
- (id)availableTransportControlWithType:(int)arg1;
- (void)dealloc;
- (id)delegate;
- (double)displayedSkipBackwardInterval;
- (double)displayedSkipForwardInterval;
- (id)displayedSkipIntervalFont;
- (id)initWithFrame:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (BOOL)isAlwaysLive;
- (void)layoutSubviews;
- (void)reload;
- (unsigned int)repeatType;
- (void)setAlwaysLive:(BOOL)arg1;
- (void)setAvailableControls:(id)arg1;
- (void)setDelegate:(id)arg1;
- (void)setDisplayedSkipBackwardInterval:(double)arg1;
- (void)setDisplayedSkipForwardInterval:(double)arg1;
- (void)setDisplayedSkipIntervalFont:(id)arg1;
- (void)setRepeatType:(unsigned int)arg1;
- (void)setShowAccessoryButtons:(BOOL)arg1;
- (void)setShowIsPlaying:(BOOL)arg1;
- (void)setShuffleType:(unsigned int)arg1;
- (void)setTransportButtonClass:(Class)arg1;
- (BOOL)showAccessoryButtons;
- (BOOL)showIsPlaying;
- (unsigned int)shuffleType;
- (struct CGSize { float x1; float x2; })sizeThatFits:(struct CGSize { float x1; float x2; })arg1;
- (Class)transportButtonClass;

@end
