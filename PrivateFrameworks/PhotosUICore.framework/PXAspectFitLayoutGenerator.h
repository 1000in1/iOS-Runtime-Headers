/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore
 */

@interface PXAspectFitLayoutGenerator : PXLayoutGenerator {
    struct CGSize { 
        double width; 
        double height; 
    }  _contentSize;
    double  _currentRowFinalHeight;
    double  _currentRowUnmodifiedHeight;
    struct _PXLayoutGeometry { int x1; struct CGPoint { double x_2_1_1; double x_2_1_2; } x2; struct CGSize { double x_3_1_1; double x_3_1_2; } x3; struct CGAffineTransform { double x_4_1_1; double x_4_1_2; double x_4_1_3; double x_4_1_4; double x_4_1_5; double x_4_1_6; } x4; double x5; int x6; } * _geometries;
    unsigned int  _geometriesCount;
    int  _lastGeometryIndex;
}

@property (nonatomic, readonly, copy) PXAspectFitLayoutMetrics *metrics;

- (void)_computeGeometriesIfNeeded;
- (void)_fillRowFromIndex:(int*)arg1 withCount:(int)arg2;
- (struct _PXLayoutGeometry { int x1; struct CGPoint { double x_2_1_1; double x_2_1_2; } x2; struct CGSize { double x_3_1_1; double x_3_1_2; } x3; struct CGAffineTransform { double x_4_1_1; double x_4_1_2; double x_4_1_3; double x_4_1_4; double x_4_1_5; double x_4_1_6; } x4; double x5; int x6; })_geometryForItemAtIndex:(unsigned int)arg1 atPosition:(struct CGPoint { double x1; double x2; })arg2 withHorizontalGap:(float)arg3;
- (struct _PXLayoutGeometry { int x1; struct CGPoint { double x_2_1_1; double x_2_1_2; } x2; struct CGSize { double x_3_1_1; double x_3_1_2; } x3; struct CGAffineTransform { double x_4_1_1; double x_4_1_2; double x_4_1_3; double x_4_1_4; double x_4_1_5; double x_4_1_6; } x4; double x5; int x6; })_lastGeometry;
- (void)_prepareGeometriesForCount:(unsigned int)arg1;
- (float)_rowHeightForItemsInRange:(struct _NSRange { unsigned int x1; unsigned int x2; })arg1;
- (void)dealloc;
- (struct CGSize { double x1; double x2; })estimatedSize;
- (void)getGeometries:(struct _PXLayoutGeometry { int x1; struct CGPoint { double x_2_1_1; double x_2_1_2; } x2; struct CGSize { double x_3_1_1; double x_3_1_2; } x3; struct CGAffineTransform { double x_4_1_1; double x_4_1_2; double x_4_1_3; double x_4_1_4; double x_4_1_5; double x_4_1_6; } x4; double x5; int x6; }*)arg1 inRange:(struct _NSRange { unsigned int x1; unsigned int x2; })arg2 withKind:(int)arg3;
- (id)init;
- (id)initWithMetrics:(id)arg1;
- (void)invalidate;
- (struct CGSize { double x1; double x2; })size;

@end
