/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/CloudDocsDaemon.framework/CloudDocsDaemon
 */

/* RuntimeBrowser encountered an ivar type encoding it does not handle. 
   See Warning(s) below.
 */

@class BRCSyncContext, BRCThrottle, NSDate, NSError, NSMutableArray, NSObject<OS_dispatch_group>, NSObject<OS_dispatch_queue>, NSObject<OS_dispatch_source>, NSUUID;

@interface _BRCOperation : NSOperation {
    NSObject<OS_dispatch_queue> *_callbackQueue;
    BOOL _executing;

  /* Unexpected information at end of encoded ivar type: ? */
  /* Error parsing encoded ivar type info: @? */
    id _finishBlock;

    BOOL _finished;
    NSObject<OS_dispatch_group> *_group;
    NSObject<OS_dispatch_queue> *_internalQueue;
    NSError *_lastError;
    NSDate *_lastTryDate;
    id _logSections;

  /* Unexpected information at end of encoded ivar type: ? */
  /* Error parsing encoded ivar type info: @? */
    id _mainBlock;

    NSDate *_nextTryDate;
    BRCThrottle *_operationThrottle;
    unsigned char _operationUUID[16];
    NSObject<OS_dispatch_source> *_retryTimer;
    NSDate *_startDate;
    NSMutableArray *_subOperations;
    BRCSyncContext *_syncContext;
    long long _throttleHash;
    BOOL _usesBackgroundSession;
}

@property(readonly) NSObject<OS_dispatch_queue> * callbackQueue;
@property(readonly) NSError * error;
@property(getter=isExecuting) BOOL executing;
@property(copy) id finishBlock;
@property(getter=isFinished) BOOL finished;
@property(readonly) id logSections;
@property(copy) id mainBlock;
@property(readonly) NSUUID * operationID;
@property BRCThrottle * operationThrottle;
@property(readonly) BRCSyncContext * syncContext;
@property BOOL usesBackgroundSession;

- (void).cxx_destruct;
- (void)_completedWithResult:(id)arg1 error:(id)arg2;
- (id)_description;
- (void)_executeAndBumpThrottle:(id)arg1;
- (BOOL)_finishIfCancelled;
- (void)_main;
- (void)_scheduleExecutionWithPreviousError:(id)arg1 throttle:(id)arg2;
- (void)addRegisterSubscriptionForZoneID:(id)arg1 completion:(id)arg2;
- (void)addSubOperation:(id)arg1;
- (void)addSubOperation:(id)arg1 overrideContext:(id)arg2;
- (void)addZoneCreationWithZoneID:(id)arg1 completion:(id)arg2;
- (id)callbackQueue;
- (void)cancel;
- (void)completedWithResult:(id)arg1 error:(id)arg2;
- (void)dealloc;
- (id)description;
- (id)error;
- (id)finishBlock;
- (BOOL)finishIfCancelled;
- (void)finishWithResult:(id)arg1 error:(id)arg2;
- (id)init;
- (id)initWithName:(id)arg1 syncContext:(id)arg2;
- (id)initWithName:(id)arg1 syncContext:(id)arg2 group:(id)arg3;
- (id)initWithName:(id)arg1 zone:(id)arg2;
- (id)initWithName:(id)arg1 zone:(id)arg2 group:(id)arg3;
- (BOOL)isConcurrent;
- (BOOL)isExecuting;
- (BOOL)isFinished;
- (id)logSections;
- (void)main;
- (id)mainBlock;
- (id)operationID;
- (id)operationThrottle;
- (void)schedule;
- (void)setExecuting:(BOOL)arg1;
- (void)setFinishBlock:(id)arg1;
- (void)setFinished:(BOOL)arg1;
- (void)setMainBlock:(id)arg1;
- (void)setOperationThrottle:(id)arg1;
- (void)setUsesBackgroundSession:(BOOL)arg1;
- (BOOL)shouldRetryForError:(id)arg1;
- (void)start;
- (id)state;
- (id)syncContext;
- (BOOL)usesBackgroundSession;

@end
