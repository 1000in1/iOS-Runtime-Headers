/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/VectorKit.framework/VectorKit
 */

@interface VKSelectedTransitLineTileSource : VKTransitLineTileSource <GEOTileRequesterDelegate> {
    NSMutableArray * _inProgress;
    unsigned int  _maxZ;
    unsigned int  _selectedLineIDSequenceCounter;
    struct unordered_set<unsigned int, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<unsigned int> > { 
        struct __hash_table<unsigned int, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<unsigned int> > { 
            struct unique_ptr<std::__1::__hash_node<unsigned int, void *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<unsigned int, void *> *> > > { 
                struct __compressed_pair<std::__1::__hash_node<unsigned int, void *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<unsigned int, void *> *> > > { 
                    struct __hash_node<unsigned int, void *> {} **__first_; 
                    struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<unsigned int, void *> *> > { 
                        struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<unsigned int, void *> *> > { 
                            unsigned long __first_; 
                        } __data_; 
                    } __second_; 
                } __ptr_; 
            } __bucket_list_; 
            struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<unsigned int, void *> *>, std::__1::allocator<std::__1::__hash_node<unsigned int, void *> > > { 
                struct __hash_node_base<std::__1::__hash_node<unsigned int, void *> *> { 
                    struct __hash_node<unsigned int, void *> {} *__next_; 
                } __first_; 
            } __p1_; 
            struct __compressed_pair<unsigned long, std::__1::hash<unsigned int> > { 
                unsigned long __first_; 
            } __p2_; 
            struct __compressed_pair<float, std::__1::equal_to<unsigned int> > { 
                double __first_; 
            } __p3_; 
        } __table_; 
    }  _selectedLineIDs;
}

@property (nonatomic) unsigned int maxZ;
@property (nonatomic) const /* Warning: unhandled struct encoding: '{unordered_set<unsigned int' */ struct *selectedLineIDs; /* unknown property attribute:  std::__1::equal_to<unsigned int> >=f}}} */

- (id).cxx_construct;
- (void).cxx_destruct;
- (id)_extraInfoForPendingSourceKey:(const struct VKTileKey { unsigned int x1; int x2; int x3; unsigned int x4; }*)arg1;
- (BOOL)_shouldUseDecodedTile:(id)arg1 extraInfo:(id)arg2;
- (BOOL)canFetchTileForKey:(const struct VKTileKey { unsigned int x1; int x2; int x3; unsigned int x4; }*)arg1;
- (void)dealloc;
- (id)initWithTileSet:(id)arg1 resourceManifestConfiguration:(id)arg2 locale:(id)arg3 sharedResources:(id)arg4 labelExternalObjectsModerator:(struct LabelExternalObjectsModerator { struct fast_shared_ptr<md::unsynchronized_weak_interface_ptr<md::LabelExternalObjectsModerator> > { struct _fast_shared_ptr_control {} *x_1_1_1; } x1; struct LabelExternalIconRenderer {} *x2; struct unordered_set<unsigned int, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<unsigned int> > { struct __hash_table<unsigned int, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<unsigned int> > { struct unique_ptr<std::__1::__hash_node<unsigned int, void *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<unsigned int, void *> *> > > { struct __compressed_pair<std::__1::__hash_node<unsigned int, void *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<unsigned int, void *> *> > > { struct __hash_node<unsigned int, void *> {} **x_1_4_1; struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<unsigned int, void *> *> > { struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<unsigned int, void *> *> > { unsigned long x_1_6_1; } x_2_5_1; } x_1_4_2; } x_1_3_1; } x_1_2_1; struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<unsigned int, void *> *>, std::__1::allocator<std::__1::__hash_node<unsigned int, void *> > > { struct __hash_node_base<std::__1::__hash_node<unsigned int, void *> *> { struct __hash_node<unsigned int, void *> {} *x_1_4_1; } x_2_3_1; } x_1_2_2; } x_3_1_1; } x3; }*)arg5 transitLineSharedResources:(const struct shared_ptr<const md::TransitLineSharedResources> { struct TransitLineSharedResources {} *x1; struct __shared_weak_count {} *x2; }*)arg6;
- (unsigned int)mapLayerForZoomLevelRange;
- (unsigned int)maxZ;
- (void)performDownload:(const struct _GEOTileKey { unsigned int x1 : 6; unsigned int x2 : 26; unsigned int x3 : 26; unsigned int x4 : 6; unsigned int x5 : 8; unsigned int x6 : 8; unsigned int x7 : 8; unsigned int x8 : 1; unsigned int x9 : 7; unsigned char x10[4]; }*)arg1;
- (const struct unordered_set<unsigned int, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<unsigned int> > { struct __hash_table<unsigned int, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<unsigned int> > { struct unique_ptr<std::__1::__hash_node<unsigned int, void *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<unsigned int, void *> *> > > { struct __compressed_pair<std::__1::__hash_node<unsigned int, void *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<unsigned int, void *> *> > > { struct __hash_node<unsigned int, void *> {} **x_1_3_1; struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<unsigned int, void *> *> > { struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<unsigned int, void *> *> > { unsigned long x_1_5_1; } x_2_4_1; } x_1_3_2; } x_1_2_1; } x_1_1_1; struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<unsigned int, void *> *>, std::__1::allocator<std::__1::__hash_node<unsigned int, void *> > > { struct __hash_node_base<std::__1::__hash_node<unsigned int, void *> *> { struct __hash_node<unsigned int, void *> {} *x_1_3_1; } x_2_2_1; } x_1_1_2; } x1; }*)selectedLineIDs;
- (void)setMaxZ:(unsigned int)arg1;
- (void)setSelectedLineIDs:(const struct unordered_set<unsigned int, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<unsigned int> > { struct __hash_table<unsigned int, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<unsigned int> > { struct unique_ptr<std::__1::__hash_node<unsigned int, void *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<unsigned int, void *> *> > > { struct __compressed_pair<std::__1::__hash_node<unsigned int, void *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<unsigned int, void *> *> > > { struct __hash_node<unsigned int, void *> {} **x_1_3_1; struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<unsigned int, void *> *> > { struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<unsigned int, void *> *> > { unsigned long x_1_5_1; } x_2_4_1; } x_1_3_2; } x_1_2_1; } x_1_1_1; struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<unsigned int, void *> *>, std::__1::allocator<std::__1::__hash_node<unsigned int, void *> > > { struct __hash_node_base<std::__1::__hash_node<unsigned int, void *> *> { struct __hash_node<unsigned int, void *> {} *x_1_3_1; } x_2_2_1; } x_1_1_2; } x1; }*)arg1;
- (void)tileRequester:(id)arg1 receivedData:(id)arg2 tileEdition:(unsigned int)arg3 tileSet:(unsigned int)arg4 etag:(id)arg5 forKey:(struct _GEOTileKey { unsigned int x1 : 6; unsigned int x2 : 26; unsigned int x3 : 26; unsigned int x4 : 6; unsigned int x5 : 8; unsigned int x6 : 8; unsigned int x7 : 8; unsigned int x8 : 1; unsigned int x9 : 7; unsigned char x10[4]; })arg6 userInfo:(id)arg7;
- (void)tileRequester:(id)arg1 receivedError:(id)arg2;
- (void)tileRequesterFinished:(id)arg1;

@end
