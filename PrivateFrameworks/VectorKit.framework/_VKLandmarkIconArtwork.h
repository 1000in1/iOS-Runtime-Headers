/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/VectorKit.framework/VectorKit
 */

@interface _VKLandmarkIconArtwork : VKIconArtwork {
    struct CGImage { } * _maskImage;
    struct CGImage { } * _outlineMaskImage;
    struct VKIconStyleInfo { 
        unsigned char iconStyle; 
        struct Matrix<float, 4, 1> { 
            double _e[4]; 
        } iconBadgeColor; 
        struct Matrix<float, 4, 1> { 
            double _e[4]; 
        } iconGradientColor[2]; 
        struct Matrix<float, 4, 1> { 
            double _e[4]; 
        } iconBadgeLightColor; 
        unsigned char iconBadgeLightBlendMode; 
        struct Matrix<float, 4, 1> { 
            double _e[4]; 
        } iconGlyphColor; 
        unsigned char iconGlyphStyle; 
        unsigned char iconGlyphBlendMode; 
        double iconHaloSize; 
        struct Matrix<float, 4, 1> { 
            double _e[4]; 
        } iconHaloColor; 
        struct Matrix<float, 2, 1> { 
            double _e[2]; 
        } iconDropShadowOffset; 
        double iconDropShadowSize; 
        struct Matrix<float, 4, 1> { 
            double _e[4]; 
        } iconDropShadowColor; 
        double iconCornerRadius; 
        double iconBrightness; 
        double iconBevelAmount; 
        bool iconHasText; 
        unsigned int iconSourceStyleAttributeKey; 
        unsigned int iconSourceStyleMultipoiAttributeKey; 
    }  _style;
}

- (id).cxx_construct;
- (void)_cleanUpAfterDrawing;
- (id)_newImage;
- (void)dealloc;
- (id)initWithMask:(struct CGImage { }*)arg1 outlineMask:(struct CGImage { }*)arg2 style:(struct VKIconStyleInfo { unsigned char x1; struct Matrix<float, 4, 1> { double x_2_1_1[4]; } x2; struct Matrix<float, 4, 1> { double x_3_1_1[4]; } x3[2]; struct Matrix<float, 4, 1> { double x_4_1_1[4]; } x4; unsigned char x5; struct Matrix<float, 4, 1> { double x_6_1_1[4]; } x6; unsigned char x7; unsigned char x8; double x9; struct Matrix<float, 4, 1> { double x_10_1_1[4]; } x10; struct Matrix<float, 2, 1> { double x_11_1_1[2]; } x11; double x12; struct Matrix<float, 4, 1> { double x_13_1_1[4]; } x13; double x14; double x15; double x16; bool x17; unsigned int x18; unsigned int x19; }*)arg3 contentScale:(float)arg4;

@end
