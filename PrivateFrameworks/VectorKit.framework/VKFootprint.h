/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/VectorKit.framework/VectorKit
 */

/* RuntimeBrowser encountered an ivar type encoding it does not handle. 
   See Warning(s) below.
 */

@interface VKFootprint : NSObject {
    struct { 
        double x0; 
        double x1; 
        double y0; 
        double y1; 
    struct VKFootprintConvexHull_struct { 
        int edgeCount; 
        struct VKPoint { 
            double x; 
            double y; 
            double z; 
        } edgeOrigin[6]; 
        struct Matrix<double, 3, 1> { 
            double _e[3]; 
        } edgeNormal[6]; 
    struct VKPoint { 
        double x; 
        double y; 
        double z; 
    struct VKPoint { 
        double x; 
        double y; 
        double z; 
    struct VKPoint { 
        double x; 
        double y; 
        double z; 
    } _boundingRect;
    double _centerDepth;
    } _convexHull;
    int _cornerGroundPointsCount;
    } _cornerGroundPoints[12];
    } _furthestGroundPoint;
    double _maxDepth;
    double _maxDistance;
    double _minDepth;
    double _minDistance;
    } _nearestGroundPoint;
}

@property(readonly) struct VKFootprintConvexHull_struct { int x1; struct VKPoint { double x_2_1_1; double x_2_1_2; double x_2_1_3; } x2[6]; /* Warning: unhandled struct encoding: '{Matrix<double' */ struct x3[6]; void*x4; void*x5; void*x6; void*x7; void*x8; void*x9; void*x10; void*x11; void*x12; void*x13; void*x14; void*x15; void*x16; void*x17; void*x18; void*x19; void*x20; oneway void*x21; void*x22; void*x23; void*x24; void*x25; void*x26; void*x27; void*x28; void*x29; void*x30; void*x31; void*x32; void*x33; void*x34; id x35; void*x36; struct VKFootprintConvexHull_struct { int x_37_1_1; struct VKPoint { double x_2_2_1; double x_2_2_2; double x_2_2_3; } x_37_1_2[6]; struct x_37_1_3[6]; void*x_37_1_4; void*x_37_1_5; void*x_37_1_6; void*x_37_1_7; void*x_37_1_8; void*x_37_1_9; void*x_37_1_10; void*x_37_1_11; void*x_37_1_12; void*x_37_1_13; void*x_37_1_14; void*x_37_1_15; void*x_37_1_16; void*x_37_1_17; void*x_37_1_18; void*x_37_1_19; void*x_37_1_20; void*x_37_1_21; void*x_37_1_22; unsigned int x_37_1_23; void*x_37_1_24; void*x_37_1_25; void*x_37_1_26; id x_37_1_27; void*x_37_1_28; char *x_37_1_29; long long x_37_1_30; void*x_37_1_31; void*x_37_1_32; void*x_37_1_33; void*x_37_1_34; void*x_37_1_35; void*x_37_1_36; void*x_37_1_37; void*x_37_1_38; void*x_37_1_39; void*x_37_1_40; void*x_37_1_41; void*x_37_1_42; const void*x_37_1_43; void*x_37_1_44; void*x_37_1_45; void*x_37_1_46; void*x_37_1_47; void*x_37_1_48; void*x_37_1_49; unsigned long x_37_1_50; void*x_37_1_51; out void*x_37_1_52; void*x_37_1_53; void*x_37_1_54; double x_37_1_55; void*x_37_1_56; unsigned int x_37_1_57; void*x_37_1_58; void*x_37_1_59; void*x_37_1_60; void*x_37_1_61; void*x_37_1_62; void*x_37_1_63; void*x_37_1_64; void*x_37_1_65; void*x_37_1_66; struct x_37_1_67; void*x_37_1_68; } x37; void*x38; void*x39; void*x40; char *x41; void*x42; void*x43; void*x44; void*x45; void*x46; void*x47; void*x48; void*x49; void*x50; void*x51; void*x52; void*x53; void*x54; void*x55; void*x56; void*x57; void*x58; void*x59; void*x60; void*x61; struct  {} x62; void*x63; char *x64; void*x65; void*x66; void*x67; void*x68; void*x69; void*x70; void*x71; void*x72; void*x73; } convexHull; /* unknown property attribute:  1>=[3d]}]} */
@property(readonly) struct { double x1; double x2; double x3; double x4; } boundingRect;
@property(readonly) double centerDepth;
@property(readonly) struct VKPoint { double x1; double x2; double x3; }* cornerGroundPoints;
@property(readonly) int cornerGroundPointsCount;
@property(readonly) struct VKPoint { double x1; double x2; double x3; } furthestGroundPoint;
@property(readonly) double maxDepth;
@property(readonly) double minDepth;
@property(readonly) struct VKPoint { double x1; double x2; double x3; } nearestGroundPoint;

- (id).cxx_construct;
- (struct { double x1; double x2; double x3; double x4; })_expandedBoundingRect;
- (id)annotationCoordinateTest;
- (id)annotationRectTest;
- (struct { double x1; double x2; double x3; double x4; })boundingRect;
- (double)centerDepth;
- (void)computeFromCamera:(id)arg1;
- (bool)containsGroundPoint:(struct VKPoint { double x1; double x2; double x3; }*)arg1;
- (struct VKFootprintConvexHull_struct { int x1; struct VKPoint { double x_2_1_1; double x_2_1_2; double x_2_1_3; } x2[6]; struct Matrix<double, 3, 1> { double x_3_1_1[3]; } x3[6]; })convexHull;
- (struct VKPoint { double x1; double x2; double x3; }*)cornerGroundPoints;
- (int)cornerGroundPointsCount;
- (struct VKPoint { double x1; double x2; double x3; })furthestGroundPoint;
- (double)maxDepth;
- (double)minDepth;
- (struct VKPoint { double x1; double x2; double x3; })nearestGroundPoint;
- (bool)rejectsRect:(const struct { double x1; double x2; double x3; double x4; }*)arg1;

@end
