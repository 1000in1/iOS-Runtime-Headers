/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/CloudKitDaemon.framework/CloudKitDaemon
 */

/* RuntimeBrowser encountered an ivar type encoding it does not handle. 
   See Warning(s) below.
 */

@class CKDClientContext, CKDDatabaseOperation, NSDate, NSMutableDictionary, NSObject<OS_dispatch_queue>, NSOperationQueue, NSString;

@interface CKDQueuedFetch : NSObject {
    BOOL _allowsCellularAccess;
    NSObject<OS_dispatch_queue> *_callbackQueue;

  /* Unexpected information at end of encoded ivar type: ? */
  /* Error parsing encoded ivar type info: @? */
    id _completionHandler;

    NSMutableDictionary *_completionHandlersByItemID;
    CKDClientContext *_context;
    NSString *_deviceIdentifier;
    CKDDatabaseOperation *_fetchOp;
    BOOL _isFinished;
    NSDate *_lastRequestDate;
    NSOperationQueue *_operationQueue;
    int _qos;
    int _scope;
    NSString *_sourceApplicationBundleIdentifier;
    NSString *_sourceApplicationSecondaryIdentifier;
    NSDate *_startDate;
    int _usesBackgroundSession;
}

@property BOOL allowsCellularAccess;
@property(retain) NSObject<OS_dispatch_queue> * callbackQueue;
@property(copy) id completionHandler;
@property(retain) NSMutableDictionary * completionHandlersByItemID;
@property CKDClientContext * context;
@property(retain) NSString * deviceIdentifier;
@property(retain) CKDDatabaseOperation * fetchOp;
@property BOOL isFinished;
@property(retain) NSDate * lastRequestDate;
@property NSOperationQueue * operationQueue;
@property int qos;
@property int scope;
@property(readonly) BOOL shouldStart;
@property(retain) NSString * sourceApplicationBundleIdentifier;
@property(retain) NSString * sourceApplicationSecondaryIdentifier;
@property(retain) NSDate * startDate;
@property int usesBackgroundSession;

- (void).cxx_destruct;
- (id)CKPropertiesDescription;
- (void)addCallbackForItemWithID:(id)arg1 callback:(id)arg2;
- (id)allItemIDs;
- (BOOL)allowsCellularAccess;
- (id)callbackQueue;
- (id)callbacksForItemWithID:(id)arg1;
- (BOOL)canBeUsedForOperation:(id)arg1;
- (id)completionHandler;
- (id)completionHandlersByItemID;
- (id)context;
- (id)description;
- (id)deviceIdentifier;
- (id)fetchOp;
- (id)fetchOperation;
- (void)finishFetchOperationWithError:(id)arg1;
- (id)initWithOperation:(id)arg1 context:(id)arg2 operationQueue:(id)arg3;
- (BOOL)isFinished;
- (id)lastRequestDate;
- (int)numberOfCallbacks;
- (id)operationInfo;
- (Class)operationInfoClass;
- (id)operationQueue;
- (void)performCallbacksForItemWithID:(id)arg1 withItem:(id)arg2 error:(id)arg3;
- (int)qos;
- (void)removeCallbacksForItemWithID:(id)arg1;
- (int)scope;
- (void)setAllowsCellularAccess:(BOOL)arg1;
- (void)setCallbackQueue:(id)arg1;
- (void)setCompletionHandler:(id)arg1;
- (void)setCompletionHandlersByItemID:(id)arg1;
- (void)setContext:(id)arg1;
- (void)setDeviceIdentifier:(id)arg1;
- (void)setFetchOp:(id)arg1;
- (void)setIsFinished:(BOOL)arg1;
- (void)setLastRequestDate:(id)arg1;
- (void)setOperationQueue:(id)arg1;
- (void)setQos:(int)arg1;
- (void)setScope:(int)arg1;
- (void)setSourceApplicationBundleIdentifier:(id)arg1;
- (void)setSourceApplicationSecondaryIdentifier:(id)arg1;
- (void)setStartDate:(id)arg1;
- (void)setUsesBackgroundSession:(int)arg1;
- (BOOL)shouldStart;
- (id)sourceApplicationBundleIdentifier;
- (id)sourceApplicationSecondaryIdentifier;
- (void)start;
- (id)startDate;
- (int)usesBackgroundSession;

@end
