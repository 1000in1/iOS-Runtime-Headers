/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/StoreKitUI.framework/StoreKitUI
 */

@interface SKUICircleProgressIndicator : UIView {
    double  _animatedValue;
    double  _animationEndTime;
    double  _animationStartTime;
    double  _animationStartValue;
    UIImage * _borderImage;
    UIImage * _centerImage;
    struct UIEdgeInsets { 
        double top; 
        double left; 
        double bottom; 
        double right; 
    }  _centerImageInsets;
    CADisplayLink * _displayLink;
    UIImage * _fillImage;
    BOOL  _highlighted;
    UIImageView * _indeterminateView;
    BOOL  _isAnimating;
    double  _progress;
    UIColor * _unhighlightedBackgroundColor;
}

@property (getter=isHighlighted, nonatomic) BOOL highlighted;
@property (nonatomic, retain) UIImage *image;
@property (nonatomic) struct UIEdgeInsets { double x1; double x2; double x3; double x4; } imageInsets;
@property (getter=isIndeterminate, nonatomic) BOOL indeterminate;
@property (nonatomic) double progress;

+ (id)_borderImage;
+ (id)_fillImage;
+ (id)_indeterminateImage;

- (void).cxx_destruct;
- (void)_animateValueOnDisplayLink:(id)arg1;
- (void)_setHidesBorderView:(BOOL)arg1;
- (void)_startIndeterminateAnimation;
- (void)dealloc;
- (void)didMoveToWindow;
- (void)drawRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (id)image;
- (struct UIEdgeInsets { double x1; double x2; double x3; double x4; })imageInsets;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (BOOL)isHighlighted;
- (BOOL)isIndeterminate;
- (void)layoutSubviews;
- (float)progress;
- (void)setBackgroundColor:(id)arg1;
- (void)setHighlighted:(BOOL)arg1;
- (void)setImage:(id)arg1;
- (void)setImageInsets:(struct UIEdgeInsets { double x1; double x2; double x3; double x4; })arg1;
- (void)setIndeterminate:(BOOL)arg1;
- (void)setProgress:(float)arg1;
- (void)setProgress:(float)arg1 animated:(BOOL)arg2;
- (struct CGSize { double x1; double x2; })sizeThatFits:(struct CGSize { double x1; double x2; })arg1;
- (void)tintColorDidChange;

@end
