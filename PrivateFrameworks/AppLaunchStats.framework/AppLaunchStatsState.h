/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/AppLaunchStats.framework/AppLaunchStats
 */

@interface AppLaunchStatsState : NSObject <DuetLoggerProtocol, DuetSaveAndRestore, PCInterfaceMonitorDelegate> {
    int  BGDataBudgetCap;
    int  BGDataCarryCap;
    int  _BGMinSlotData;
    APLSBinnedGlanceHistory * _binnedLaunches;
    double  _dataCellMultiplier;
    double  _dataWifiMultiplier;
    BOOL  _enableBlackListCheck;
    BOOL  _enableBudgetCheck;
    BOOL  _enableForeGroundAppCheck;
    BOOL  _enableLiveListCheck;
    BOOL  _enableOpportunisticFetchCheck;
    double  _globalFetchPWPC;
    int  _globalMinSlotData;
    double  _globalNonactivePWPC;
    double  _globalPushPWPC;
    int  _globalTimeThreshold;
    NSMutableArray * appForecastArray;
    unsigned int  appForecastQuality;
    NSMutableDictionary * appsAliveInLSTDict;
    NSMutableArray * cacheAppsforFullDebug;
    BOOL  cellHot;
    int  cellQuality;
    id /* block */  clientCallBack;
    NSMutableArray * dailyAppForecastSlots;
    NSMutableArray * dailyLaunchArrays;
    NSMutableArray * dataForecastArray;
    unsigned int  dataForecastQuality;
    bool  doUniformBudget;
    int  endofdayBGDataBudget;
    int  endofdayDataBudget;
    int  endofdayNDISCDataBudget;
    NSMutableArray * fireDates;
    NSDate * firstWakeupDate;
    APLSBinnedGlanceHistory * glanceLaunchLikelihood;
    int  globalDataBudgetCap;
    int  globalDataCarryCap;
    int  globalPowerBudgetCap;
    bool  isBatteryChargerConnected;
    bool  isDataResourceAvailable;
    bool  isDeviceInCall;
    bool  isDeviceInGoodCellularCondition;
    bool  isDevicePhoneType;
    bool  isDeviceUnderThermalPressure;
    bool  isFetchPowerResourceAvailable;
    bool  isFetchPushPowerResourceAvailable;
    NSMutableArray * powerFetchForecastArray;
    NSMutableArray * powerPushForecastArray;
    NSMutableArray * recentLaunchArrays;
    AppLaunchStatsSaveAndRestore * saveAndRestoreContext;
    NSDate * startTimeStamp;
    NSDate * startTimeStampOOB;
    NSObject<OS_dispatch_queue> * stateQueue;
    int  thermalStatusToken;
    NSMutableArray * weeklyLaunchArrays;
    BOOL  wifiHot;
    int  wifiQuality;
}

@property (nonatomic, readonly) int BGDataBudgetCap;
@property (nonatomic, readonly) int BGDataCarryCap;
@property (nonatomic, readonly) int BGMinSlotData;
@property (nonatomic, retain) NSMutableArray *appForecastArray;
@property (nonatomic) unsigned int appForecastQuality;
@property (retain) NSMutableDictionary *appsAliveInLSTDict;
@property (nonatomic, retain) APLSBinnedGlanceHistory *binnedLaunches;
@property (nonatomic, readonly) NSMutableArray *cacheAppsforFullDebug;
@property BOOL cellHot;
@property int cellQuality;
@property (nonatomic, retain) NSMutableArray *dailyAppForecastSlots;
@property (nonatomic, retain) NSMutableArray *dailyLaunchArrays;
@property (nonatomic, readonly) double dataCellMultiplier;
@property (nonatomic, retain) NSMutableArray *dataForecastArray;
@property (nonatomic) unsigned int dataForecastQuality;
@property (nonatomic, readonly) double dataWifiMultiplier;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property bool doUniformBudget;
@property (nonatomic) BOOL enableBlackListCheck;
@property (nonatomic, readonly) BOOL enableBudgetCheck;
@property (nonatomic, readonly) BOOL enableForeGroundAppCheck;
@property (nonatomic) BOOL enableLiveListCheck;
@property (nonatomic, readonly) BOOL enableOpportunisticFetchCheck;
@property int endofdayBGDataBudget;
@property int endofdayDataBudget;
@property int endofdayNDISCDataBudget;
@property (retain) NSMutableArray *fireDates;
@property (retain) NSDate *firstWakeupDate;
@property (nonatomic, readonly) int globalDataBudgetCap;
@property (nonatomic, readonly) int globalDataCarryCap;
@property (nonatomic, readonly) double globalFetchPWPC;
@property (nonatomic, readonly) int globalMinSlotData;
@property (nonatomic, readonly) double globalNonactivePWPC;
@property (nonatomic, readonly) double globalPushPWPC;
@property (nonatomic, readonly) int globalTimeThreshold;
@property (readonly) unsigned int hash;
@property bool isBatteryChargerConnected;
@property bool isDataResourceAvailable;
@property bool isDeviceInCall;
@property bool isDeviceUnderThermalPressure;
@property bool isFetchPowerResourceAvailable;
@property bool isFetchPushPowerResourceAvailable;
@property (nonatomic, retain) NSMutableArray *powerFetchForecastArray;
@property (nonatomic, retain) NSMutableArray *powerPushForecastArray;
@property (nonatomic, retain) NSMutableArray *recentLaunchArrays;
@property (readonly) Class superclass;
@property (nonatomic, retain) NSMutableArray *weeklyLaunchArrays;
@property BOOL wifiHot;
@property int wifiQuality;

- (void).cxx_destruct;
- (int)BGDataBudgetCap;
- (int)BGDataCarryCap;
- (int)BGMinSlotData;
- (void)addPredictedSlotsToDailyAppForecastQueue:(id)arg1;
- (void)addPredictedSlotsToDailyOutOfBandQueue:(id)arg1;
- (int)addToOutOfBandAppList:(int)arg1 withCacheDict:(id)arg2 withAppList:(id)arg3;
- (void)aggregateAllLaunchTypes;
- (id)appForecastArray;
- (unsigned int)appForecastQuality;
- (id)appsAliveInLSTDict;
- (id)binnedLaunches;
- (id)cacheAppsforFullDebug;
- (int)calculateDailyDataBudgetFor:(const char *)arg1;
- (int)calculateSlotMinDataBudget:(const char *)arg1;
- (BOOL)cellHot;
- (int)cellQuality;
- (void)combineGlanceLaunchProbabilities:(id)arg1 withAppLaunches:(id)arg2;
- (void)convertPCdistributionToInt:(id)arg1 fetchOver:(float)arg2 array:(id)arg3 dailyInt:(int)arg4;
- (id)dailyAppForecastSlots;
- (id)dailyLaunchArrays;
- (float)dataCellMultiplier;
- (id)dataForecastArray;
- (unsigned int)dataForecastQuality;
- (float)dataWifiMultiplier;
- (void)dealloc;
- (id)deniedReasonForPush;
- (bool)doUniformBudget;
- (BOOL)enableBlackListCheck;
- (BOOL)enableBudgetCheck;
- (BOOL)enableForeGroundAppCheck;
- (BOOL)enableLiveListCheck;
- (BOOL)enableOpportunisticFetchCheck;
- (int)endofdayBGDataBudget;
- (int)endofdayDataBudget;
- (int)endofdayNDISCDataBudget;
- (id)fireDates;
- (id)firstWakeupDate;
- (bool)getAppsAliveInLSTList:(id)arg1;
- (BOOL)getInCallStatus;
- (id)getOutOfBandAppList;
- (id)glancesLaunchedBetween:(id)arg1 and:(id)arg2;
- (int)globalDataBudgetCap;
- (int)globalDataCarryCap;
- (float)globalFetchPWPC;
- (int)globalMinSlotData;
- (float)globalNonactivePWPC;
- (float)globalPushPWPC;
- (int)globalTimeThreshold;
- (BOOL)hasResourcesAvailable:(BOOL)arg1 forTriggerType:(int)arg2;
- (bool)inMemoryPressure;
- (id)init;
- (bool)isBatteryChargerConnected;
- (bool)isChargeOnWifiOrCellOn;
- (bool)isDataResourceAvailable;
- (bool)isDeviceInCall;
- (bool)isDeviceUnderThermalPressure;
- (bool)isFetchPowerResourceAvailable;
- (bool)isFetchPushPowerResourceAvailable;
- (bool)isOutOfBand;
- (void)logAll:(struct __asl_object_s { }*)arg1 withMsg:(struct __asl_object_s { }*)arg2 withLevel:(int)arg3;
- (void)logLight:(struct __asl_object_s { }*)arg1 withMsg:(struct __asl_object_s { }*)arg2 withLevel:(int)arg3;
- (id)powerFetchForecastArray;
- (id)powerPushForecastArray;
- (id)recentLaunchArrays;
- (int)reloadConfiguration;
- (void)resetAppsAliveInLSTList;
- (void)restore:(id)arg1;
- (void)save:(id)arg1;
- (void)saveContext:(id)arg1;
- (void)setAppForecastArray:(id)arg1;
- (void)setAppForecastQuality:(unsigned int)arg1;
- (void)setAppsAliveInLSTDict:(id)arg1;
- (void)setBinnedLaunches:(id)arg1;
- (void)setCellHot:(BOOL)arg1;
- (void)setCellQuality:(int)arg1;
- (void)setClientblock:(id /* block */)arg1;
- (void)setDailyAppForecastSlots:(id)arg1;
- (void)setDailyLaunchArrays:(id)arg1;
- (void)setDataForecastArray:(id)arg1;
- (void)setDataForecastQuality:(unsigned int)arg1;
- (void)setDoUniformBudget:(bool)arg1;
- (void)setEnableBlackListCheck:(BOOL)arg1;
- (void)setEnableLiveListCheck:(BOOL)arg1;
- (void)setEndofdayBGDataBudget:(int)arg1;
- (void)setEndofdayDataBudget:(int)arg1;
- (void)setEndofdayNDISCDataBudget:(int)arg1;
- (void)setFireDates:(id)arg1;
- (void)setFirstWakeupDate:(id)arg1;
- (void)setIsBatteryChargerConnected:(bool)arg1;
- (void)setIsDataResourceAvailable:(bool)arg1;
- (void)setIsDeviceInCall:(bool)arg1;
- (void)setIsDeviceUnderThermalPressure:(bool)arg1;
- (void)setIsFetchPowerResourceAvailable:(bool)arg1;
- (void)setIsFetchPushPowerResourceAvailable:(bool)arg1;
- (void)setPowerFetchForecastArray:(id)arg1;
- (void)setPowerPushForecastArray:(id)arg1;
- (void)setRecentLaunchArrays:(id)arg1;
- (void)setWeeklyLaunchArrays:(id)arg1;
- (void)setWifiHot:(BOOL)arg1;
- (void)setWifiQuality:(int)arg1;
- (void)updateAppsAliveInLSTList:(id)arg1;
- (void)updateHistoricalGlanceData;
- (id)weeklyLaunchArrays;
- (BOOL)wifiHot;
- (int)wifiQuality;

@end
