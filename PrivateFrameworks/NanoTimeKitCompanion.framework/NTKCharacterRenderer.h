/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/NanoTimeKitCompanion.framework/NanoTimeKitCompanion
 */

@interface NTKCharacterRenderer : NSObject {
    BOOL  _active;
    BOOL  _animatingIntoOrb;
    BOOL  _animatingToNewDate;
    double  _animationFrameInterval;
    BOOL  _applyInstantTimeWarp;
    _Arms * _arms;
    _Background * _background;
    double  _backgroundBrightness;
    _Body * _body;
    double  _brightness;
    NSCalendar * _cal;
    double  _characterScale;
    UIColor * _clothingColor;
    int  _clothingColorLoc;
    int  _curPose;
    unsigned int  _curProg;
    int  _curState;
    double  _curTimeMod15Sec;
    double  _curTimeMod1Sec;
    unsigned int  _curVAO;
    double  _desaturation;
    int  _endPose;
    int  _endState;
    _Foot * _foot;
    double  _fromHourPercent;
    double  _fromMinutePercent;
    void _globalOffset;
    void _globalScale;
    _Head * _head;
    union _GLKMatrix4 { 
        struct { 
            double m00; 
            double m01; 
            double m02; 
            double m03; 
            double m10; 
            double m11; 
            double m12; 
            double m13; 
            double m20; 
            double m21; 
            double m22; 
            double m23; 
            double m30; 
            double m31; 
            double m32; 
            double m33; 
        } ; 
        double m[16]; 
    }  _headMatrix;
    double  _hourHandPos;
    int  _idealPose;
    int  _idealState;
    BOOL  _inTimeTravel;
    NTKCharacterResourceLoader * _loader;
    double  _minHandPos;
    int  _modelMatrixLoc;
    union _GLKVector2 { 
        struct { 
            double x; 
            double y; 
        } ; 
        struct { 
            double s; 
            double t; 
        } ; 
        double v[2]; 
    }  _neckBone;
    NSDate * _overrideDate;
    double  _overrideDateFraction;
    struct CharacterPoseSpecs { 
        double bodyOffsetX; 
        double footOffsetX; 
        double headOffsetX; 
    }  _poseSpecs;
    NSString * _prefix;
    int  _prevPose;
    int  _prevState;
    BOOL  _sayCheese;
    double  _scrubOffset;
    struct CharacterStateSpecs { 
        unsigned int bodyTexIdx; 
        unsigned int minuteTexIdx; 
        unsigned int hourArmOnLeftShoulder; 
        double xFlipBody; 
        double xFlipFoot; 
        double xFlipFace; 
        double xFlipMinuteHand; 
        double xFlipHourHand; 
        double leftShoulderX; 
        double rightShoulderX; 
        double minuteElbowBend; 
        double hourElbowBend; 
    }  _stateSpecs;
    NSDate * _timeTravelEnterDate;
    double  _toHourPercent;
    double  _toMinutePercent;
    double  _zoomFraction;
}

@property (nonatomic, readonly) BOOL active;
@property (retain) _Arms *arms;
@property (retain) _Background *background;
@property (nonatomic) double backgroundBrightness;
@property (retain) _Body *body;
@property (nonatomic) double brightness;
@property (readonly) double characterScale;
@property (readonly) UIColor *clothingColor;
@property (readonly) int clothingColorLoc;
@property (readonly) double curTimeMod15Sec;
@property (readonly) double curTimeMod1Sec;
@property (readonly) double desaturation;
@property (retain) _Foot *foot;
@property void globalOffset;
@property void globalScale;
@property (retain) _Head *head;
@property (readonly) union _GLKMatrix4 { struct { double x_1_1_1; double x_1_1_2; double x_1_1_3; double x_1_1_4; double x_1_1_5; double x_1_1_6; double x_1_1_7; double x_1_1_8; double x_1_1_9; double x_1_1_10; double x_1_1_11; double x_1_1_12; double x_1_1_13; double x_1_1_14; double x_1_1_15; double x_1_1_16; } x1; double x2[16]; } headMatrix;
@property (nonatomic, readonly) NTKCharacterResourceLoader *loader;
@property (readonly) int modelMatrixLoc;
@property (readonly) union _GLKVector2 { struct { double x_1_1_1; double x_1_1_2; } x1; struct { double x_2_1_1; double x_2_1_2; } x2; double x3[2]; } neckBone;
@property (nonatomic, readonly) NSString *prefix;
@property (readonly) double zoomFraction;

+ (id)rendererWithCharacter:(unsigned int)arg1 loader:(id)arg2;

- (void).cxx_destruct;
- (void)_applyClothingColor;
- (void)_bindGLVAO:(unsigned int)arg1;
- (void)_doneWaitingForFootRaise;
- (void)_drawArmFromShoulder:(union _GLKVector3 { struct { double x_1_1_1; double x_1_1_2; double x_1_1_3; } x1; struct { double x_2_1_1; double x_2_1_2; double x_2_1_3; } x2; struct { double x_3_1_1; double x_3_1_2; double x_3_1_3; } x3; double x4[3]; })arg1 toWrist:(union _GLKVector3 { struct { double x_1_1_1; double x_1_1_2; double x_1_1_3; } x1; struct { double x_2_1_1; double x_2_1_2; double x_2_1_3; } x2; struct { double x_3_1_1; double x_3_1_2; double x_3_1_3; } x3; double x4[3]; })arg2 withBend:(float)arg3;
- (void)_drawBackground;
- (void)_drawBody;
- (void)_drawCharacter;
- (void)_drawHead;
- (void)_drawHourHand;
- (void)_drawMinuteHand;
- (void)_drawTappingFoot;
- (BOOL)_footIsRaisedEnoughToStartAnimation;
- (float)_getElbowScaleForPosition:(float)arg1;
- (void)_idleBodyAfterAnimation;
- (void)_lowerFootAfterBodyAnimation;
- (void)_raiseFootForBodyAnimation;
- (void)_resetTimeVariable;
- (void)_setPoseSpecs:(struct CharacterPoseSpecs { double x1; double x2; double x3; })arg1;
- (void)_setStateSpecs:(struct CharacterStateSpecs { unsigned int x1; unsigned int x2; unsigned int x3; double x4; double x5; double x6; double x7; double x8; double x9; double x10; double x11; double x12; })arg1;
- (void)_updateStateAndPose;
- (void)_updateTimeVariables;
- (void)_updateWaitingForFootRaise;
- (void)activate;
- (BOOL)active;
- (id)arms;
- (id)background;
- (float)backgroundBrightness;
- (id)body;
- (float)brightness;
- (float)characterScale;
- (void)cleanupAfterZoom;
- (void)cleanupToOverrideDate:(id)arg1;
- (id)clothingColor;
- (int)clothingColorLoc;
- (void)copyStateFrom:(id)arg1;
- (int)curPose;
- (int)curState;
- (float)curTimeMod15Sec;
- (float)curTimeMod1Sec;
- (void)deactivate;
- (void)dealloc;
- (float)desaturation;
- (id)foot;
- (void)forceUpdateTimeVariables;
- (void)globalOffset;
- (void)globalScale;
- (id)head;
- (union _GLKMatrix4 { struct { double x_1_1_1; double x_1_1_2; double x_1_1_3; double x_1_1_4; double x_1_1_5; double x_1_1_6; double x_1_1_7; double x_1_1_8; double x_1_1_9; double x_1_1_10; double x_1_1_11; double x_1_1_12; double x_1_1_13; double x_1_1_14; double x_1_1_15; double x_1_1_16; } x1; double x2[16]; })headMatrix;
- (id)initWithCharacter:(unsigned int)arg1 loader:(id)arg2 prefix:(id)arg3;
- (void)loadBackgroundTextures;
- (void)loadBodyTextures;
- (void)loadFootTextures;
- (void)loadHeadBlinkTextures;
- (void)loadHeadTextures;
- (void)loadNumbersTexture;
- (void)loadShiftTextures;
- (id)loader;
- (int)modelMatrixLoc;
- (union _GLKVector2 { struct { double x_1_1_1; double x_1_1_2; } x1; struct { double x_2_1_1; double x_2_1_2; } x2; double x3[2]; })neckBone;
- (id)prefix;
- (void)prepareToAnimateToDate:(id)arg1 forOrb:(BOOL)arg2;
- (void)prepareToZoom;
- (void)render;
- (void)scrubToDate:(id)arg1;
- (void)setAnimationFrameInterval:(float)arg1;
- (void)setArms:(id)arg1;
- (void)setBackground:(id)arg1;
- (void)setBackgroundBrightness:(float)arg1;
- (void)setBody:(id)arg1;
- (void)setBrightness:(float)arg1;
- (void)setClothingColor:(id)arg1 andDesaturation:(float)arg2;
- (void)setFoot:(id)arg1;
- (void)setGlobalOffset;
- (void)setGlobalScale;
- (void)setHead:(id)arg1;
- (void)setOverrideDateFraction:(float)arg1;
- (void)setScrubOffset:(float)arg1;
- (void)setTimeOffset:(double)arg1;
- (void)setZoomFraction:(float)arg1 diameter:(float)arg2;
- (void)setupBodyState;
- (void)setupTextures;
- (void)setupVAOs;
- (void)significantTimeChanged:(id)arg1;
- (float)zoomFraction;

@end
