/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/RDSupport.framework/RDSupport
 */

/* RuntimeBrowser encountered an ivar type encoding it does not handle. 
   See Warning(s) below.
 */

@class NSObject<OS_dispatch_queue>, NSObject<OS_dispatch_source>, NSString;

@interface RDMulticastService : NSObject {
    int _connectionState;

  /* Unexpected information at end of encoded ivar type: ? */
  /* Error parsing encoded ivar type info: @? */
    id _connectionStateChangedBlock;

    BOOL _continueAfterHandshake;
    BOOL _didCompleteHandshake;

  /* Unexpected information at end of encoded ivar type: ? */
  /* Error parsing encoded ivar type info: @? */
    id _handshakeCompletionBlock;

    NSObject<OS_dispatch_queue> *_handshakeWorkQueue;
    NSString *_lastKnownIDSPairingRecordsState;
    NSString *_localIP;
    NSString *_localInterfaceName;
    struct addrinfo { int x1; int x2; int x3; int x4; unsigned int x5; char *x6; struct sockaddr {} *x7; struct addrinfo {} *x8; } *_multicastAddr;

  /* Unexpected information at end of encoded ivar type: ? */
  /* Error parsing encoded ivar type info: @? */
    id _multicastPayloadCallback;

    NSObject<OS_dispatch_source> *_multicastSendTimer;
    NSObject<OS_dispatch_source> *_readSource;
    int _receiveSocketFd;
    NSString *_remoteIP;
    int _repeatedSendFailureBails;
    int _repeatedSendFailureCount;
    int _sendSocketFd;
    double _senderTime;
    BOOL _shouldAllowIDSReset;
    BOOL _shouldRefetchIDSPairingState;
    int _unansweredMulticastCount;
}

@property int connectionState;
@property(copy) id connectionStateChangedBlock;
@property BOOL continueAfterHandshake;
@property BOOL didCompleteHandshake;
@property(copy) id handshakeCompletionBlock;
@property(retain) NSObject<OS_dispatch_queue> * handshakeWorkQueue;
@property(copy) NSString * lastKnownIDSPairingRecordsState;
@property(retain) NSString * localIP;
@property(retain) NSString * localInterfaceName;
@property struct addrinfo { int x1; int x2; int x3; int x4; unsigned int x5; char *x6; struct sockaddr {} *x7; struct addrinfo {} *x8; }* multicastAddr;
@property(copy) id multicastPayloadCallback;
@property(retain) NSObject<OS_dispatch_source> * multicastSendTimer;
@property(retain) NSObject<OS_dispatch_source> * readSource;
@property int receiveSocketFd;
@property(retain) NSString * remoteIP;
@property int repeatedSendFailureBails;
@property int repeatedSendFailureCount;
@property int sendSocketFd;
@property double senderTime;
@property BOOL shouldAllowIDSReset;
@property BOOL shouldRefetchIDSPairingState;
@property int unansweredMulticastCount;

+ (id)ipv4AddressForInterface:(id)arg1;
+ (id)localEthernetInterfaceName;

- (void).cxx_destruct;
- (void)beginMulticastConnectionWithPayloadCallBack:(id)arg1;
- (int)connectionState;
- (id)connectionStateChangedBlock;
- (BOOL)continueAfterHandshake;
- (BOOL)didCompleteHandshake;
- (BOOL)discoverLocalInterface;
- (id)handshakeCompletionBlock;
- (id)handshakeWorkQueue;
- (id)init;
- (id)lastKnownIDSPairingRecordsState;
- (id)localIP;
- (id)localInterfaceName;
- (struct addrinfo { int x1; int x2; int x3; int x4; unsigned int x5; char *x6; struct sockaddr {} *x7; struct addrinfo {} *x8; }*)multicastAddr;
- (id)multicastPayloadCallback;
- (id)multicastSendTimer;
- (void)performHandshakeWithCompletionBlock:(id)arg1;
- (id)readSource;
- (BOOL)receiveHandshakeMulticast;
- (int)receiveSocketFd;
- (id)remoteIP;
- (int)repeatedSendFailureBails;
- (int)repeatedSendFailureCount;
- (void)resetHandshakeState;
- (BOOL)sendHandshakeMulticast;
- (void)sendMulticastPayload:(id)arg1;
- (int)sendSocketFd;
- (double)senderTime;
- (void)setConnectionState:(int)arg1;
- (void)setConnectionStateChangedBlock:(id)arg1;
- (void)setContinueAfterHandshake:(BOOL)arg1;
- (void)setDidCompleteHandshake:(BOOL)arg1;
- (void)setHandshakeCompletionBlock:(id)arg1;
- (void)setHandshakeWorkQueue:(id)arg1;
- (void)setLastKnownIDSPairingRecordsState:(id)arg1;
- (void)setLocalIP:(id)arg1;
- (void)setLocalInterfaceName:(id)arg1;
- (void)setMulticastAddr:(struct addrinfo { int x1; int x2; int x3; int x4; unsigned int x5; char *x6; struct sockaddr {} *x7; struct addrinfo {} *x8; }*)arg1;
- (void)setMulticastPayloadCallback:(id)arg1;
- (void)setMulticastSendTimer:(id)arg1;
- (void)setReadSource:(id)arg1;
- (void)setReceiveSocketFd:(int)arg1;
- (void)setRemoteIP:(id)arg1;
- (void)setRepeatedSendFailureBails:(int)arg1;
- (void)setRepeatedSendFailureCount:(int)arg1;
- (void)setSendSocketFd:(int)arg1;
- (void)setSenderTime:(double)arg1;
- (void)setShouldAllowIDSReset:(BOOL)arg1;
- (void)setShouldRefetchIDSPairingState:(BOOL)arg1;
- (void)setUnansweredMulticastCount:(int)arg1;
- (BOOL)setUpMulticastReceiveSocket;
- (BOOL)setUpMulticastSendSocket;
- (BOOL)setUpMulticastSendTimer;
- (BOOL)setUpReceiveDispatchSource;
- (BOOL)shouldAllowIDSReset;
- (BOOL)shouldRefetchIDSPairingState;
- (void)syncTimeWithSender:(double)arg1;
- (void)tearDownMulticastSendReceiveState;
- (int)unansweredMulticastCount;

@end
