/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/WebCore.framework/WebCore
 */

@interface WebAccessibilityObjectWrapper : WebAccessibilityObjectWrapperBase {
    unsigned int  m_accessibilityTraitsFromAncestor;
    int  m_isAccessibilityElement;
}

- (void)_accessibilityActivate;
- (struct CGPoint { double x1; double x2; })_accessibilityConvertPointToViewSpace:(struct CGPoint { double x1; double x2; })arg1;
- (struct WebAccessibilityObjectWrapper { Class x1; struct AccessibilityObject {} *x2; int x3; unsigned int x4; }*)_accessibilityFieldsetAncestor;
- (BOOL)_accessibilityHasTouchEventListener;
- (BOOL)_accessibilityIsLandmarkRole:(int)arg1;
- (struct WebAccessibilityObjectWrapper { Class x1; struct AccessibilityObject {} *x2; int x3; unsigned int x4; }*)_accessibilityLandmarkAncestor;
- (struct WebAccessibilityObjectWrapper { Class x1; struct AccessibilityObject {} *x2; int x3; unsigned int x4; }*)_accessibilityListAncestor;
- (float)_accessibilityMaxValue;
- (float)_accessibilityMinValue;
- (id)_accessibilityNextElementsWithCount:(unsigned long)arg1;
- (id)_accessibilityParentForSubview:(id)arg1;
- (struct CGPath { }*)_accessibilityPath;
- (id)_accessibilityPreviousElementsWithCount:(unsigned long)arg1;
- (struct CGPoint { double x1; double x2; })_accessibilityScrollPosition;
- (struct CGSize { double x1; double x2; })_accessibilityScrollSize;
- (BOOL)_accessibilityScrollToVisible;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_accessibilityScrollVisibleRect;
- (struct _NSRange { unsigned int x1; unsigned int x2; })_accessibilitySelectedTextRange;
- (void)_accessibilitySetSelectedTextRange:(struct _NSRange { unsigned int x1; unsigned int x2; })arg1;
- (void)_accessibilitySetValue:(id)arg1;
- (struct WebAccessibilityObjectWrapper { Class x1; struct AccessibilityObject {} *x2; int x3; unsigned int x4; }*)_accessibilityTableAncestor;
- (unsigned int)_accessibilityTextEntryTraits;
- (unsigned int)_accessibilityTraitsFromAncestors;
- (BOOL)_accessibilityValueIsAutofilled;
- (id)_accessibilityWebDocumentView;
- (BOOL)_addAccessibilityObject:(struct AccessibilityObject { int (**x1)(); unsigned int x2; unsigned int x3; struct Vector<WTF::RefPtr<WebCore::AccessibilityObject>, 0, WTF::CrashOnOverflow, 16> { struct RefPtr<WebCore::AccessibilityObject> {} *x_4_1_1; unsigned int x_4_1_2; unsigned int x_4_1_3; } x4; bool x5; int x6; int x7; struct RetainPtr<WebAccessibilityObjectWrapper> { void *x_8_1_1; } x8; }*)arg1 toTextMarkerArray:(id)arg2;
- (unsigned int)_axAdjustableTrait;
- (unsigned int)_axButtonTrait;
- (unsigned int)_axContainedByFieldsetTrait;
- (unsigned int)_axContainedByLandmarkTrait;
- (unsigned int)_axContainedByListTrait;
- (unsigned int)_axContainedByTableTrait;
- (unsigned int)_axHasTextCursorTrait;
- (unsigned int)_axHeaderTrait;
- (unsigned int)_axImageTrait;
- (unsigned int)_axLinkTrait;
- (unsigned int)_axMenuItemTrait;
- (unsigned int)_axNotEnabledTrait;
- (unsigned int)_axPopupButtonTrait;
- (unsigned int)_axRadioButtonTrait;
- (unsigned int)_axSearchFieldTrait;
- (unsigned int)_axSecureTextFieldTrait;
- (unsigned int)_axSelectedTrait;
- (unsigned int)_axStaticTextTrait;
- (unsigned int)_axTabButtonTrait;
- (unsigned int)_axTextAreaTrait;
- (unsigned int)_axTextEntryTrait;
- (unsigned int)_axTextOperationsAvailableTrait;
- (unsigned int)_axToggleTrait;
- (unsigned int)_axUpdatesFrequentlyTrait;
- (unsigned int)_axVisitedTrait;
- (unsigned int)_axWebContentTrait;
- (struct RefPtr<WebCore::Range> { struct Range {} *x1; })_convertToDOMRange:(struct _NSRange { unsigned int x1; unsigned int x2; })arg1;
- (struct _NSRange { unsigned int x1; unsigned int x2; })_convertToNSRange:(struct Range { unsigned int x1; struct Ref<WebCore::Document> { struct Document {} *x_2_1_1; } x2; struct RangeBoundaryPoint { struct RefPtr<WebCore::Node> { struct Node {} *x_1_2_1; } x_3_1_1; int x_3_1_2; struct RefPtr<WebCore::Node> { struct Node {} *x_3_2_1; } x_3_1_3; } x3; struct RangeBoundaryPoint { struct RefPtr<WebCore::Node> { struct Node {} *x_1_2_1; } x_4_1_1; int x_4_1_2; struct RefPtr<WebCore::Node> { struct Node {} *x_3_2_1; } x_4_1_3; } x4; }*)arg1;
- (BOOL)_prepareAccessibilityCall;
- (id)_stringForRange:(struct _NSRange { unsigned int x1; unsigned int x2; })arg1 attributed:(BOOL)arg2;
- (unsigned int)accessibilityARIAColumnCount;
- (unsigned int)accessibilityARIAColumnIndex;
- (id)accessibilityARIACurrentStatus;
- (BOOL)accessibilityARIAIsBusy;
- (BOOL)accessibilityARIALiveRegionIsAtomic;
- (id)accessibilityARIALiveRegionStatus;
- (id)accessibilityARIARelevantStatus;
- (unsigned int)accessibilityARIARowCount;
- (unsigned int)accessibilityARIARowIndex;
- (struct CGPoint { double x1; double x2; })accessibilityActivationPoint;
- (BOOL)accessibilityCanFuzzyHitTest;
- (BOOL)accessibilityCanSetValue;
- (struct CGPoint { double x1; double x2; })accessibilityClickPoint;
- (unsigned int)accessibilityColumnCount;
- (struct _NSRange { unsigned int x1; unsigned int x2; })accessibilityColumnRange;
- (id)accessibilityContainer;
- (void)accessibilityDecreaseSelection:(int)arg1;
- (void)accessibilityDecrement;
- (id)accessibilityElementAtIndex:(int)arg1;
- (int)accessibilityElementCount;
- (void)accessibilityElementDidBecomeFocused;
- (id)accessibilityElementForRow:(int)arg1 andColumn:(int)arg2;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })accessibilityElementRect;
- (id)accessibilityFlowToElements;
- (id)accessibilityFocusedUIElement;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })accessibilityFrame;
- (BOOL)accessibilityHasPopup;
- (id)accessibilityHeaderElements;
- (id)accessibilityHint;
- (id)accessibilityHitTest:(struct CGPoint { double x1; double x2; })arg1;
- (id)accessibilityIdentifier;
- (void)accessibilityIncreaseSelection:(int)arg1;
- (void)accessibilityIncrement;
- (id)accessibilityInvalidStatus;
- (BOOL)accessibilityIsAttachmentElement;
- (BOOL)accessibilityIsComboBox;
- (BOOL)accessibilityIsDialog;
- (BOOL)accessibilityIsExpanded;
- (BOOL)accessibilityIsMathTopObject;
- (BOOL)accessibilityIsPressed;
- (id)accessibilityLabel;
- (id)accessibilityLanguage;
- (id)accessibilityLinkedElement;
- (id)accessibilityMathBaseObject;
- (id)accessibilityMathDenominatorObject;
- (id)accessibilityMathFencedCloseString;
- (id)accessibilityMathFencedOpenString;
- (int)accessibilityMathLineThickness;
- (id)accessibilityMathNumeratorObject;
- (id)accessibilityMathOverObject;
- (id)accessibilityMathPostscripts;
- (id)accessibilityMathPrescripts;
- (id)accessibilityMathRadicandObject;
- (id)accessibilityMathRootIndexObject;
- (id)accessibilityMathSubscriptObject;
- (id)accessibilityMathSuperscriptObject;
- (id)accessibilityMathType;
- (id)accessibilityMathUnderObject;
- (void)accessibilityModifySelection:(int)arg1 increase:(BOOL)arg2;
- (void)accessibilityMoveSelectionToMarker:(id)arg1;
- (struct WebAccessibilityObjectWrapper { Class x1; struct AccessibilityObject {} *x2; int x3; unsigned int x4; }*)accessibilityObjectForTextMarker:(id)arg1;
- (id)accessibilityPlaceholderValue;
- (id)accessibilityPlatformMathSubscriptKey;
- (id)accessibilityPlatformMathSuperscriptKey;
- (struct WebAccessibilityObjectWrapper { Class x1; struct AccessibilityObject {} *x2; int x3; unsigned int x4; }*)accessibilityPostProcessHitTest:(struct CGPoint { double x1; double x2; })arg1;
- (BOOL)accessibilityRequired;
- (id)accessibilityRoleDescription;
- (unsigned int)accessibilityRowCount;
- (struct _NSRange { unsigned int x1; unsigned int x2; })accessibilityRowRange;
- (BOOL)accessibilityScroll:(int)arg1;
- (id)accessibilitySpeechHint;
- (BOOL)accessibilitySupportsARIAExpanded;
- (BOOL)accessibilitySupportsARIAPressed;
- (id)accessibilityTitleElement;
- (unsigned int)accessibilityTraits;
- (id)accessibilityURL;
- (id)accessibilityValue;
- (id)arrayOfTextForTextMarkers:(id)arg1 attributed:(BOOL)arg2;
- (id)attachmentView;
- (id)attributedStringForRange:(struct _NSRange { unsigned int x1; unsigned int x2; })arg1;
- (BOOL)containsUnnaturallySegmentedChildren;
- (struct CGPoint { double x1; double x2; })convertPointToScreenSpace:(struct FloatPoint { double x1; double x2; }*)arg1;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })convertRectToScreenSpace:(struct IntRect { struct IntPoint { int x_1_1_1; int x_1_1_2; } x1; struct IntSize { int x_2_1_1; int x_2_1_2; } x2; }*)arg1;
- (void)dealloc;
- (id)description;
- (void)detach;
- (BOOL)determineIsAccessibilityElement;
- (void)disableAttributeCaching;
- (struct _NSRange { unsigned int x1; unsigned int x2; })elementTextRange;
- (id)elementsForRange:(struct _NSRange { unsigned int x1; unsigned int x2; })arg1;
- (void)enableAttributeCaching;
- (BOOL)fileUploadButtonReturnsValueInTitle;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })frameForTextMarkers:(id)arg1;
- (int)indexOfAccessibilityElement:(id)arg1;
- (id)initWithAccessibilityObject:(struct AccessibilityObject { int (**x1)(); unsigned int x2; unsigned int x3; struct Vector<WTF::RefPtr<WebCore::AccessibilityObject>, 0, WTF::CrashOnOverflow, 16> { struct RefPtr<WebCore::AccessibilityObject> {} *x_4_1_1; unsigned int x_4_1_2; unsigned int x_4_1_3; } x4; bool x5; int x6; int x7; struct RetainPtr<WebAccessibilityObjectWrapper> { void *x_8_1_1; } x8; }*)arg1;
- (BOOL)isAccessibilityElement;
- (BOOL)isAttachment;
- (BOOL)isSVGGroupElement;
- (int)lengthForTextMarkers:(id)arg1;
- (id)lineEndMarkerForMarker:(id)arg1;
- (id)lineStartMarkerForMarker:(id)arg1;
- (id)nextMarkerForCharacterOffset:(struct CharacterOffset { struct Node {} *x1; int x2; int x3; int x4; }*)arg1;
- (id)nextMarkerForMarker:(id)arg1;
- (int)positionForTextMarker:(id)arg1;
- (void)postChildrenChangedNotification;
- (void)postExpandedChangedNotification;
- (void)postFocusChangeNotification;
- (void)postInvalidStatusChangedNotification;
- (void)postLayoutChangeNotification;
- (void)postLiveRegionChangeNotification;
- (void)postLiveRegionCreatedNotification;
- (void)postLoadCompleteNotification;
- (void)postScrollStatusChangeNotification;
- (void)postSelectedTextChangeNotification;
- (void)postValueChangedNotification;
- (id)previousMarkerForCharacterOffset:(struct CharacterOffset { struct Node {} *x1; int x2; int x3; int x4; }*)arg1;
- (id)previousMarkerForMarker:(id)arg1;
- (struct RefPtr<WebCore::Range> { struct Range {} *x1; })rangeForTextMarkers:(id)arg1;
- (id)selectedTextMarker;
- (id)selectionRangeString;
- (id)startOrEndTextMarkerForTextMarkers:(id)arg1 isStart:(BOOL)arg2;
- (id)stringForRange:(struct _NSRange { unsigned int x1; unsigned int x2; })arg1;
- (id)stringForTextMarkers:(id)arg1;
- (BOOL)stringValueShouldBeUsedInLabel;
- (struct AccessibilityTableCell { int (**x1)(); unsigned int x2; unsigned int x3; struct Vector<WTF::RefPtr<WebCore::AccessibilityObject>, 0, WTF::CrashOnOverflow, 16> { struct RefPtr<WebCore::AccessibilityObject> {} *x_4_1_1; unsigned int x_4_1_2; unsigned int x_4_1_3; } x4; bool x5; int x6; int x7; struct RetainPtr<WebAccessibilityObjectWrapper> { void *x_8_1_1; } x8; int x9; bool x10; int x11; struct Node {} *x12; struct RenderObject {} *x13; int x14; int x15; }*)tableCellParent;
- (struct AccessibilityTable { int (**x1)(); unsigned int x2; unsigned int x3; struct Vector<WTF::RefPtr<WebCore::AccessibilityObject>, 0, WTF::CrashOnOverflow, 16> { struct RefPtr<WebCore::AccessibilityObject> {} *x_4_1_1; unsigned int x_4_1_2; unsigned int x_4_1_3; } x4; bool x5; int x6; int x7; struct RetainPtr<WebAccessibilityObjectWrapper> { void *x_8_1_1; } x8; int x9; bool x10; int x11; struct Node {} *x12; struct RenderObject {} *x13; struct Vector<WTF::RefPtr<WebCore::AccessibilityObject>, 0, WTF::CrashOnOverflow, 16> { struct RefPtr<WebCore::AccessibilityObject> {} *x_14_1_1; unsigned int x_14_1_2; unsigned int x_14_1_3; } x14; struct Vector<WTF::RefPtr<WebCore::AccessibilityObject>, 0, WTF::CrashOnOverflow, 16> { struct RefPtr<WebCore::AccessibilityObject> {} *x_15_1_1; unsigned int x_15_1_2; unsigned int x_15_1_3; } x15; struct RefPtr<WebCore::AccessibilityObject> { struct AccessibilityObject {} *x_16_1_1; } x16; bool x17; }*)tableParent;
- (id)textMarkerForPoint:(struct CGPoint { double x1; double x2; })arg1;
- (id)textMarkerForPosition:(int)arg1;
- (id)textMarkerRange;
- (id)textMarkerRangeForMarkers:(id)arg1;
- (id)textMarkerRangeForSelection;
- (id)textMarkersForRange:(struct RefPtr<WebCore::Range> { struct Range {} *x1; })arg1;

@end
