/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/iWorkImport.framework/iWorkImport
 */

/* RuntimeBrowser encountered an ivar type encoding it does not handle. 
   See Warning(s) below.
 */

@interface TSTCustomFormatListStemMatchObject : NSObject <NSCopying> {
    struct TSUCustomFormat { struct ObjcSharedPtr<NSString> { id x_1_1_1; } x1; id x2; int x3; struct { id x_4_1_1; id x_4_1_2; id x_4_1_3; id x_4_1_4; double x_4_1_5; unsigned int x_4_1_6 : 8; unsigned char x_4_1_7; unsigned char x_4_1_8; unsigned char x_4_1_9; unsigned char x_4_1_10; unsigned char x_4_1_11; unsigned char x_4_1_12; unsigned char x_4_1_13; unsigned short x_4_1_14; unsigned int x_4_1_15 : 1; unsigned int x_4_1_16 : 1; unsigned int x_4_1_17 : 1; unsigned int x_4_1_18 : 1; unsigned int x_4_1_19 : 1; unsigned int x_4_1_20 : 1; } x4; struct vector<TSUCustomFormatCondition, std::__1::allocator<TSUCustomFormatCondition> > { struct { /* ? */ } *x_5_1_1; struct { /* ? */ } *x_5_1_2; struct __compressed_pair<TSUCustomFormatCondition *, std::__1::allocator<TSUCustomFormatCondition> > { struct { /* ? */ } *x_3_2_1; } x_5_1_3; } x5; } *mCustomFormat;
}

@property(readonly) struct TSUCustomFormat { struct ObjcSharedPtr<NSString> { id x_1_1_1; } x1; id x2; int x3; struct { id x_4_1_1; id x_4_1_2; id x_4_1_3; id x_4_1_4; double x_4_1_5; unsigned int x_4_1_6 : 8; unsigned char x_4_1_7; unsigned char x_4_1_8; unsigned char x_4_1_9; unsigned char x_4_1_10; unsigned char x_4_1_11; unsigned char x_4_1_12; unsigned char x_4_1_13; unsigned short x_4_1_14; unsigned int x_4_1_15 : 1; unsigned int x_4_1_16 : 1; unsigned int x_4_1_17 : 1; unsigned int x_4_1_18 : 1; unsigned int x_4_1_19 : 1; unsigned int x_4_1_20 : 1; } x4; /* Warning: unhandled struct encoding: '{vector<TSUCustomFormatCondition' */ struct x5; void*x6; void*x7; void*x8; void*x9; void*x10; unsigned int x11; void*x12; void*x13; void*x14; void*x15; void*x16; void*x17; void*x18; void*x19; void*x20; void*x21; void*x22; void*x23; void*x24; void*x25; void*x26; in void*x27; short x28; void*x29; int x30; void*x31; void*x32; void*x33; in void*x34; void*x35; void*x36; double x37; void*x38; void*x39; void*x40; short x41; void*x42; void*x43; void*x44; out void*x45; const void*x46; void*x47; void*x48; void*x49; void*x50; void*x51; void*x52; void*x53; void*x54; void*x55; void*x56; void*x57; void*x58; void*x59; void*x60; void*x61; void*x62; void*x63; void*x64; void*x65; void*x66; void*x67; void*x68; void*x69; void*x70; in void*x71; short x72; void*x73; int x74; void*x75; void*x76; void*x77; in void*x78; void*x79; void*x80; double x81; void*x82; void*x83; void*x84; short x85; void*x86; void*x87; void*x88; out void*x89; const void*x90; void*x91; void*x92; void*x93; void*x94; void*x95; void*x96; void*x97; void*x98; void*x99; void*x100; void*x101; void*x102; void*x103; void*x104; void*x105; void*x106; void*x107; void*x108; void*x109; void*x110; void*x111; void*x112; }* customFormat; /* unknown property attribute:  std::__1::allocator<TSUCustomFormatCondition> >=^{?}}}} */

+ (id)stemMatchObjectWithCustomFormat:(struct TSUCustomFormat { struct ObjcSharedPtr<NSString> { id x_1_1_1; } x1; id x2; int x3; struct { id x_4_1_1; id x_4_1_2; id x_4_1_3; id x_4_1_4; double x_4_1_5; unsigned int x_4_1_6 : 8; unsigned char x_4_1_7; unsigned char x_4_1_8; unsigned char x_4_1_9; unsigned char x_4_1_10; unsigned char x_4_1_11; unsigned char x_4_1_12; unsigned char x_4_1_13; unsigned short x_4_1_14; unsigned int x_4_1_15 : 1; unsigned int x_4_1_16 : 1; unsigned int x_4_1_17 : 1; unsigned int x_4_1_18 : 1; unsigned int x_4_1_19 : 1; unsigned int x_4_1_20 : 1; } x4; struct vector<TSUCustomFormatCondition, std::__1::allocator<TSUCustomFormatCondition> > { struct { /* ? */ } *x_5_1_1; struct { /* ? */ } *x_5_1_2; struct __compressed_pair<TSUCustomFormatCondition *, std::__1::allocator<TSUCustomFormatCondition> > { struct { /* ? */ } *x_3_2_1; } x_5_1_3; } x5; }*)arg1;

- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (struct TSUCustomFormat { struct ObjcSharedPtr<NSString> { id x_1_1_1; } x1; id x2; int x3; struct { id x_4_1_1; id x_4_1_2; id x_4_1_3; id x_4_1_4; double x_4_1_5; unsigned int x_4_1_6 : 8; unsigned char x_4_1_7; unsigned char x_4_1_8; unsigned char x_4_1_9; unsigned char x_4_1_10; unsigned char x_4_1_11; unsigned char x_4_1_12; unsigned char x_4_1_13; unsigned short x_4_1_14; unsigned int x_4_1_15 : 1; unsigned int x_4_1_16 : 1; unsigned int x_4_1_17 : 1; unsigned int x_4_1_18 : 1; unsigned int x_4_1_19 : 1; unsigned int x_4_1_20 : 1; } x4; struct vector<TSUCustomFormatCondition, std::__1::allocator<TSUCustomFormatCondition> > { struct { /* ? */ } *x_5_1_1; struct { /* ? */ } *x_5_1_2; struct __compressed_pair<TSUCustomFormatCondition *, std::__1::allocator<TSUCustomFormatCondition> > { struct { /* ? */ } *x_3_2_1; } x_5_1_3; } x5; }*)customFormat;
- (void)dealloc;
- (id)description;
- (unsigned long long)hash;
- (id)initObjectWithCustomFormat:(struct TSUCustomFormat { struct ObjcSharedPtr<NSString> { id x_1_1_1; } x1; id x2; int x3; struct { id x_4_1_1; id x_4_1_2; id x_4_1_3; id x_4_1_4; double x_4_1_5; unsigned int x_4_1_6 : 8; unsigned char x_4_1_7; unsigned char x_4_1_8; unsigned char x_4_1_9; unsigned char x_4_1_10; unsigned char x_4_1_11; unsigned char x_4_1_12; unsigned char x_4_1_13; unsigned short x_4_1_14; unsigned int x_4_1_15 : 1; unsigned int x_4_1_16 : 1; unsigned int x_4_1_17 : 1; unsigned int x_4_1_18 : 1; unsigned int x_4_1_19 : 1; unsigned int x_4_1_20 : 1; } x4; struct vector<TSUCustomFormatCondition, std::__1::allocator<TSUCustomFormatCondition> > { struct { /* ? */ } *x_5_1_1; struct { /* ? */ } *x_5_1_2; struct __compressed_pair<TSUCustomFormatCondition *, std::__1::allocator<TSUCustomFormatCondition> > { struct { /* ? */ } *x_3_2_1; } x_5_1_3; } x5; }*)arg1;
- (bool)isEqual:(id)arg1;

@end
