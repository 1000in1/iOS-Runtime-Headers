/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/iWorkImport.framework/iWorkImport
 */

/* RuntimeBrowser encountered one or more ivar type encodings for a function pointer. 
   The runtime does not encode function signature information.  We use a signature of: 
           "int (*funcName)()",  where funcName might be null. 
 */

@class NSObject<TSDContainerInfo>, TSDBezierPath, TSDImageAdjustments, TSDInfoGeometry, TSDMaskInfo, TSDMediaStyle, TSPData, TSPObject<TSDOwningAttachment>;

@interface TSDImageInfo : TSDMediaInfo <TSDContainerInfo, TSDMixing, TSSPresetSource, TSSThemedObject, TSKTransformableObject, TSDReducableInfo> {
    struct CGSize { 
        float width; 
        float height; 
    TSPData *mAdjustedImageData;
    TSPData *mEnhancedImageData;
    TSDImageAdjustments *mImageAdjustments;
    TSPData *mImageData;
    TSDBezierPath *mInstantAlphaPath;
    TSDMaskInfo *mMaskInfo;
    } mNaturalSize;
    TSPData *mOriginalImageData;
    TSDMediaStyle *mStyle;
    TSPData *mThumbnailAdjustedImageData;
    TSPData *mThumbnailImageData;
    TSDBezierPath *mTracedPath;
}

@property(retain) TSPData * adjustedImageData;
@property(getter=isAnchoredToText,readonly) BOOL anchoredToText;
@property(getter=isAttachedToBodyText,readonly) BOOL attachedToBodyText;
@property(retain) TSPData * enhancedImageData;
@property(getter=isFloatingAboveText,readonly) BOOL floatingAboveText;
@property(copy) TSDInfoGeometry * geometry;
@property(copy) TSDImageAdjustments * imageAdjustments;
@property(retain) TSPData * imageData;
@property(readonly) TSDMediaStyle * imageStyle;
@property(getter=isInlineWithText,readonly) BOOL inlineWithText;
@property(retain) TSDBezierPath * instantAlphaPath;
@property(retain) TSDMaskInfo * maskInfo;
@property BOOL matchesObjectPlaceholderGeometry;
@property struct CGSize { float x1; float x2; } naturalSize;
@property(retain) TSPData * originalImageData;
@property TSPObject<TSDOwningAttachment> * owningAttachment;
@property(readonly) TSPObject<TSDOwningAttachment> * owningAttachmentNoRecurse;
@property NSObject<TSDContainerInfo> * parentInfo;
@property(retain) TSPData * thumbnailAdjustedImageData;
@property(retain) TSPData * thumbnailImageData;
@property(readonly) TSDBezierPath * tracedPath;

+ (void)adjustIncomingImageGeometry:(id)arg1 maskGeometry:(id)arg2 forImageData:(id)arg3 maskedWithInstantAlphaPath:(id)arg4 withNaturalSize:(struct CGSize { float x1; float x2; })arg5 forTargetImageGeometry:(id)arg6 withTargetMaskGeometry:(id)arg7;
+ (void)bootstrapPresetsOfKind:(id)arg1 inTheme:(id)arg2 alternate:(int)arg3 reservedCount:(unsigned int)arg4;
+ (void)bootstrapPresetsOfKind:(id)arg1 inTheme:(id)arg2 alternate:(int)arg3;
+ (id)bootstrapPropertyMapForPresetIndex:(unsigned int)arg1 inTheme:(id)arg2 alternate:(int)arg3;
+ (id)presetKinds;

- (void)acceptVisitor:(id)arg1;
- (id)adjustedImageData;
- (struct CGPoint { float x1; float x2; })centerForReplacingWithNewMedia;
- (id)childCommandForApplyThemeCommand:(id)arg1;
- (id)childInfos;
- (id)commandForTransformingByTransform:(struct CGAffineTransform { float x1; float x2; float x3; float x4; float x5; float x6; })arg1 context:(id)arg2 transformedObjects:(id)arg3 inBounds:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg4;
- (id)commandToFlipWithOrientation:(int)arg1;
- (id)commandToReplaceImageData:(id)arg1 withReducedImageData:(id)arg2 associatedHint:(id)arg3;
- (struct CGAffineTransform { float x1; float x2; float x3; float x4; float x5; float x6; })computeFullTransform;
- (id)copyWithContext:(id)arg1 style:(id)arg2;
- (id)copyWithContext:(id)arg1;
- (void)dealloc;
- (id)defaultMaskInfo;
- (id)defaultMaskInfoWithContext:(id)arg1;
- (struct CGSize { float x1; float x2; })defaultOriginalSize;
- (Class)editorClass;
- (id)enhancedImageData;
- (id)geometry;
- (id)geometryWithMask;
- (id)i_thumbnailForImageData:(id)arg1;
- (id)imageAdjustments;
- (id)imageData;
- (id)imageDatasForReducingFileSizeWithAssociatedHints;
- (id)imageStyle;
- (id)initFromUnarchiver:(id)arg1;
- (id)initWithContext:(id)arg1 geometry:(id)arg2 style:(id)arg3 imageData:(id)arg4 originalImageData:(id)arg5;
- (id)initWithContext:(id)arg1 geometry:(id)arg2;
- (id)instantAlphaPath;
- (BOOL)isMasked;
- (BOOL)isPDF;
- (BOOL)isValid;
- (Class)layoutClass;
- (void)loadFromArchive:(const struct ImageArchive { int (**x1)(); struct UnknownFieldSet { struct vector<google::protobuf::UnknownField, std::__1::allocator<google::protobuf::UnknownField> > {} *x_2_1_1; } x2; struct DrawableArchive {} *x3; struct DataReference {} *x4; struct Reference {} *x5; struct Size {} *x6; struct Reference {} *x7; struct DataReference {} *x8; struct DataReference {} *x9; struct Size {} *x10; struct Path {} *x11; struct ImageAdjustmentsArchive {} *x12; struct DataReference {} *x13; struct DataReference {} *x14; struct DataReference {} *x15; struct Reference {} *x16; struct Reference {} *x17; struct Reference {} *x18; unsigned int x19; int x20; unsigned int x21[1]; }*)arg1 unarchiver:(id)arg2;
- (BOOL)maskCanBeReset;
- (id)maskInfo;
- (id)mediaDisplayName;
- (id)mediaFileType;
- (id)mixedObjectWithFraction:(float)arg1 ofObject:(id)arg2;
- (int)mixingTypeWithObject:(id)arg1;
- (struct CGSize { float x1; float x2; })naturalSize;
- (id)objectForProperty:(int)arg1;
- (id)originalImageData;
- (struct CGSize { float x1; float x2; })originalSize;
- (void)p_upgradeImageGeometry;
- (void)p_upgradeImageThumbnail;
- (id)parentInfo;
- (id)presetKind;
- (struct CGSize { float x1; float x2; })rawDataSize;
- (Class)repClass;
- (void)saveToArchive:(struct ImageArchive { int (**x1)(); struct UnknownFieldSet { struct vector<google::protobuf::UnknownField, std::__1::allocator<google::protobuf::UnknownField> > {} *x_2_1_1; } x2; struct DrawableArchive {} *x3; struct DataReference {} *x4; struct Reference {} *x5; struct Size {} *x6; struct Reference {} *x7; struct DataReference {} *x8; struct DataReference {} *x9; struct Size {} *x10; struct Path {} *x11; struct ImageAdjustmentsArchive {} *x12; struct DataReference {} *x13; struct DataReference {} *x14; struct DataReference {} *x15; struct Reference {} *x16; struct Reference {} *x17; struct Reference {} *x18; unsigned int x19; int x20; unsigned int x21[1]; }*)arg1 archiver:(id)arg2;
- (void)saveToArchiver:(id)arg1;
- (void)setAdjustedImageData:(id)arg1;
- (void)setEnhancedImageData:(id)arg1;
- (void)setExteriorTextWrap:(id)arg1;
- (void)setImageAdjustments:(id)arg1;
- (void)setImageData:(id)arg1;
- (void)setInstantAlphaPath:(id)arg1;
- (void)setMaskInfo:(id)arg1;
- (void)setNaturalSize:(struct CGSize { float x1; float x2; })arg1;
- (void)setOriginalImageData:(id)arg1;
- (void)setParentInfo:(id)arg1;
- (void)setStyle:(id)arg1;
- (void)setThumbnailAdjustedImageData:(id)arg1;
- (void)setThumbnailImageData:(id)arg1;
- (id)style;
- (Class)styleClass;
- (id)subclassInitFromUnarchiver:(id)arg1;
- (struct CGSize { float x1; float x2; })targetSizeForImageData:(id)arg1 associatedHint:(id)arg2;
- (id)thumbnailAdjustedImageData;
- (id)thumbnailImageData;
- (id)titleForBuildChunk:(id)arg1;
- (id)tracedPath;
- (void)updateGeometryToReplaceMediaInfo:(id)arg1;
- (id)updatedMaskInfoGeometryForImageDraggedBy:(struct CGPoint { float x1; float x2; })arg1;
- (void)wasRemovedFromDocumentRoot:(id)arg1;

@end
