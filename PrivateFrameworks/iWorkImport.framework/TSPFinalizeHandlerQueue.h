/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/iWorkImport.framework/iWorkImport
 */

@interface TSPFinalizeHandlerQueue : NSObject {
    NSObject<OS_dispatch_queue> * _accessQueue;
    struct unordered_map<const int, TSP::FinalizeHandlerItem, TSP::IdentifierHash, std::__1::equal_to<const int>, std::__1::allocator<std::__1::pair<const int, TSP::FinalizeHandlerItem> > > { 
        struct __hash_table<std::__1::__hash_value_type<const int, TSP::FinalizeHandlerItem>, std::__1::__unordered_map_hasher<const int, std::__1::__hash_value_type<const int, TSP::FinalizeHandlerItem>, TSP::IdentifierHash, true>, std::__1::__unordered_map_equal<const int, std::__1::__hash_value_type<const int, TSP::FinalizeHandlerItem>, std::__1::equal_to<const int>, true>, std::__1::allocator<std::__1::__hash_value_type<const int, TSP::FinalizeHandlerItem> > > { 
            struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<const int, TSP::FinalizeHandlerItem>, void *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<const int, TSP::FinalizeHandlerItem>, void *> *> > > { 
                struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<const int, TSP::FinalizeHandlerItem>, void *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<const int, TSP::FinalizeHandlerItem>, void *> *> > > { 
                    struct __hash_node<std::__1::__hash_value_type<const int, TSP::FinalizeHandlerItem>, void *> {} **__first_; 
                    struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<const int, TSP::FinalizeHandlerItem>, void *> *> > { 
                        struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<const int, TSP::FinalizeHandlerItem>, void *> *> > { 
                            unsigned long __first_; 
                        } __data_; 
                    } __second_; 
                } __ptr_; 
            } __bucket_list_; 
            struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const int, TSP::FinalizeHandlerItem>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<const int, TSP::FinalizeHandlerItem>, void *> > > { 
                struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const int, TSP::FinalizeHandlerItem>, void *> *> { 
                    struct __hash_node<std::__1::__hash_value_type<const int, TSP::FinalizeHandlerItem>, void *> {} *__next_; 
                } __first_; 
            } __p1_; 
            struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<const int, std::__1::__hash_value_type<const int, TSP::FinalizeHandlerItem>, TSP::IdentifierHash, true> > { 
                unsigned long __first_; 
            } __p2_; 
            struct __compressed_pair<float, std::__1::__unordered_map_equal<const int, std::__1::__hash_value_type<const int, TSP::FinalizeHandlerItem>, std::__1::equal_to<const int>, true> > { 
                double __first_; 
            } __p3_; 
        } __table_; 
    }  _map;
    struct vector<TSP::FinalizeHandlerItem *, std::__1::allocator<TSP::FinalizeHandlerItem *> > { 
        struct FinalizeHandlerItem {} **__begin_; 
        struct FinalizeHandlerItem {} **__end_; 
        struct __compressed_pair<TSP::FinalizeHandlerItem **, std::__1::allocator<TSP::FinalizeHandlerItem *> > { 
            struct FinalizeHandlerItem {} **__first_; 
        } __end_cap_; 
    }  _order;
    int  _rootObjectIdentifier;
}

- (id).cxx_construct;
- (void).cxx_destruct;
- (void)addFinalizeHandlers:(struct vector<void (^)(), std::__1::allocator<void (^)()> >=^@?^@?{__compressed_pair<void (^__strong *)(), std::__1::allocator<void (^)()> >=^@? {}*)arg1 strongReferencesOrNull:(struct unordered_map<const int, bool, TSP::IdentifierHash, std::__1::equal_to<const int>, std::__1::allocator<std::__1::pair<const int, bool> > > { struct __hash_table<std::__1::__hash_value_type<const int, bool>, std::__1::__unordered_map_hasher<const int, std::__1::__hash_value_type<const int, bool>, TSP::IdentifierHash, true>, std::__1::__unordered_map_equal<const int, std::__1::__hash_value_type<const int, bool>, std::__1::equal_to<const int>, true>, std::__1::allocator<std::__1::__hash_value_type<const int, bool> > > { struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<const int, bool>, void *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<const int, bool>, void *> *> > > { struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<const int, bool>, void *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<const int, bool>, void *> *> > > { struct __hash_node<std::__1::__hash_value_type<const int, bool>, void *> {} **x_1_3_1; struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<const int, bool>, void *> *> > { struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<const int, bool>, void *> *> > { unsigned long x_1_5_1; } x_2_4_1; } x_1_3_2; } x_1_2_1; } x_1_1_1; struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const int, bool>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<const int, bool>, void *> > > { struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const int, bool>, void *> *> { struct __hash_node<std::__1::__hash_value_type<const int, bool>, void *> {} *x_1_3_1; } x_2_2_1; } x_1_1_2; } x1; }*)arg2 forIdentifier:(int)arg3;
- (id)init;
- (id)initWithRootObjectIdentifier:(int)arg1;
- (void)reset;
- (void)runFinalizeHandlerForItem:(struct FinalizeHandlerItem { struct vector<void (^)(), std::__1::allocator<void (^)()> >=^@?^@?{__compressed_pair<void (^__strong *)(), std::__1::allocator<void (^)()> >=^@? {} x1; }*)arg1;
- (BOOL)runFinalizeHandlers;
- (void)visitItemForCycleDetection:(struct FinalizeHandlerItem { struct vector<void (^)(), std::__1::allocator<void (^)()> >=^@?^@?{__compressed_pair<void (^__strong *)(), std::__1::allocator<void (^)()> >=^@? {} x1; }*)arg1;

@end
