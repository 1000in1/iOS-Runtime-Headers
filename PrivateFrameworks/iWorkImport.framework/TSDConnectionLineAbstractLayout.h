/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/iWorkImport.framework/iWorkImport
 */

@interface TSDConnectionLineAbstractLayout : TSDShapeLayout {
    struct CGPoint { 
        double x; 
        double y; 
    }  mAcumulatedDrag;
    double  mCachedFromOutset;
    TSUBezierPath * mCachedFromOutsetWrapPath;
    TSUBezierPath * mCachedFromWrapPath;
    double  mCachedToOutset;
    TSUBezierPath * mCachedToOutsetWrapPath;
    TSUBezierPath * mCachedToWrapPath;
    TSUBezierPath * mClippedBezierPath;
    TSDLayout * mConnectedFrom;
    NSObject<TSDInfo> * mConnectedFromInfo;
    TSDInfoGeometry * mConnectedInfoGeometry;
    TSDConnectionLinePathSource * mConnectedPathSource;
    TSDLayout * mConnectedTo;
    NSObject<TSDInfo> * mConnectedToInfo;
    double  mDynamicOutsetFrom;
    double  mDynamicOutsetTo;
    unsigned int  mDynamicOutsetType;
    struct CGPoint { 
        double x; 
        double y; 
    }  mLooseEndPosition;
    TSDLayout * mOldConnectedFrom;
    TSDLayout * mOldConnectedTo;
    TSDConnectionLinePathSource * mOriginalPathSource;
    struct CGPoint { 
        double x; 
        double y; 
    }  mResizeControlPoints;
    BOOL  mUseDynamicOutsets;
    BOOL  mUseResizePoints;
    BOOL  mValidConnections;
    BOOL  mValidLine;
    BOOL  mVisibleLine;
}

@property (nonatomic) TSDLayout *connectedFrom;
@property (nonatomic) NSObject<TSDInfo> *connectedFromInfo;
@property (nonatomic, readonly) TSDConnectionLinePathSource *connectedPathSource;
@property (nonatomic) TSDLayout *connectedTo;
@property (nonatomic) NSObject<TSDInfo> *connectedToInfo;
@property (nonatomic) double dynamicOutsetFrom;
@property (nonatomic) double dynamicOutsetTo;
@property (nonatomic) unsigned int dynamicOutsetType;
@property (nonatomic, readonly) double outsetFrom;
@property (nonatomic, readonly) double outsetTo;
@property (nonatomic) BOOL useDynamicOutsets;
@property (nonatomic, readonly) BOOL validLine;

- (id)additionalLayoutsForRepCreation;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })boundsForStandardKnobs;
- (BOOL)canBeIntersected;
- (BOOL)canEndpointsCoincide;
- (BOOL)canFlip;
- (BOOL)canResetTextAndObjectHandles;
- (void)checkConnections;
- (id)clipPath:(id)arg1 onLayout:(id)arg2 outset:(float)arg3 reversed:(BOOL)arg4 isValid:(BOOL*)arg5;
- (id)connectedFrom;
- (id)connectedFromInfo;
- (void)connectedLayoutDisconnected:(id)arg1;
- (void)connectedLayoutInvalidated:(id)arg1;
- (id)connectedPathSource;
- (id)connectedTo;
- (id)connectedToInfo;
- (id)connectionLineInfo;
- (struct CGPoint { double x1; double x2; })controlPointForPointA:(struct CGPoint { double x1; double x2; })arg1 pointB:(struct CGPoint { double x1; double x2; })arg2 andOriginalA:(struct CGPoint { double x1; double x2; })arg3 originalB:(struct CGPoint { double x1; double x2; })arg4;
- (id)createConnectedPathFrom:(id)arg1 to:(id)arg2 withControlPoints:(struct CGPoint { double x1; double x2; })arg3;
- (void)dealloc;
- (float)dynamicOutsetFrom;
- (float)dynamicOutsetTo;
- (unsigned int)dynamicOutsetType;
- (struct CGPoint { double x1; double x2; })getControlKnobPosition:(unsigned int)arg1;
- (void)invalidateAndCleanupConnectedLayouts;
- (void)invalidateConnections;
- (void)invalidatePath;
- (void)invalidatePosition;
- (void)invalidateSize;
- (BOOL)isDraggable;
- (BOOL)isInvisible;
- (BOOL)isStraightLine;
- (id)layoutInfoGeometry;
- (float)outsetFrom;
- (float)outsetTo;
- (id)p_infoForConnectingToInfo:(id)arg1;
- (BOOL)p_isConnectedToLockedObjects;
- (void)parentDidChange;
- (id)path;
- (BOOL)pathIsLineSegment;
- (BOOL)pathIsOpen;
- (id)pathSource;
- (void)processChangedProperty:(int)arg1;
- (id)reliedOnLayouts;
- (void)removeConnections;
- (void)setConnectedFrom:(id)arg1;
- (void)setConnectedFromInfo:(id)arg1;
- (void)setConnectedTo:(id)arg1;
- (void)setConnectedToInfo:(id)arg1;
- (void)setDynamicOutsetFrom:(float)arg1;
- (void)setDynamicOutsetTo:(float)arg1;
- (void)setDynamicOutsetType:(unsigned int)arg1;
- (void)setUseDynamicOutsets:(BOOL)arg1;
- (BOOL)shouldAdjustForStrokeWidthForCollabCursor;
- (BOOL)shouldDisplayGuides;
- (BOOL)shouldValidate;
- (BOOL)supportsFlipping;
- (BOOL)supportsResize;
- (BOOL)supportsRotation;
- (struct CGPoint { double x1; double x2; })unclippedHeadPoint;
- (struct CGPoint { double x1; double x2; })unclippedTailPoint;
- (void)updateConnectedPath;
- (BOOL)useDynamicOutsets;
- (BOOL)validLine;
- (int)wrapType;

@end
