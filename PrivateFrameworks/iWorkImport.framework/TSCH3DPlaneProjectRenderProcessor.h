/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/iWorkImport.framework/iWorkImport
 */

@interface TSCH3DPlaneProjectRenderProcessor : TSCH3DTransformGeometryRenderProcessor {
    struct box<glm::detail::tvec3<float> > { 
        struct tvec3<float> { 
            union { 
                double x; 
                double r; 
                double s; 
            } ; 
            union { 
                double y; 
                double g; 
                double t; 
            } ; 
            union { 
                double z; 
                double b; 
                double p; 
            } ; 
        } mMin; 
        struct tvec3<float> { 
            union { 
                double x; 
                double r; 
                double s; 
            } ; 
            union { 
                double y; 
                double g; 
                double t; 
            } ; 
            union { 
                double z; 
                double b; 
                double p; 
            } ; 
        } mMax; 
    }  mBounds;
    struct plane<glm::detail::tvec3<float> > { 
        struct tvec3<float> { 
            union { 
                double x; 
                double r; 
                double s; 
            } ; 
            union { 
                double y; 
                double g; 
                double t; 
            } ; 
            union { 
                double z; 
                double b; 
                double p; 
            } ; 
        } mNormal; 
        double mDistance; 
    }  mPlane;
    struct tvec3<float> { 
        union { 
            double x; 
            double r; 
            double s; 
        } ; 
        union { 
            double y; 
            double g; 
            double t; 
        } ; 
        union { 
            double z; 
            double b; 
            double p; 
        } ; 
    }  mProjPt;
}

@property (nonatomic, readonly) const struct box<glm::detail::tvec3<float> > { struct tvec3<float> { union { double x_1_2_1; double x_1_2_2; double x_1_2_3; } x_1_1_1; union { double x_2_2_1; double x_2_2_2; double x_2_2_3; } x_1_1_2; union { double x_3_2_1; double x_3_2_2; double x_3_2_3; } x_1_1_3; } x1; struct tvec3<float> { union { double x_1_2_1; double x_1_2_2; double x_1_2_3; } x_2_1_1; union { double x_2_2_1; double x_2_2_2; double x_2_2_3; } x_2_1_2; union { double x_3_2_1; double x_3_2_2; double x_3_2_3; } x_2_1_3; } x2; }*bounds;

+ (id)processorWithPlane:(const struct plane<glm::detail::tvec3<float> > { struct tvec3<float> { union { double x_1_2_1; double x_1_2_2; double x_1_2_3; } x_1_1_1; union { double x_2_2_1; double x_2_2_2; double x_2_2_3; } x_1_1_2; union { double x_3_2_1; double x_3_2_2; double x_3_2_3; } x_1_1_3; } x1; double x2; }*)arg1 projPt:(const struct tvec3<float> { union { double x_1_1_1; double x_1_1_2; double x_1_1_3; } x1; union { double x_2_1_1; double x_2_1_2; double x_2_1_3; } x2; union { double x_3_1_1; double x_3_1_2; double x_3_1_3; } x3; }*)arg2;

- (id).cxx_construct;
- (const struct box<glm::detail::tvec3<float> > { struct tvec3<float> { union { double x_1_2_1; double x_1_2_2; double x_1_2_3; } x_1_1_1; union { double x_2_2_1; double x_2_2_2; double x_2_2_3; } x_1_1_2; union { double x_3_2_1; double x_3_2_2; double x_3_2_3; } x_1_1_3; } x1; struct tvec3<float> { union { double x_1_2_1; double x_1_2_2; double x_1_2_3; } x_2_1_1; union { double x_2_2_1; double x_2_2_2; double x_2_2_3; } x_2_1_2; union { double x_3_2_1; double x_3_2_2; double x_3_2_3; } x_2_1_3; } x2; }*)bounds;
- (id)initWithPlane:(const struct plane<glm::detail::tvec3<float> > { struct tvec3<float> { union { double x_1_2_1; double x_1_2_2; double x_1_2_3; } x_1_1_1; union { double x_2_2_1; double x_2_2_2; double x_2_2_3; } x_1_1_2; union { double x_3_2_1; double x_3_2_2; double x_3_2_3; } x_1_1_3; } x1; double x2; }*)arg1 projPt:(const struct tvec3<float> { union { double x_1_1_1; double x_1_1_2; double x_1_1_3; } x1; union { double x_2_1_1; double x_2_1_2; double x_2_1_3; } x2; union { double x_3_1_1; double x_3_1_2; double x_3_1_3; } x3; }*)arg2;
- (void)submit:(const /* Warning: unhandled struct encoding: '{PrimitiveInfo=iii@}' */ struct PrimitiveInfo { int x1; int x2; int x3; id x4; }*)arg1;

@end
