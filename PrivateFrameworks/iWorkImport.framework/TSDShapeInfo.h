/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/iWorkImport.framework/iWorkImport
 */

/* RuntimeBrowser encountered one or more ivar type encodings for a function pointer. 
   The runtime does not encode function signature information.  We use a signature of: 
           "int (*funcName)()",  where funcName might be null. 
 */

@class NSObject<TSDContainerInfo>, NSString, TSDFill, TSDInfoGeometry, TSDLineEnd, TSDPathSource, TSDShapeStyle, TSPObject<TSDOwningAttachment>;

@interface TSDShapeInfo : TSDStyledInfo <TSDInfoWithPathSource, TSDMixing, TSDReducableInfo, TSKSearchable> {
    TSDPathSource *mPathSource;
    TSDShapeStyle *mStyle;
}

@property(getter=isAnchoredToText,readonly) BOOL anchoredToText;
@property(getter=isAttachedToBodyText,readonly) BOOL attachedToBodyText;
@property(copy,readonly) NSString * debugDescription;
@property(copy,readonly) NSString * description;
@property(copy) TSDFill * fill;
@property(getter=isFloatingAboveText,readonly) BOOL floatingAboveText;
@property(copy) TSDInfoGeometry * geometry;
@property(readonly) unsigned int hash;
@property(copy) TSDLineEnd * headLineEnd;
@property(getter=isInlineWithText,readonly) BOOL inlineWithText;
@property BOOL matchesObjectPlaceholderGeometry;
@property TSPObject<TSDOwningAttachment> * owningAttachment;
@property(readonly) TSPObject<TSDOwningAttachment> * owningAttachmentNoRecurse;
@property NSObject<TSDContainerInfo> * parentInfo;
@property(retain) TSDPathSource * pathSource;
@property(readonly) TSDShapeStyle * shapeStyle;
@property(readonly) Class superclass;
@property(readonly) BOOL supportsShrinkTextToFit;
@property(readonly) BOOL supportsTextInset;
@property(copy) TSDLineEnd * tailLineEnd;

- (id)animationFilters;
- (id)copyWithContext:(id)arg1;
- (void)dealloc;
- (int)elementKind;
- (id)fill;
- (id)headLineEnd;
- (id)imageDatasForReducingFileSizeWithAssociatedHints;
- (id)initFromUnarchiver:(id)arg1;
- (id)initWithContext:(id)arg1 geometry:(id)arg2;
- (id)initWithContext:(id)arg1 geometry:(id)arg2 style:(id)arg3;
- (id)initWithContext:(id)arg1 geometry:(id)arg2 style:(id)arg3 pathSource:(id)arg4;
- (BOOL)isEquivalentForCrossDocumentPasteMasterComparison:(id)arg1;
- (BOOL)isTailEndOnLeftFromTemporaryLayoutForPasteboard;
- (Class)layoutClass;
- (void)loadFromArchive:(const struct ShapeArchive { int (**x1)(); struct UnknownFieldSet { struct vector<google::protobuf::UnknownField, std::__1::allocator<google::protobuf::UnknownField> > {} *x_2_1_1; } x2; unsigned int x3[1]; int x4; struct DrawableArchive {} *x5; struct Reference {} *x6; struct PathSourceArchive {} *x7; struct LineEndArchive {} *x8; struct LineEndArchive {} *x9; }*)arg1 unarchiver:(id)arg2;
- (id)mixedObjectWithFraction:(float)arg1 ofObject:(id)arg2;
- (int)mixingTypeWithObject:(id)arg1 context:(id)arg2;
- (id)objectForProperty:(int)arg1;
- (void)p_correctLineSegmentGeometry;
- (void)p_correctNearZeroWidthLines;
- (BOOL)pathIsOpen;
- (id)pathSource;
- (Class)repClass;
- (void)saveToArchive:(struct ShapeArchive { int (**x1)(); struct UnknownFieldSet { struct vector<google::protobuf::UnknownField, std::__1::allocator<google::protobuf::UnknownField> > {} *x_2_1_1; } x2; unsigned int x3[1]; int x4; struct DrawableArchive {} *x5; struct Reference {} *x6; struct PathSourceArchive {} *x7; struct LineEndArchive {} *x8; struct LineEndArchive {} *x9; }*)arg1 archiver:(id)arg2;
- (void)saveToArchiver:(id)arg1;
- (void)setFill:(id)arg1;
- (void)setHeadLineEnd:(id)arg1;
- (void)setPathSource:(id)arg1;
- (void)setStyle:(id)arg1;
- (void)setTailLineEnd:(id)arg1;
- (void)setValuesForProperties:(id)arg1;
- (id)shapeStyle;
- (BOOL)shouldFlipLineEndsForStyle:(id)arg1 isStyleTailEndOnLeft:(int)arg2;
- (id)style;
- (Class)styleClass;
- (id)subclassInitFromUnarchiver:(id)arg1;
- (BOOL)supportsShrinkTextToFit;
- (BOOL)supportsTextInset;
- (id)tailLineEnd;
- (struct CGSize { float x1; float x2; })targetSizeForImageData:(id)arg1 associatedHint:(id)arg2;

@end
