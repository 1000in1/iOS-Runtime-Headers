/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/iWorkImport.framework/iWorkImport
 */

/* RuntimeBrowser encountered one or more ivar type encodings for a function pointer. 
   The runtime does not encode function signature information.  We use a signature of: 
           "int (*funcName)()",  where funcName might be null. 
 */

@class KNSlideNode, NSArray, NSMutableArray, NSMutableDictionary, NSObject<OS_dispatch_queue>, NSString, TSUPointerKeyDictionary;

@interface KNTheme : TSATheme <TSSPresetSource, TSKTransformableObject> {
    NSMutableArray *mClassicThemeRecords;
    KNSlideNode *mDefaultMasterSlideNode;
    NSObject<OS_dispatch_queue> *mDefaultMasterSlideNodeQueue;
    TSUPointerKeyDictionary *mFormulaReferenceNamesForSlideNodesCache;
    NSArray *mMasters;
    NSMutableDictionary *mSlideNodesForFormulaReferenceNamesCache;
    int mSlideStyleIndex;
    NSString *mUUID;
}

@property(retain) NSString * UUID;
@property(retain) NSArray * classicThemeRecords;
@property(readonly) float cornerRadius;
@property(retain) KNSlideNode * defaultMasterSlideNode;
@property(retain) NSArray * masters;
@property(readonly) struct CGSize { float x1; float x2; } thumbnailSize;

+ (void)bootstrapPresetsOfKind:(id)arg1 inTheme:(id)arg2 alternate:(int)arg3;
+ (id)generateUUID;
+ (void)initialize;
+ (id)presetKinds;
+ (void)registerPresetSourceClasses;

- (id)UUID;
- (void)addClassicThemeRecord:(id)arg1;
- (void)addDefaultPresenterNotesStylesIfAbsent;
- (void)addMasterSlideNode:(id)arg1 dolcContext:(id)arg2;
- (void)addMasterSlideNode:(id)arg1 withThumbnails:(id)arg2 dolcContext:(id)arg3;
- (void)bootstrapBlackThemeOfSize:(struct CGSize { float x1; float x2; })arg1;
- (void)bootstrapGradientThemeOfSize:(struct CGSize { float x1; float x2; })arg1;
- (void)bootstrapThemeOfSize:(struct CGSize { float x1; float x2; })arg1 alternate:(int)arg2;
- (void)bootstrapWhiteThemeOfSize:(struct CGSize { float x1; float x2; })arg1;
- (id)childEnumerator;
- (id)classicThemeRecords;
- (id)commandForTransformingByTransform:(struct CGAffineTransform { float x1; float x2; float x3; float x4; float x5; float x6; })arg1 context:(id)arg2 transformedObjects:(id)arg3 inBounds:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg4;
- (BOOL)containsMasterWithName:(id)arg1;
- (float)cornerRadius;
- (void)dealloc;
- (id)defaultMasterSlideNode;
- (id)formulaReferenceNameForSlideNode:(id)arg1;
- (id)initFromUnarchiver:(id)arg1;
- (id)initWithContext:(id)arg1;
- (void)insertMasterSlideNode:(id)arg1 withThumbnails:(id)arg2 atIndex:(unsigned int)arg3 dolcContext:(id)arg4;
- (void)invalidateSlideNameCache;
- (void)loadFromArchive:(const struct ThemeArchive { int (**x1)(); struct UnknownFieldSet { struct vector<google::protobuf::UnknownField, std::__1::allocator<google::protobuf::UnknownField> > {} *x_2_1_1; } x2; struct ThemeArchive {} *x3; struct RepeatedPtrField<TSP::Reference> { void **x_4_1_1; int x_4_1_2; int x_4_1_3; int x_4_1_4; } x4; struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > {} *x5; struct RepeatedPtrField<TSP::Reference> { void **x_6_1_1; int x_6_1_2; int x_6_1_3; int x_6_1_4; } x6; struct Reference {} *x7; int x8; unsigned int x9[1]; }*)arg1 unarchiver:(id)arg2;
- (id)mappedMasterForMaster:(id)arg1;
- (id)mappedMasterForSlide:(id)arg1;
- (id)masterWithName:(id)arg1;
- (id)masters;
- (id)modelPathComponentForChild:(id)arg1;
- (id)nameForMasterCopyWithName:(id)arg1;
- (void)p_cacheSlideNodes;
- (void)p_selectSecondMasterAsDefault;
- (void)p_setDefaultMasterSlideNode:(id)arg1;
- (void)removeAllClassicThemeRecords;
- (void)removeAllMasters;
- (void)removeMasterSlideNode:(id)arg1;
- (void)resolveDefaultMaster;
- (void)saveToArchive:(struct ThemeArchive { int (**x1)(); struct UnknownFieldSet { struct vector<google::protobuf::UnknownField, std::__1::allocator<google::protobuf::UnknownField> > {} *x_2_1_1; } x2; struct ThemeArchive {} *x3; struct RepeatedPtrField<TSP::Reference> { void **x_4_1_1; int x_4_1_2; int x_4_1_3; int x_4_1_4; } x4; struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > {} *x5; struct RepeatedPtrField<TSP::Reference> { void **x_6_1_1; int x_6_1_2; int x_6_1_3; int x_6_1_4; } x6; struct Reference {} *x7; int x8; unsigned int x9[1]; }*)arg1 archiver:(id)arg2;
- (void)saveToArchiver:(id)arg1;
- (void)selectSecondMasterAsDefault;
- (void)setClassicThemeRecords:(id)arg1;
- (void)setDefaultMasterSlideNode:(id)arg1;
- (void)setMasters:(id)arg1;
- (void)setUUID:(id)arg1;
- (id)slideNamesMatchingPrefix:(id)arg1;
- (id)slideNodeForFormulaReferenceName:(id)arg1 caseSensitive:(BOOL)arg2;
- (struct CGSize { float x1; float x2; })thumbnailSize;

@end
