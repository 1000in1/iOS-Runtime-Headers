/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/iWorkImport.framework/iWorkImport
 */

@interface TSCH3DShaderProgram : NSObject {
    NSMutableString *mAccumulator;
    NSMutableArray *mConclusionSection;
    NSMutableArray *mDeclarationSection;
    NSString *mFragment;
    NSMutableSet *mFunctionNames;
    NSMutableArray *mFunctions;
    BOOL mIsLinked;
    NSMutableDictionary *mLinks;
    NSMutableArray *mOutcomeSection;
    NSMutableArray *mResolutionSection;
    NSMutableArray *mSections;
    NSMutableArray *mStatementSection;
    NSMutableArray *mTemporarySection;
    TSCH3DGLVersion *mVersion;
    NSString *mVertex;
}

@property (nonatomic, readonly) NSString *fragment;
@property (nonatomic, readonly) TSCH3DGLVersion *version;
@property (nonatomic, readonly) NSString *vertex;

- (void)accumulateSection:(id)arg1 intoArray:(id)arg2;
- (void)addAttributeVariable:(id)arg1;
- (void)addConclusion:(id)arg1;
- (void)addConclusion:(id)arg1 space:(id)arg2 statement:(id)arg3;
- (void)addConclusion:(id)arg1 space:(id)arg2 type:(struct TSCH3DShaderType { unsigned int x1; })arg3 format:(id)arg4 arguments:(void*)arg5;
- (void)addConclusion:(id)arg1 statement:(id)arg2;
- (void)addConclusion:(id)arg1 type:(struct TSCH3DShaderType { unsigned int x1; })arg2;
- (void)addConclusion:(id)arg1 type:(struct TSCH3DShaderType { unsigned int x1; })arg2 statement:(id)arg3;
- (void)addConclusionWithSpace:(id)arg1 statement:(id)arg2;
- (void)addDeclaration:(id)arg1;
- (void)addDeclaration:(id)arg1 space:(id)arg2 statement:(id)arg3;
- (void)addDeclaration:(id)arg1 space:(id)arg2 type:(struct TSCH3DShaderType { unsigned int x1; })arg3 format:(id)arg4 arguments:(void*)arg5;
- (void)addDeclaration:(id)arg1 statement:(id)arg2;
- (void)addDeclaration:(id)arg1 type:(struct TSCH3DShaderType { unsigned int x1; })arg2;
- (void)addDeclaration:(id)arg1 type:(struct TSCH3DShaderType { unsigned int x1; })arg2 statement:(id)arg3;
- (void)addDeclarationWithSpace:(id)arg1 statement:(id)arg2;
- (void)addFragmentConclusion:(id)arg1;
- (void)addFragmentConclusion:(id)arg1 space:(id)arg2 statement:(id)arg3;
- (void)addFragmentConclusion:(id)arg1 statement:(id)arg2;
- (void)addFragmentConclusionWithFormat:(id)arg1;
- (void)addFragmentDeclaration:(id)arg1;
- (void)addFragmentDeclaration:(id)arg1 space:(id)arg2 statement:(id)arg3;
- (void)addFragmentDeclaration:(id)arg1 statement:(id)arg2;
- (void)addFragmentDeclarationWithFormat:(id)arg1;
- (void)addFragmentOutcome:(id)arg1;
- (void)addFragmentOutcome:(id)arg1 space:(id)arg2 statement:(id)arg3;
- (void)addFragmentOutcome:(id)arg1 statement:(id)arg2;
- (void)addFragmentOutcomeWithFormat:(id)arg1;
- (void)addFragmentResolution:(id)arg1;
- (void)addFragmentResolution:(id)arg1 space:(id)arg2 statement:(id)arg3;
- (void)addFragmentResolution:(id)arg1 statement:(id)arg2;
- (void)addFragmentResolutionWithFormat:(id)arg1;
- (void)addFragmentStatement:(id)arg1;
- (void)addFragmentStatement:(id)arg1 space:(id)arg2 statement:(id)arg3;
- (void)addFragmentStatement:(id)arg1 statement:(id)arg2;
- (void)addFragmentStatementWithFormat:(id)arg1;
- (void)addFragmentTemporary:(id)arg1;
- (void)addFragmentTemporary:(id)arg1 space:(id)arg2 statement:(id)arg3;
- (void)addFragmentTemporary:(id)arg1 statement:(id)arg2;
- (void)addFragmentTemporaryWithFormat:(id)arg1;
- (void)addFunctionString:(id)arg1 name:(id)arg2;
- (void)addOutcome:(id)arg1;
- (void)addOutcome:(id)arg1 space:(id)arg2 statement:(id)arg3;
- (void)addOutcome:(id)arg1 space:(id)arg2 type:(struct TSCH3DShaderType { unsigned int x1; })arg3 format:(id)arg4 arguments:(void*)arg5;
- (void)addOutcome:(id)arg1 statement:(id)arg2;
- (void)addOutcome:(id)arg1 type:(struct TSCH3DShaderType { unsigned int x1; })arg2;
- (void)addOutcome:(id)arg1 type:(struct TSCH3DShaderType { unsigned int x1; })arg2 statement:(id)arg3;
- (void)addOutcomeWithSpace:(id)arg1 statement:(id)arg2;
- (void)addResolution:(id)arg1;
- (void)addResolution:(id)arg1 space:(id)arg2 statement:(id)arg3;
- (void)addResolution:(id)arg1 space:(id)arg2 type:(struct TSCH3DShaderType { unsigned int x1; })arg3 format:(id)arg4 arguments:(void*)arg5;
- (void)addResolution:(id)arg1 statement:(id)arg2;
- (void)addResolution:(id)arg1 type:(struct TSCH3DShaderType { unsigned int x1; })arg2;
- (void)addResolution:(id)arg1 type:(struct TSCH3DShaderType { unsigned int x1; })arg2 statement:(id)arg3;
- (void)addResolutionWithSpace:(id)arg1 statement:(id)arg2;
- (void)addStatement:(id)arg1;
- (void)addStatement:(id)arg1 space:(id)arg2 statement:(id)arg3;
- (void)addStatement:(id)arg1 space:(id)arg2 type:(struct TSCH3DShaderType { unsigned int x1; })arg3 format:(id)arg4 arguments:(void*)arg5;
- (void)addStatement:(id)arg1 statement:(id)arg2;
- (void)addStatement:(id)arg1 type:(struct TSCH3DShaderType { unsigned int x1; })arg2;
- (void)addStatement:(id)arg1 type:(struct TSCH3DShaderType { unsigned int x1; })arg2 statement:(id)arg3;
- (void)addStatementWithSpace:(id)arg1 statement:(id)arg2;
- (void)addTemporary:(id)arg1;
- (void)addTemporary:(id)arg1 space:(id)arg2 statement:(id)arg3;
- (void)addTemporary:(id)arg1 space:(id)arg2 type:(struct TSCH3DShaderType { unsigned int x1; })arg3 format:(id)arg4 arguments:(void*)arg5;
- (void)addTemporary:(id)arg1 statement:(id)arg2;
- (void)addTemporary:(id)arg1 type:(struct TSCH3DShaderType { unsigned int x1; })arg2;
- (void)addTemporary:(id)arg1 type:(struct TSCH3DShaderType { unsigned int x1; })arg2 statement:(id)arg3;
- (void)addTemporaryWithSpace:(id)arg1 statement:(id)arg2;
- (void)addToSection:(id)arg1 statement:(id)arg2 type:(struct TSCH3DShaderType { unsigned int x1; })arg3;
- (void)addToSection:(id)arg1 variable:(id)arg2 space:(id)arg3 type:(struct TSCH3DShaderType { unsigned int x1; })arg4 format:(id)arg5 arguments:(void*)arg6;
- (void)addUniformVariable:(id)arg1;
- (void)addVertexConclusion:(id)arg1;
- (void)addVertexConclusion:(id)arg1 space:(id)arg2 statement:(id)arg3;
- (void)addVertexConclusion:(id)arg1 statement:(id)arg2;
- (void)addVertexConclusionWithFormat:(id)arg1;
- (void)addVertexDeclaration:(id)arg1;
- (void)addVertexDeclaration:(id)arg1 space:(id)arg2 statement:(id)arg3;
- (void)addVertexDeclaration:(id)arg1 statement:(id)arg2;
- (void)addVertexDeclarationWithFormat:(id)arg1;
- (void)addVertexOutcome:(id)arg1;
- (void)addVertexOutcome:(id)arg1 space:(id)arg2 statement:(id)arg3;
- (void)addVertexOutcome:(id)arg1 statement:(id)arg2;
- (void)addVertexOutcomeWithFormat:(id)arg1;
- (void)addVertexResolution:(id)arg1;
- (void)addVertexResolution:(id)arg1 space:(id)arg2 statement:(id)arg3;
- (void)addVertexResolution:(id)arg1 statement:(id)arg2;
- (void)addVertexResolutionWithFormat:(id)arg1;
- (void)addVertexStatement:(id)arg1;
- (void)addVertexStatement:(id)arg1 space:(id)arg2 statement:(id)arg3;
- (void)addVertexStatement:(id)arg1 statement:(id)arg2;
- (void)addVertexStatementWithFormat:(id)arg1;
- (void)addVertexTemporary:(id)arg1;
- (void)addVertexTemporary:(id)arg1 space:(id)arg2 statement:(id)arg3;
- (void)addVertexTemporary:(id)arg1 statement:(id)arg2;
- (void)addVertexTemporaryWithFormat:(id)arg1;
- (void)assignVariable:(id)arg1 statement:(id)arg2 substitutes:(id)arg3 type:(struct TSCH3DShaderType { unsigned int x1; })arg4 toSection:(int)arg5;
- (void)dealloc;
- (id)existingLinkageOfVariable:(id)arg1;
- (id)fragment;
- (BOOL)hasFunction:(id)arg1;
- (id)init;
- (id)initWithVersion:(id)arg1;
- (BOOL)isSamplerVariable:(id)arg1;
- (void)link;
- (id)linkageOfVariable:(id)arg1;
- (void)p_addCompatibilityFunctions;
- (void)p_addToSection:(id)arg1 variable:(id)arg2 space:(id)arg3 type:(struct TSCH3DShaderType { unsigned int x1; })arg4 format:(id)arg5 substitutes:(id)arg6;
- (void)p_generateGlobalsForType:(struct TSCH3DShaderType { unsigned int x1; })arg1;
- (void)p_generatePreprocessorDefinitionsForType:(struct TSCH3DShaderType { unsigned int x1; })arg1;
- (void)p_generateSection:(id)arg1 type:(struct TSCH3DShaderType { unsigned int x1; })arg2;
- (id)p_generateType:(struct TSCH3DShaderType { unsigned int x1; })arg1;
- (void)p_generateType:(struct TSCH3DShaderType { unsigned int x1; })arg1 globalType:(struct TSCH3DShaderVariableScopeType { unsigned int x1; })arg2 storageQualifier:(id)arg3;
- (unsigned int)processSection:(id)arg1 accumulate:(id)arg2 conclusions:(id)arg3;
- (struct pair<signed char, TSCH3DShaderVariableLinkage *> { BOOL x1; id x2; /* Warning: Unrecognized filer type: '' using 'void*' */ void*x3; void*x4; void*x5; oneway void*x6; void*x7; void*x8; void*x9; void*x10; void*x11; void*x12; void*x13; void*x14; void*x15; void*x16; long x17; void*x18; int x19; unsigned char x20; int x21; const BOOL x22; long x23; void*x24; unsigned int x25; void*x26; void*x27; void*x28; void*x29; bool x30; const void*x31; short x32; void*x33; void*x34; void*x35; void*x36; void*x37; void*x38; void*x39; void*x40; void*x41; void*x42; void*x43; void*x44; void*x45; void*x46; void*x47; void*x48; void*x49; void*x50; void*x51; void*x52; void*x53; void*x54; void*x55; void*x56; void*x57; void*x58; void*x59; void*x60; void*x61; void*x62; void*x63; void*x64; void*x65; void*x66; void*x67; void*x68; void*x69; void*x70; long long x71; void*x72; void*x73; void*x74; void*x75; void*x76; void*x77; void*x78; void*x79; void*x80; void*x81; void*x82; void*x83; void*x84; void*x85; struct x86; void*x87; void*x88; void*x89; void*x90; void*x91; void*x92; void*x93; void*x94; void*x95; void*x96; void*x97; void*x98; void*x99; void*x100; void*x101; void*x102; void*x103; void*x104; void*x105; void*x106; void*x107; void*x108; void*x109; void*x110; void*x111; void*x112; void*x113; void*x114; void*x115; void*x116; void*x117; void*x118; void*x119; void*x120; void*x121; void*x122; void*x123; void*x124; void*x125; void*x126; void*x127; void*x128; void*x129; void*x130; void*x131; void*x132; void*x133; void*x134; void*x135; void*x136; void*x137; void*x138; void*x139; void*x140; void*x141; void*x142; oneway void*x143; void*x144; void*x145; void*x146; void*x147; void*x148; void*x149; void*x150; void*x151; void*x152; void*x153; void*x154; void*x155; void*x156; void*x157; oneway void*x158; void*x159; void*x160; void*x161; void*x162; void*x163; void*x164; void*x165; unsigned short x166; void*x167; short x168; void*x169; void*x170; void*x171; void*x172; unsigned long x173; int x174; unsigned int x175/* : ? */; const void*x176; const void*x177; void*x178; void*x179; const int x180; void x181; void*x182; void*x183; void*x184; void*x185; const void*x186; void*x187; void*x188; void*x189; out const void*x190; short x191; void*x192; void*x193; void*x194; void*x195; void*x196; unsigned char x197; void*x198; in void*x199; void*x200; const void*x201; unsigned int x202; void*x203; float x204; const void*x205; void*x206; void*x207; void*x208; out const void*x209; void*x210; void*x211; void*x212; void*x213; void*x214; unsigned char x215; void*x216; in void*x217; void*x218; const void*x219; unsigned int x220; void*x221; void*x222; void*x223; void*x224; void*x225; void*x226; void*x227; void*x228; void*x229; void*x230; void*x231; void*x232; void*x233; void*x234; void*x235; void*x236; void*x237; void*x238; void*x239; void*x240; void*x241; void*x242; void*x243; void*x244; void*x245; void*x246; void*x247; void*x248; void*x249; void*x250; void*x251; void*x252; void*x253; void*x254; void*x255; void*x256; void*x257; void*x258; void*x259; void*x260; void*x261; void*x262; void*x263; void*x264; void*x265; void*x266; void*x267; void*x268; void*x269; void*x270; void*x271; void*x272; void*x273; void*x274; void*x275; void*x276; void*x277; void*x278; void*x279; void*x280; void*x281; void*x282; void*x283; void*x284; void*x285; oneway void*x286; void*x287; void*x288; void*x289; void*x290; void*x291; void*x292; void*x293; unsigned int x294; inout void*x295; void x296; int x297; void*x298; void*x299; void*x300; int x301; out in unsigned char x302; out in void*x303; const out long x304; long x305; void*x306; const void*x307; void*x308; void*x309; void*x310; void*x311; void*x312; void*x313; void*x314; void*x315; void*x316; void*x317; void*x318; void*x319; void*x320; void*x321; void*x322; void*x323; void*x324; void*x325; void*x326; void*x327; void*x328; void*x329; void*x330; void*x331; void*x332; void*x333; void*x334; void*x335; void*x336; void*x337; void*x338; void*x339; void*x340; unsigned long long x341; void*x342; void*x343; })resultLinkageOfVariable:(id)arg1;
- (struct TSCH3DShaderType { unsigned int x1; })uniformLinkageFor:(id)arg1;
- (id)usedAttributeNameForVariable:(id)arg1;
- (id)usedNameForVariable:(id)arg1 type:(struct TSCH3DShaderType { unsigned int x1; })arg2 scope:(struct TSCH3DShaderVariableScopeType { unsigned int x1; })arg3;
- (id)usedUniformNameForVariable:(id)arg1;
- (id)version;
- (id)vertex;

@end
