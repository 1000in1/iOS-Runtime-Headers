/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/iWorkImport.framework/iWorkImport
 */

@class NSArray, NSIndexSet, NSString;

@interface TSUCustomFormatData : NSObject <NSCopying, NSMutableCopying> {
    unsigned short mCurrencyCodeIndex;
    unsigned char mDecimalWidth;
    BOOL mFormatContainsIntegerToken;
    NSString *mFormatString;
    int mFractionAccuracy;
    unsigned char mIndexFromRightOfLastDigitPlaceholder;
    NSIndexSet *mInterstitialStringInsertionIndexes;
    NSArray *mInterstitialStrings;
    BOOL mIsComplexFormat;
    BOOL mIsConditional;
    unsigned char mMinimumIntegerWidth;
    unsigned char mNumberOfHashDecimalPlaceholders;
    unsigned char mNumberOfNonSpaceDecimalPlaceholderDigits;
    unsigned char mNumberOfNonSpaceIntegerPlaceholderDigits;
    BOOL mRequiresFractionReplacement;
    double mScaleFactor;
    BOOL mShowThousandsSeparator;
    unsigned char mTotalNumberOfDecimalPlaceholdersInFormat;
    BOOL mUseAccountingStyle;
}

@property unsigned short currencyCodeIndex;
@property unsigned char decimalWidth;
@property BOOL formatContainsIntegerToken;
@property(copy) NSString * formatString;
@property int fractionAccuracy;
@property unsigned char indexFromRightOfLastDigitPlaceholder;
@property(copy) NSIndexSet * interstitialStringInsertionIndexes;
@property(copy) NSArray * interstitialStrings;
@property BOOL isComplexFormat;
@property BOOL isConditional;
@property unsigned char minimumIntegerWidth;
@property unsigned char numberOfHashDecimalPlaceholders;
@property unsigned char numberOfNonSpaceDecimalPlaceholderDigits;
@property unsigned char numberOfNonSpaceIntegerPlaceholderDigits;
@property BOOL requiresFractionReplacement;
@property double scaleFactor;
@property BOOL showThousandsSeparator;
@property unsigned char totalNumberOfDecimalPlaceholdersInFormat;
@property BOOL useAccountingStyle;

+ (id)customFormatData;

- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (unsigned short)currencyCodeIndex;
- (unsigned char)decimalWidth;
- (BOOL)formatContainsIntegerToken;
- (id)formatString;
- (int)fractionAccuracy;
- (unsigned int)hash;
- (unsigned char)indexFromRightOfLastDigitPlaceholder;
- (id)init;
- (id)initWithCustomFormatData:(id)arg1;
- (id)interstitialStringInsertionIndexes;
- (id)interstitialStrings;
- (BOOL)isComplexFormat;
- (BOOL)isConditional;
- (BOOL)isEqual:(id)arg1;
- (unsigned char)minimumIntegerWidth;
- (id)mutableCopyWithZone:(struct _NSZone { }*)arg1;
- (unsigned char)numberOfHashDecimalPlaceholders;
- (unsigned char)numberOfNonSpaceDecimalPlaceholderDigits;
- (unsigned char)numberOfNonSpaceIntegerPlaceholderDigits;
- (void)p_copySelfTo:(id)arg1;
- (BOOL)requiresFractionReplacement;
- (double)scaleFactor;
- (void)setCurrencyCodeIndex:(unsigned short)arg1;
- (void)setDecimalWidth:(unsigned char)arg1;
- (void)setFormatContainsIntegerToken:(BOOL)arg1;
- (void)setFormatString:(id)arg1;
- (void)setFractionAccuracy:(int)arg1;
- (void)setIndexFromRightOfLastDigitPlaceholder:(unsigned char)arg1;
- (void)setInterstitialStringInsertionIndexes:(id)arg1;
- (void)setInterstitialStrings:(id)arg1;
- (void)setIsComplexFormat:(BOOL)arg1;
- (void)setIsConditional:(BOOL)arg1;
- (void)setMinimumIntegerWidth:(unsigned char)arg1;
- (void)setNumberOfHashDecimalPlaceholders:(unsigned char)arg1;
- (void)setNumberOfNonSpaceDecimalPlaceholderDigits:(unsigned char)arg1;
- (void)setNumberOfNonSpaceIntegerPlaceholderDigits:(unsigned char)arg1;
- (void)setRequiresFractionReplacement:(BOOL)arg1;
- (void)setScaleFactor:(double)arg1;
- (void)setShowThousandsSeparator:(BOOL)arg1;
- (void)setTotalNumberOfDecimalPlaceholdersInFormat:(unsigned char)arg1;
- (void)setUseAccountingStyle:(BOOL)arg1;
- (BOOL)showThousandsSeparator;
- (unsigned char)totalNumberOfDecimalPlaceholdersInFormat;
- (BOOL)useAccountingStyle;

@end
