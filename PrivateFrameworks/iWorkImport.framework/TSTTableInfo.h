/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/iWorkImport.framework/iWorkImport
 */

/* RuntimeBrowser encountered one or more ivar type encodings for a function pointer. 
   The runtime does not encode function signature information.  We use a signature of: 
           "int (*funcName)()",  where funcName might be null. 
 */

@class NSObject<TSDContainerInfo>, NSString, TSDInfoGeometry, TSPObject<TSDOwningAttachment>, TSTMasterLayout, TSTTableModel, TSTTablePartitioner;

@interface TSTTableInfo : TSDDrawableInfo <TSCECalculationEngineRegistration, TSCEFormulaOwning, TSCEReferenceResolving, TSCETableModeling, TSCETableModeling, TSDContainerInfo, TSDMixing, TSKModel, TSKSearchable, TSSPresetSource, TSSStyleClient, TSWPStorageParent> {
    BOOL mHasReference;
    BOOL mIsFormulaEditing;
    TSTMasterLayout *mMasterLayout;
    TSTTablePartitioner *mPartitioner;
    TSTTableModel *mTableModel;
}

@property(getter=isAnchoredToText,readonly) BOOL anchoredToText;
@property(getter=isAttachedToBodyText,readonly) BOOL attachedToBodyText;
@property int contentWritingDirection;
@property(copy,readonly) NSString * debugDescription;
@property(copy,readonly) NSString * description;
@property(getter=isFloatingAboveText,readonly) BOOL floatingAboveText;
@property(copy) TSDInfoGeometry * geometry;
@property BOOL hasReference;
@property(readonly) unsigned int hash;
@property(getter=isInlineWithText,readonly) BOOL inlineWithText;
@property(readonly) TSTMasterLayout * masterLayout;
@property BOOL matchesObjectPlaceholderGeometry;
@property TSPObject<TSDOwningAttachment> * owningAttachment;
@property(readonly) TSPObject<TSDOwningAttachment> * owningAttachmentNoRecurse;
@property NSObject<TSDContainerInfo> * parentInfo;
@property(readonly) TSTTablePartitioner * partitioner;
@property(readonly) Class superclass;
@property(readonly) TSTTableModel * tableModel;

+ (void)bootstrapPresetsOfKind:(id)arg1 inTheme:(id)arg2 alternate:(int)arg3;
+ (void)bootstrapPresetsOfKind:(id)arg1 inTheme:(id)arg2 alternate:(int)arg3 reservedCount:(unsigned int)arg4;
+ (BOOL)canPartition;
+ (struct TSCETableReferenceObject { struct ObjcSharedPtr<NSObject> { id x_1_1_1; } x1; struct { unsigned short x_2_1_1; unsigned char x_2_1_2; unsigned char x_2_1_3; } x2; struct { unsigned short x_3_1_1; unsigned char x_3_1_2; unsigned char x_3_1_3; } x3; })canonicalCellReferenceForReference:(struct TSCETableReferenceObject { struct ObjcSharedPtr<NSObject> { id x_1_1_1; } x1; struct { unsigned short x_2_1_1; unsigned char x_2_1_2; unsigned char x_2_1_3; } x2; struct { unsigned short x_3_1_1; unsigned char x_3_1_2; unsigned char x_3_1_3; } x3; })arg1;
+ (struct TSUFormat { int (**x1)(); int x2; bool x3; union { struct { unsigned int x_1_2_1 : 16; unsigned int x_1_2_2 : 8; unsigned int x_1_2_3 : 3; unsigned int x_1_2_4 : 1; unsigned int x_1_2_5 : 1; } x_4_1_1; struct { unsigned int x_2_2_1 : 8; } x_4_1_2; struct { unsigned int x_3_2_1 : 8; unsigned int x_3_2_2 : 8; unsigned int x_3_2_3 : 1; } x_4_1_3; struct { unsigned int x_4_2_1 : 1; unsigned int x_4_2_2 : 1; id x_4_2_3; } x_4_1_4; struct { unsigned int x_5_2_1 : 1; int x_5_2_2; int x_5_2_3; int x_5_2_4; } x_4_1_5; struct { id x_6_2_1; id x_6_2_2; unsigned int x_6_2_3; unsigned char x_6_2_4; } x_4_1_6; struct { double x_7_2_1; double x_7_2_2; double x_7_2_3; int x_7_2_4; unsigned int x_7_2_5 : 2; unsigned int x_7_2_6 : 2; } x_4_1_7; struct { int x_8_2_1; unsigned int x_8_2_2; id x_8_2_3; } x_4_1_8; } x4; })format:(struct TSCETableReferenceObject { struct ObjcSharedPtr<NSObject> { id x_1_1_1; } x1; struct { unsigned short x_2_1_1; unsigned char x_2_1_2; unsigned char x_2_1_3; } x2; struct { unsigned short x_3_1_1; unsigned char x_3_1_2; unsigned char x_3_1_3; } x3; })arg1 fromCell:(struct { unsigned short x1; unsigned char x2; unsigned char x3; })arg2;
+ (struct TSUFormat { int (**x1)(); int x2; bool x3; union { struct { unsigned int x_1_2_1 : 16; unsigned int x_1_2_2 : 8; unsigned int x_1_2_3 : 3; unsigned int x_1_2_4 : 1; unsigned int x_1_2_5 : 1; } x_4_1_1; struct { unsigned int x_2_2_1 : 8; } x_4_1_2; struct { unsigned int x_3_2_1 : 8; unsigned int x_3_2_2 : 8; unsigned int x_3_2_3 : 1; } x_4_1_3; struct { unsigned int x_4_2_1 : 1; unsigned int x_4_2_2 : 1; id x_4_2_3; } x_4_1_4; struct { unsigned int x_5_2_1 : 1; int x_5_2_2; int x_5_2_3; int x_5_2_4; } x_4_1_5; struct { id x_6_2_1; id x_6_2_2; unsigned int x_6_2_3; unsigned char x_6_2_4; } x_4_1_6; struct { double x_7_2_1; double x_7_2_2; double x_7_2_3; int x_7_2_4; unsigned int x_7_2_5 : 2; unsigned int x_7_2_6 : 2; } x_4_1_7; struct { int x_8_2_1; unsigned int x_8_2_2; id x_8_2_3; } x_4_1_8; } x4; })formatFromVector:(struct TSCETableReferenceVectorObject { struct TSCETableReferenceObject { struct ObjcSharedPtr<NSObject> { id x_1_2_1; } x_1_1_1; struct { unsigned short x_2_2_1; unsigned char x_2_2_2; unsigned char x_2_2_3; } x_1_1_2; struct { unsigned short x_3_2_1; unsigned char x_3_2_2; unsigned char x_3_2_3; } x_1_1_3; } x1; void *x2; struct TSCERangeCoordinate { struct { unsigned short x_1_2_1; unsigned char x_1_2_2; unsigned char x_1_2_3; } x_3_1_1; struct { unsigned short x_2_2_1; unsigned char x_2_2_2; unsigned char x_2_2_3; } x_3_1_2; } x3; })arg1 atIndex:(unsigned int)arg2;
+ (id)geometryForPrototypeIndex:(int)arg1 withCanvasPoint:(struct CGPoint { float x1; float x2; })arg2;
+ (int)getHidingAction:(struct TSCETableReferenceObject { struct ObjcSharedPtr<NSObject> { id x_1_1_1; } x1; struct { unsigned short x_2_1_1; unsigned char x_2_1_2; unsigned char x_2_1_3; } x2; struct { unsigned short x_3_1_1; unsigned char x_3_1_2; unsigned char x_3_1_3; } x3; })arg1;
+ (struct TSCERangeCoordinate { struct { unsigned short x_1_1_1; unsigned char x_1_1_2; unsigned char x_1_1_3; } x1; struct { unsigned short x_2_1_1; unsigned char x_2_1_2; unsigned char x_2_1_3; } x2; })getRange:(struct TSCETableReferenceObject { struct ObjcSharedPtr<NSObject> { id x_1_1_1; } x1; struct { unsigned short x_2_1_1; unsigned char x_2_1_2; unsigned char x_2_1_3; } x2; struct { unsigned short x_3_1_1; unsigned char x_3_1_2; unsigned char x_3_1_3; } x3; })arg1;
+ (struct { struct TSCERangeCoordinate { struct { unsigned short x_1_2_1; unsigned char x_1_2_2; unsigned char x_1_2_3; } x_1_1_1; struct { unsigned short x_2_2_1; unsigned char x_2_2_2; unsigned char x_2_2_3; } x_1_1_2; } x1; struct __CFUUID {} *x2; })getRangeReference:(struct TSCETableReferenceObject { struct ObjcSharedPtr<NSObject> { id x_1_1_1; } x1; struct { unsigned short x_2_1_1; unsigned char x_2_1_2; unsigned char x_2_1_3; } x2; struct { unsigned short x_3_1_1; unsigned char x_3_1_2; unsigned char x_3_1_3; } x3; })arg1;
+ (struct TSCETableReferenceObject { struct ObjcSharedPtr<NSObject> { id x_1_1_1; } x1; struct { unsigned short x_2_1_1; unsigned char x_2_1_2; unsigned char x_2_1_3; } x2; struct { unsigned short x_3_1_1; unsigned char x_3_1_2; unsigned char x_3_1_3; } x3; })makeCellReferenceInSameTable:(struct TSCETableReferenceObject { struct ObjcSharedPtr<NSObject> { id x_1_1_1; } x1; struct { unsigned short x_2_1_1; unsigned char x_2_1_2; unsigned char x_2_1_3; } x2; struct { unsigned short x_3_1_1; unsigned char x_3_1_2; unsigned char x_3_1_3; } x3; })arg1 cellID:(struct { unsigned short x1; unsigned char x2; unsigned char x3; })arg2;
+ (struct TSCETableReferenceVectorObject { struct TSCETableReferenceObject { struct ObjcSharedPtr<NSObject> { id x_1_2_1; } x_1_1_1; struct { unsigned short x_2_2_1; unsigned char x_2_2_2; unsigned char x_2_2_3; } x_1_1_2; struct { unsigned short x_3_2_1; unsigned char x_3_2_2; unsigned char x_3_2_3; } x_1_1_3; } x1; void *x2; struct TSCERangeCoordinate { struct { unsigned short x_1_2_1; unsigned char x_1_2_2; unsigned char x_1_2_3; } x_3_1_1; struct { unsigned short x_2_2_1; unsigned char x_2_2_2; unsigned char x_2_2_3; } x_3_1_2; } x3; })makeReferenceVectorWithReference:(struct TSCETableReferenceObject { struct ObjcSharedPtr<NSObject> { id x_1_1_1; } x1; struct { unsigned short x_2_1_1; unsigned char x_2_1_2; unsigned char x_2_1_3; } x2; struct { unsigned short x_3_1_1; unsigned char x_3_1_2; unsigned char x_3_1_3; } x3; })arg1 rangeContext:(int)arg2 apparentRangePtr:(struct TSCERangeCoordinate { struct { unsigned short x_1_1_1; unsigned char x_1_1_2; unsigned char x_1_1_3; } x1; struct { unsigned short x_2_1_1; unsigned char x_2_1_2; unsigned char x_2_1_3; } x2; }*)arg3;
+ (int)mergeReferences:(struct TSCETableReferenceObject { struct ObjcSharedPtr<NSObject> { id x_1_1_1; } x1; struct { unsigned short x_2_1_1; unsigned char x_2_1_2; unsigned char x_2_1_3; } x2; struct { unsigned short x_3_1_1; unsigned char x_3_1_2; unsigned char x_3_1_3; } x3; }*)arg1 left:(struct TSCETableReferenceObject { struct ObjcSharedPtr<NSObject> { id x_1_1_1; } x1; struct { unsigned short x_2_1_1; unsigned char x_2_1_2; unsigned char x_2_1_3; } x2; struct { unsigned short x_3_1_1; unsigned char x_3_1_2; unsigned char x_3_1_3; } x3; })arg2 right:(struct TSCETableReferenceObject { struct ObjcSharedPtr<NSObject> { id x_1_1_1; } x1; struct { unsigned short x_2_1_1; unsigned char x_2_1_2; unsigned char x_2_1_3; } x2; struct { unsigned short x_3_1_1; unsigned char x_3_1_2; unsigned char x_3_1_3; } x3; })arg3;
+ (BOOL)needsObjectUUID;
+ (unsigned short)numberOfColumnsForProtoIndex:(unsigned int)arg1;
+ (unsigned short)numberOfRowsForProtoIndex:(unsigned int)arg1;
+ (void)prefetchData:(struct TSCEReferenceValue { int (**x1)(); struct TSCETableReferenceObject { struct ObjcSharedPtr<NSObject> { id x_1_2_1; } x_2_1_1; struct { unsigned short x_2_2_1; unsigned char x_2_2_2; unsigned char x_2_2_3; } x_2_1_2; struct { unsigned short x_3_2_1; unsigned char x_3_2_2; unsigned char x_3_2_3; } x_2_1_3; } x2; struct { unsigned short x_3_1_1; unsigned char x_3_1_2; unsigned char x_3_1_3; } x3; struct shared_ptr<TSCEValue> { struct TSCEValue {} *x_4_1_1; struct shared_count { struct sp_counted_base {} *x_2_2_1; } x_4_1_2; } x4; bool x5; bool x6; unsigned char x7; bool x8; struct TSCEWarningReportingContext {} *x9; }*)arg1 fromVectorObject:(struct TSCETableReferenceVectorObject { struct TSCETableReferenceObject { struct ObjcSharedPtr<NSObject> { id x_1_2_1; } x_1_1_1; struct { unsigned short x_2_2_1; unsigned char x_2_2_2; unsigned char x_2_2_3; } x_1_1_2; struct { unsigned short x_3_2_1; unsigned char x_3_2_2; unsigned char x_3_2_3; } x_1_1_3; } x1; void *x2; struct TSCERangeCoordinate { struct { unsigned short x_1_2_1; unsigned char x_1_2_2; unsigned char x_1_2_3; } x_3_1_1; struct { unsigned short x_2_2_1; unsigned char x_2_2_2; unsigned char x_2_2_3; } x_3_1_2; } x3; }*)arg2 cellID:(struct { unsigned short x1; unsigned char x2; unsigned char x3; })arg3;
+ (id)presetKinds;
+ (void)releaseTableReferenceVectorObject:(struct TSCETableReferenceVectorObject { struct TSCETableReferenceObject { struct ObjcSharedPtr<NSObject> { id x_1_2_1; } x_1_1_1; struct { unsigned short x_2_2_1; unsigned char x_2_2_2; unsigned char x_2_2_3; } x_1_1_2; struct { unsigned short x_3_2_1; unsigned char x_3_2_2; unsigned char x_3_2_3; } x_1_1_3; } x1; void *x2; struct TSCERangeCoordinate { struct { unsigned short x_1_2_1; unsigned char x_1_2_2; unsigned char x_1_2_3; } x_3_1_1; struct { unsigned short x_2_2_1; unsigned char x_2_2_2; unsigned char x_2_2_3; } x_3_1_2; } x3; }*)arg1;
+ (struct { unsigned short x1; unsigned char x2; unsigned char x3; })resolvedCellIDForScalarAccess:(struct TSCETableReferenceObject { struct ObjcSharedPtr<NSObject> { id x_1_1_1; } x1; struct { unsigned short x_2_1_1; unsigned char x_2_1_2; unsigned char x_2_1_3; } x2; struct { unsigned short x_3_1_1; unsigned char x_3_1_2; unsigned char x_3_1_3; } x3; })arg1 fromCell:(struct { unsigned short x1; unsigned char x2; unsigned char x3; })arg2;
+ (id)resolverContainerMatchingName:(id)arg1 inDocumentRoot:(id)arg2;
+ (id)resolverMatchingName:(id)arg1 inDocumentRoot:(id)arg2 contextResolver:(id)arg3;
+ (id)resolverMatchingNameWithContextContainer:(id)arg1 inDocumentRoot:(id)arg2 contextContainerName:(id)arg3;
+ (void)retainTableReferenceVectorObject:(struct TSCETableReferenceVectorObject { struct TSCETableReferenceObject { struct ObjcSharedPtr<NSObject> { id x_1_2_1; } x_1_1_1; struct { unsigned short x_2_2_1; unsigned char x_2_2_2; unsigned char x_2_2_3; } x_1_1_2; struct { unsigned short x_3_2_1; unsigned char x_3_2_2; unsigned char x_3_2_3; } x_1_1_3; } x1; void *x2; struct TSCERangeCoordinate { struct { unsigned short x_1_2_1; unsigned char x_1_2_2; unsigned char x_1_2_3; } x_3_1_1; struct { unsigned short x_2_2_1; unsigned char x_2_2_2; unsigned char x_2_2_3; } x_3_1_2; } x3; }*)arg1;
+ (struct TSCEValue { unsigned int x1[64]; int x2; })scalarValue:(struct TSCETableReferenceObject { struct ObjcSharedPtr<NSObject> { id x_1_1_1; } x1; struct { unsigned short x_2_1_1; unsigned char x_2_1_2; unsigned char x_2_1_3; } x2; struct { unsigned short x_3_1_1; unsigned char x_3_1_2; unsigned char x_3_1_3; } x3; })arg1 fromCell:(struct { unsigned short x1; unsigned char x2; unsigned char x3; })arg2 permitAccessInsideMergeRegions:(bool)arg3 fetchRichTextAttributesIfPlainText:(bool)arg4;
+ (id)tablePrototypeWithIndex:(int)arg1 context:(id)arg2 geometry:(id)arg3 styles:(id)arg4;
+ (BOOL)validateNewName:(id)arg1 forTable:(id)arg2;
+ (struct TSCEValue { unsigned int x1[64]; int x2; })valueForTable:(id)arg1 cellID:(struct { unsigned short x1; unsigned char x2; unsigned char x3; })arg2 fetchRichTextAttributesIfPlainText:(bool)arg3;

- (struct UUIDData<TSP::UUIDData> { union { unsigned char x_1_1_1[16]; struct { unsigned char x_2_2_1; unsigned char x_2_2_2; unsigned char x_2_2_3; unsigned char x_2_2_4; unsigned char x_2_2_5; unsigned char x_2_2_6; unsigned char x_2_2_7; unsigned char x_2_2_8; unsigned char x_2_2_9; unsigned char x_2_2_10; unsigned char x_2_2_11; unsigned char x_2_2_12; unsigned char x_2_2_13; unsigned char x_2_2_14; unsigned char x_2_2_15; unsigned char x_2_2_16; } x_1_1_2; struct { unsigned long long x_3_2_1; unsigned long long x_3_2_2; } x_1_1_3; } x1; })UIDForIndex:(unsigned short)arg1 isRows:(BOOL)arg2;
- (id)UIDSetForIndexes:(id)arg1 isRows:(BOOL)arg2;
- (id)UIDSetForRange:(struct _NSRange { unsigned int x1; unsigned int x2; })arg1 isRows:(BOOL)arg2;
- (struct vector<TSU::UUIDData<TSP::UUIDData>, std::__1::allocator<TSU::UUIDData<TSP::UUIDData> > > { struct UUIDData<TSP::UUIDData> {} *x1; struct UUIDData<TSP::UUIDData> {} *x2; struct __compressed_pair<TSU::UUIDData<TSP::UUIDData> *, std::__1::allocator<TSU::UUIDData<TSP::UUIDData> > > { struct UUIDData<TSP::UUIDData> {} *x_3_1_1; } x3; })UIDsForIndexes:(id)arg1 isRows:(BOOL)arg2;
- (struct vector<TSU::UUIDData<TSP::UUIDData>, std::__1::allocator<TSU::UUIDData<TSP::UUIDData> > > { struct UUIDData<TSP::UUIDData> {} *x1; struct UUIDData<TSP::UUIDData> {} *x2; struct __compressed_pair<TSU::UUIDData<TSP::UUIDData> *, std::__1::allocator<TSU::UUIDData<TSP::UUIDData> > > { struct UUIDData<TSP::UUIDData> {} *x_3_1_1; } x3; })UIDsForRange:(struct _NSRange { unsigned int x1; unsigned int x2; })arg1 isRows:(BOOL)arg2;
- (void)acceptVisitor:(id)arg1;
- (void)adoptStylesheet:(id)arg1 withMapper:(id)arg2;
- (struct vector<TSU::UUIDData<TSP::UUIDData>, std::__1::allocator<TSU::UUIDData<TSP::UUIDData> > > { struct UUIDData<TSP::UUIDData> {} *x1; struct UUIDData<TSP::UUIDData> {} *x2; struct __compressed_pair<TSU::UUIDData<TSP::UUIDData> *, std::__1::allocator<TSU::UUIDData<TSP::UUIDData> > > { struct UUIDData<TSP::UUIDData> {} *x_3_1_1; } x3; })allColumnUIDs;
- (struct vector<TSU::UUIDData<TSP::UUIDData>, std::__1::allocator<TSU::UUIDData<TSP::UUIDData> > > { struct UUIDData<TSP::UUIDData> {} *x1; struct UUIDData<TSP::UUIDData> {} *x2; struct __compressed_pair<TSU::UUIDData<TSP::UUIDData> *, std::__1::allocator<TSU::UUIDData<TSP::UUIDData> > > { struct UUIDData<TSP::UUIDData> {} *x_3_1_1; } x3; })allRowUIDs;
- (id)allWPStorages;
- (struct TSCERangeCoordinate { struct { unsigned short x_1_1_1; unsigned char x_1_1_2; unsigned char x_1_1_3; } x1; struct { unsigned short x_2_1_1; unsigned char x_2_1_2; unsigned char x_2_1_3; } x2; })apparentRangeForRange:(struct TSCERangeCoordinate { struct { unsigned short x_1_1_1; unsigned char x_1_1_2; unsigned char x_1_1_3; } x1; struct { unsigned short x_2_1_1; unsigned char x_2_1_2; unsigned char x_2_1_3; } x2; })arg1 rangeContext:(int)arg2 isWholeTableRange:(BOOL)arg3;
- (BOOL)autoListRecognition;
- (BOOL)autoListTermination;
- (struct TSCERangeCoordinate { struct { unsigned short x_1_1_1; unsigned char x_1_1_2; unsigned char x_1_1_3; } x1; struct { unsigned short x_2_1_1; unsigned char x_2_1_2; unsigned char x_2_1_3; } x2; })bodyRange;
- (BOOL)canAspectRatioLockBeChangedByUser;
- (id)cellRangeName:(struct TSCERangeCoordinate { struct { unsigned short x_1_1_1; unsigned char x_1_1_2; unsigned char x_1_1_3; } x1; struct { unsigned short x_2_1_1; unsigned char x_2_1_2; unsigned char x_2_1_3; } x2; })arg1 stickyBits:(unsigned char)arg2 isRangeWithFunction:(BOOL)arg3 quoteComponents:(BOOL)arg4 forceEscaping:(BOOL)arg5;
- (id)cellTextStyle:(struct { unsigned short x1; unsigned char x2; unsigned char x3; })arg1;
- (BOOL)cellWasModifiedInThisRecalcCycle:(struct { unsigned short x1; unsigned char x2; unsigned char x3; })arg1;
- (id)childCommandForReplaceAllCommand:(id)arg1;
- (id)childEnumerator;
- (id)childInfos;
- (unsigned int)chunkCountForTextureDeliveryStyle:(unsigned int)arg1 animationFilter:(id)arg2;
- (void)clearPartitioner;
- (unsigned char)columnIndexForColumnUID:(const struct UUIDData<TSP::UUIDData> { union { unsigned char x_1_1_1[16]; struct { unsigned char x_2_2_1; unsigned char x_2_2_2; unsigned char x_2_2_3; unsigned char x_2_2_4; unsigned char x_2_2_5; unsigned char x_2_2_6; unsigned char x_2_2_7; unsigned char x_2_2_8; unsigned char x_2_2_9; unsigned char x_2_2_10; unsigned char x_2_2_11; unsigned char x_2_2_12; unsigned char x_2_2_13; unsigned char x_2_2_14; unsigned char x_2_2_15; unsigned char x_2_2_16; } x_1_1_2; struct { unsigned long long x_3_2_1; unsigned long long x_3_2_2; } x_1_1_3; } x1; }*)arg1;
- (id)columnIndexesForUIDs:(const struct vector<TSU::UUIDData<TSP::UUIDData>, std::__1::allocator<TSU::UUIDData<TSP::UUIDData> > > { struct UUIDData<TSP::UUIDData> {} *x1; struct UUIDData<TSP::UUIDData> {} *x2; struct __compressed_pair<TSU::UUIDData<TSP::UUIDData> *, std::__1::allocator<TSU::UUIDData<TSP::UUIDData> > > { struct UUIDData<TSP::UUIDData> {} *x_3_1_1; } x3; }*)arg1;
- (struct UUIDData<TSP::UUIDData> { union { unsigned char x_1_1_1[16]; struct { unsigned char x_2_2_1; unsigned char x_2_2_2; unsigned char x_2_2_3; unsigned char x_2_2_4; unsigned char x_2_2_5; unsigned char x_2_2_6; unsigned char x_2_2_7; unsigned char x_2_2_8; unsigned char x_2_2_9; unsigned char x_2_2_10; unsigned char x_2_2_11; unsigned char x_2_2_12; unsigned char x_2_2_13; unsigned char x_2_2_14; unsigned char x_2_2_15; unsigned char x_2_2_16; } x_1_1_2; struct { unsigned long long x_3_2_1; unsigned long long x_3_2_2; } x_1_1_3; } x1; })columnUIDForColumnIndex:(unsigned char)arg1;
- (struct vector<TSU::UUIDData<TSP::UUIDData>, std::__1::allocator<TSU::UUIDData<TSP::UUIDData> > > { struct UUIDData<TSP::UUIDData> {} *x1; struct UUIDData<TSP::UUIDData> {} *x2; struct __compressed_pair<TSU::UUIDData<TSP::UUIDData> *, std::__1::allocator<TSU::UUIDData<TSP::UUIDData> > > { struct UUIDData<TSP::UUIDData> {} *x_3_1_1; } x3; })columnUIDsForColumnIndexes:(id)arg1;
- (struct vector<TSU::UUIDData<TSP::UUIDData>, std::__1::allocator<TSU::UUIDData<TSP::UUIDData> > > { struct UUIDData<TSP::UUIDData> {} *x1; struct UUIDData<TSP::UUIDData> {} *x2; struct __compressed_pair<TSU::UUIDData<TSP::UUIDData> *, std::__1::allocator<TSU::UUIDData<TSP::UUIDData> > > { struct UUIDData<TSP::UUIDData> {} *x_3_1_1; } x3; })columnUIDsForColumnRange:(struct _NSRange { unsigned int x1; unsigned int x2; })arg1;
- (id)componentRootObject;
- (struct __CFUUID { }*)conditionalStyleFormulaOwnerID;
- (int)contentWritingDirection;
- (id)copyWithContext:(id)arg1;
- (void)dealloc;
- (void)debugDump;
- (void)didCopy;
- (void)didReplaceTextsInStoragesWithPlaceHolderString;
- (id)documentRoot;
- (Class)editorClass;
- (int)elementKind;
- (struct TSCERangeCoordinate { struct { unsigned short x_1_1_1; unsigned char x_1_1_2; unsigned char x_1_1_3; } x1; struct { unsigned short x_2_1_1; unsigned char x_2_1_2; unsigned char x_2_1_3; } x2; })expandCellRangeToCoverMergedCells:(struct TSCERangeCoordinate { struct { unsigned short x_1_1_1; unsigned char x_1_1_2; unsigned char x_1_1_3; } x1; struct { unsigned short x_2_1_1; unsigned char x_2_1_2; unsigned char x_2_1_3; } x2; })arg1;
- (BOOL)hasCellID:(struct { unsigned short x1; unsigned char x2; unsigned char x3; })arg1;
- (BOOL)hasNamesInHeaders;
- (BOOL)hasReference;
- (unsigned short)indexForUID:(const struct UUIDData<TSP::UUIDData> { union { unsigned char x_1_1_1[16]; struct { unsigned char x_2_2_1; unsigned char x_2_2_2; unsigned char x_2_2_3; unsigned char x_2_2_4; unsigned char x_2_2_5; unsigned char x_2_2_6; unsigned char x_2_2_7; unsigned char x_2_2_8; unsigned char x_2_2_9; unsigned char x_2_2_10; unsigned char x_2_2_11; unsigned char x_2_2_12; unsigned char x_2_2_13; unsigned char x_2_2_14; unsigned char x_2_2_15; unsigned char x_2_2_16; } x_1_1_2; struct { unsigned long long x_3_2_1; unsigned long long x_3_2_2; } x_1_1_3; } x1; }*)arg1 isRows:(BOOL)arg2;
- (id)indexesForUIDs:(const struct vector<TSU::UUIDData<TSP::UUIDData>, std::__1::allocator<TSU::UUIDData<TSP::UUIDData> > > { struct UUIDData<TSP::UUIDData> {} *x1; struct UUIDData<TSP::UUIDData> {} *x2; struct __compressed_pair<TSU::UUIDData<TSP::UUIDData> *, std::__1::allocator<TSU::UUIDData<TSP::UUIDData> > > { struct UUIDData<TSP::UUIDData> {} *x_3_1_1; } x3; }*)arg1 isRows:(BOOL)arg2;
- (id)infoForSelectionPath:(id)arg1;
- (id)initForTestingWithContext:(id)arg1 rows:(unsigned short)arg2 columns:(unsigned short)arg3;
- (id)initFromUnarchiver:(id)arg1;
- (id)initWithContext:(id)arg1 fromSourceInfo:(id)arg2 cellRegion:(id)arg3 tableModel:(id)arg4 waitForCalcEngine:(BOOL)arg5;
- (id)initWithContext:(id)arg1 fromSourceInfo:(id)arg2 cellRegion:(id)arg3 waitForCalcEngine:(BOOL)arg4;
- (id)initWithContext:(id)arg1 fromSourceInfo:(id)arg2 waitForCalcEngine:(BOOL)arg3;
- (id)initWithContext:(id)arg1 geometry:(id)arg2;
- (id)initWithContext:(id)arg1 geometry:(id)arg2 rows:(unsigned short)arg3 columns:(unsigned short)arg4;
- (id)initWithContext:(id)arg1 geometry:(id)arg2 rows:(unsigned short)arg3 columns:(unsigned short)arg4 stylePreset:(id)arg5;
- (id)initWithContext:(id)arg1 geometry:(id)arg2 rows:(unsigned short)arg3 columns:(unsigned short)arg4 stylePreset:(id)arg5 styles:(id)arg6;
- (id)initWithContext:(id)arg1 geometry:(id)arg2 rows:(unsigned short)arg3 columns:(unsigned short)arg4 styles:(id)arg5;
- (id)initWithContext:(id)arg1 geometry:(id)arg2 styles:(id)arg3;
- (id)initWithContext:(id)arg1 otherTableInfo:(id)arg2;
- (void)invalidateForCalculationEngine:(id)arg1;
- (BOOL)isEquivalentForCrossDocumentPasteMasterComparison:(id)arg1;
- (BOOL)isRegisteredWithCalculationEngine:(id)arg1;
- (BOOL)isSafeToConvertToAttributedString;
- (BOOL)isSafeToConvertToImage;
- (BOOL)isSafeToConvertToText;
- (Class)layoutClass;
- (void)loadFromArchive:(const struct TableInfoArchive { int (**x1)(); struct UnknownFieldSet { struct vector<google::protobuf::UnknownField, std::__1::allocator<google::protobuf::UnknownField> > {} *x_2_1_1; } x2; unsigned int x3[1]; int x4; struct DrawableArchive {} *x5; struct Reference {} *x6; struct Reference {} *x7; }*)arg1 unarchiver:(id)arg2;
- (id)localizedChunkNameForTextureDeliveryStyle:(unsigned int)arg1 animationFilter:(id)arg2 chunkIndex:(unsigned int)arg3;
- (struct TSCETableReferenceObject { struct ObjcSharedPtr<NSObject> { id x_1_1_1; } x1; struct { unsigned short x_2_1_1; unsigned char x_2_1_2; unsigned char x_2_1_3; } x2; struct { unsigned short x_3_1_1; unsigned char x_3_1_2; unsigned char x_3_1_3; } x3; })makeReference:(struct { unsigned short x1; unsigned char x2; unsigned char x3; })arg1 bottomRight:(struct { unsigned short x1; unsigned char x2; unsigned char x3; })arg2;
- (id)masterLayout;
- (float)masterLayoutEffectiveTableNameHeight;
- (unsigned int)maxMergeFormulaIndex;
- (struct __CFUUID { }*)mergeOwnerID;
- (id)mergedContainedStorages;
- (id)mixedObjectWithFraction:(float)arg1 ofObject:(id)arg2;
- (int)mixingTypeWithObject:(id)arg1 context:(id)arg2;
- (id)mutableIndexesForUIDSet:(id)arg1 isRows:(BOOL)arg2 notFoundUIDs:(id)arg3;
- (void)notifyTableOfNewResults;
- (id)objectToArchiveInDependencyTracker;
- (void)p_bakeMixedCellStrokesIntoTable:(id)arg1 outgoingTable:(id)arg2 incomingTable:(id)arg3 fraction:(float)arg4;
- (id)p_containedTextForTableDeliveryStyle:(int)arg1 chunkIndex:(unsigned int)arg2;
- (void)p_didLoadRichTextPayloadTable:(id)arg1;
- (id)partitioner;
- (void)performReadForOneOffFormulaEvaluation:(id)arg1 forCellID:(struct { unsigned short x1; unsigned char x2; unsigned char x3; }*)arg2;
- (struct { BOOL x1; BOOL x2; BOOL x3; })recalculateForCalculationEngine:(id)arg1 formulaID:(struct { unsigned int x1 : 24; unsigned int x2 : 8; })arg2 isInCycle:(BOOL)arg3 hasCalculatedPrecedents:(BOOL)arg4;
- (id)referencedStyles;
- (BOOL)registerLast;
- (int)registerWithCalculationEngine:(id)arg1;
- (void)registerWithCalculationEngineForDocumentLoad:(id)arg1;
- (void)releaseForCalculationEngine:(id)arg1;
- (id)relocatedMergeCellsIntersectingInsertedIndexes:(id)arg1 isRows:(BOOL)arg2;
- (id)relocatedMergeCellsIntersectingRemovedIndexes:(id)arg1 isRows:(BOOL)arg2;
- (Class)repClass;
- (void)replaceReferencedStylesUsingBlock:(id)arg1;
- (void)resetDependenciesForCell:(struct { unsigned short x1; unsigned char x2; unsigned char x3; })arg1;
- (struct __CFUUID { }*)resolverID;
- (BOOL)resolverIsATable;
- (void)retainForCalculationEngine:(id)arg1;
- (BOOL)reverseChunkingIsSupported;
- (unsigned short)rowIndexForRowUID:(const struct UUIDData<TSP::UUIDData> { union { unsigned char x_1_1_1[16]; struct { unsigned char x_2_2_1; unsigned char x_2_2_2; unsigned char x_2_2_3; unsigned char x_2_2_4; unsigned char x_2_2_5; unsigned char x_2_2_6; unsigned char x_2_2_7; unsigned char x_2_2_8; unsigned char x_2_2_9; unsigned char x_2_2_10; unsigned char x_2_2_11; unsigned char x_2_2_12; unsigned char x_2_2_13; unsigned char x_2_2_14; unsigned char x_2_2_15; unsigned char x_2_2_16; } x_1_1_2; struct { unsigned long long x_3_2_1; unsigned long long x_3_2_2; } x_1_1_3; } x1; }*)arg1;
- (id)rowIndexesForUIDs:(const struct vector<TSU::UUIDData<TSP::UUIDData>, std::__1::allocator<TSU::UUIDData<TSP::UUIDData> > > { struct UUIDData<TSP::UUIDData> {} *x1; struct UUIDData<TSP::UUIDData> {} *x2; struct __compressed_pair<TSU::UUIDData<TSP::UUIDData> *, std::__1::allocator<TSU::UUIDData<TSP::UUIDData> > > { struct UUIDData<TSP::UUIDData> {} *x_3_1_1; } x3; }*)arg1;
- (struct UUIDData<TSP::UUIDData> { union { unsigned char x_1_1_1[16]; struct { unsigned char x_2_2_1; unsigned char x_2_2_2; unsigned char x_2_2_3; unsigned char x_2_2_4; unsigned char x_2_2_5; unsigned char x_2_2_6; unsigned char x_2_2_7; unsigned char x_2_2_8; unsigned char x_2_2_9; unsigned char x_2_2_10; unsigned char x_2_2_11; unsigned char x_2_2_12; unsigned char x_2_2_13; unsigned char x_2_2_14; unsigned char x_2_2_15; unsigned char x_2_2_16; } x_1_1_2; struct { unsigned long long x_3_2_1; unsigned long long x_3_2_2; } x_1_1_3; } x1; })rowUIDForRowIndex:(unsigned short)arg1;
- (struct vector<TSU::UUIDData<TSP::UUIDData>, std::__1::allocator<TSU::UUIDData<TSP::UUIDData> > > { struct UUIDData<TSP::UUIDData> {} *x1; struct UUIDData<TSP::UUIDData> {} *x2; struct __compressed_pair<TSU::UUIDData<TSP::UUIDData> *, std::__1::allocator<TSU::UUIDData<TSP::UUIDData> > > { struct UUIDData<TSP::UUIDData> {} *x_3_1_1; } x3; })rowUIDsForRowIndexes:(id)arg1;
- (struct vector<TSU::UUIDData<TSP::UUIDData>, std::__1::allocator<TSU::UUIDData<TSP::UUIDData> > > { struct UUIDData<TSP::UUIDData> {} *x1; struct UUIDData<TSP::UUIDData> {} *x2; struct __compressed_pair<TSU::UUIDData<TSP::UUIDData> *, std::__1::allocator<TSU::UUIDData<TSP::UUIDData> > > { struct UUIDData<TSP::UUIDData> {} *x_3_1_1; } x3; })rowUIDsForRowRange:(struct _NSRange { unsigned int x1; unsigned int x2; })arg1;
- (void)saveToArchive:(struct TableInfoArchive { int (**x1)(); struct UnknownFieldSet { struct vector<google::protobuf::UnknownField, std::__1::allocator<google::protobuf::UnknownField> > {} *x_2_1_1; } x2; unsigned int x3[1]; int x4; struct DrawableArchive {} *x5; struct Reference {} *x6; struct Reference {} *x7; }*)arg1 archiver:(id)arg2;
- (void)saveToArchiver:(id)arg1;
- (void)scaleInfoGeometry:(struct CGSize { float x1; float x2; })arg1;
- (id)searchForAnnotationsWithHitBlock:(id)arg1;
- (id)searchForString:(id)arg1 options:(unsigned int)arg2 searchCanvasDelegate:(id)arg3 onHit:(id)arg4;
- (void)setContentWritingDirection:(int)arg1;
- (void)setGeometry:(id)arg1;
- (void)setHasReference:(BOOL)arg1;
- (void)setPrimitiveGeometry:(id)arg1;
- (void)setStylesheetForUpgradeToSingleStylesheet:(id)arg1;
- (void)setupTableModelForPrototypeIndex:(int)arg1;
- (id)sheetName;
- (void)shiftGeometryToIncludeTableNameHeight;
- (id)subclassInitFromUnarchiver:(id)arg1;
- (BOOL)supportsAttachedComments;
- (BOOL)supportsHyperlinks;
- (id)tableModel;
- (id)tableName;
- (struct TSCERangeCoordinate { struct { unsigned short x_1_1_1; unsigned char x_1_1_2; unsigned char x_1_1_3; } x1; struct { unsigned short x_2_1_1; unsigned char x_2_1_2; unsigned char x_2_1_3; } x2; })tableRange;
- (BOOL)textIsVertical;
- (unsigned int)textureDeliveryStyleFromDeliveryString:(id)arg1;
- (id)textureDeliveryStylesLocalized:(BOOL)arg1 animationFilter:(id)arg2;
- (struct TSCERangeCoordinate { struct { unsigned short x_1_1_1; unsigned char x_1_1_2; unsigned char x_1_1_3; } x1; struct { unsigned short x_2_1_1; unsigned char x_2_1_2; unsigned char x_2_1_3; } x2; })unmergeIntoRegion:(id)arg1;
- (void)unregisterFromCalculationEngine:(id)arg1;
- (void)upgradeDuringDocumentUpgradeIfNeeded;
- (void)upgradeFormatsForCustomFormatListU2_0;
- (void)validate;
- (void)willCopyWithOtherDrawables:(id)arg1;
- (void)writeResultsForCalculationEngine:(id)arg1;

@end
