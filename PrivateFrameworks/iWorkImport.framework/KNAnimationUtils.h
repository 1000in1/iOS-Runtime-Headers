/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/iWorkImport.framework/iWorkImport
 */

@interface KNAnimationUtils : NSObject

+ (id)CAAccelerationFromSFXActionAcceleration:(unsigned int)arg1;
+ (id)customAttributesArrayWithDeliveryOptions:(id)arg1;
+ (id)customAttributesArrayWithJiggleIntensityOptions:(id)arg1;
+ (id)customAttributesArrayWithTextDeliveryOptions:(id)arg1;
+ (unsigned int)directionFromCustomAttributesDeliveryOption:(unsigned int)arg1;
+ (void)getRecommendedPosition:(struct CGPoint { double x1; double x2; }*)arg1 andTransform:(struct CATransform3D { double x1; double x2; double x3; double x4; double x5; double x6; double x7; double x8; double x9; double x10; double x11; double x12; double x13; double x14; double x15; double x16; }*)arg2 toFitLayer:(id)arg3 inContainerWithBounds:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg4 contentsScale:(float)arg5;
+ (void)hitPreviewButtonIfExists;
+ (void)initialize;
+ (BOOL)isAnimationTestingEnabled;
+ (BOOL)isCustomEffectTimingCurveEditingEnabled;
+ (BOOL)isDisplayLoggingEnabled;
+ (BOOL)isFPSGraphEnabled;
+ (BOOL)isFPSLoggingEnabled;
+ (BOOL)isFPSLoggingTimerDisabled;
+ (BOOL)isGLStateValidationEnabled;
+ (BOOL)isMotionBlurBlacklistedWithCapabilities:(id)arg1;
+ (BOOL)isMotionBlurCapableWithAnimationContext:(id)arg1;
+ (BOOL)isRandomNumberSeedInspectionEnabled;
+ (BOOL)isSOATSImageExportTestEnabled;
+ (unsigned int)randomBasicDirection;
+ (unsigned int)randomDirection;
+ (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })recommendedLayerBoundsForNaturalPlaybackSize:(struct CGSize { double x1; double x2; })arg1 inContainerWithBounds:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg2 contentsScale:(float)arg3 isExternalDisplay:(BOOL)arg4;
+ (BOOL)shouldForceDisplayPreferredMode;
+ (id)timingsArrayWithDirection:(unsigned int)arg1 duration:(float)arg2 count:(unsigned int)arg3 chunkDuration:(float)arg4 randomness:(float)arg5 randomGenerator:(id)arg6;
+ (void)updateDefaultsValues;

@end
