/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/VoiceMemos.framework/VoiceMemos
 */

@class <RCTrimControllerDelegate>, NSString, RCSavedRecording;

@interface RCTrimController : NSObject {
    NSString *_confirmButtonTitle;
    <RCTrimControllerDelegate> *_delegate;
    double _endTimeInterval;
    BOOL _isTrimming;
    double _maxTrimmedDuration;
    double _minTrimmedDuration;
    RCSavedRecording *_recording;
    NSString *_recordingPath;
    double _startTimeInterval;
    float _trimmingProgress;
}

@property(copy) NSString * confirmButtonTitle;
@property <RCTrimControllerDelegate> * delegate;
@property double endTimeInterval;
@property(readonly) BOOL isTrimming;
@property double maxTrimmedDuration;
@property double minTrimmedDuration;
@property(readonly) RCSavedRecording * recording;
@property(readonly) NSString * recordingPath;
@property double startTimeInterval;
@property(readonly) float trimmingProgress;

- (void).cxx_destruct;
- (id)confirmButtonTitle;
- (id)delegate;
- (double)endTimeInterval;
- (id)initWithRecordingPath:(id)arg1;
- (id)initWithSavedRecording:(id)arg1;
- (BOOL)isTrimming;
- (double)maxTrimmedDuration;
- (double)minTrimmedDuration;
- (void)presentInWindow:(id)arg1 completionHandler:(id)arg2;
- (id)recording;
- (id)recordingPath;
- (void)setConfirmButtonTitle:(id)arg1;
- (void)setDelegate:(id)arg1;
- (void)setEndTimeInterval:(double)arg1;
- (void)setMaxTrimmedDuration:(double)arg1;
- (void)setMinTrimmedDuration:(double)arg1;
- (void)setStartTimeInterval:(double)arg1;
- (double)startTimeInterval;
- (float)trimmingProgress;

@end
