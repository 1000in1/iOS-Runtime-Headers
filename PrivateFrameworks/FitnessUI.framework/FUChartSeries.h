/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/FitnessUI.framework/FitnessUI
 */

@class <FUChartSeriesDataSource>, <FUChartSeriesDelegate>, FUChartDataSet, NSArray, NSDate, NSNumber;

@interface FUChartSeries : UIView {
    struct UIEdgeInsets { 
        double top; 
        double left; 
        double bottom; 
        double right; 
    float _animationDuration;
    NSArray *_dataPoints;
    FUChartDataSet *_dataSet;
    <FUChartSeriesDataSource> *_dataSource;
    <FUChartSeriesDelegate> *_delegate;
    } _edgeInsets;
    NSDate *_maxXValue;
    NSNumber *_maxYValue;
    NSDate *_minXValue;
    NSNumber *_minYValue;
}

@property float animationDuration;
@property(retain) FUChartDataSet * dataSet;
@property <FUChartSeriesDataSource> * dataSource;
@property <FUChartSeriesDelegate> * delegate;
@property struct UIEdgeInsets { double x1; double x2; double x3; double x4; } edgeInsets;
@property(retain) NSNumber * maxYValue;
@property(retain) NSNumber * minYValue;

- (void).cxx_destruct;
- (id)_getMaxXValue;
- (id)_getMaxYValue;
- (id)_getMinXValue;
- (id)_getMinYValue;
- (double)_getXValueForPointFromChartPoint:(id)arg1;
- (double)_getYValueForPointFromChartPoint:(id)arg1 key:(id)arg2;
- (double)_getYValueForPointFromChartPoint:(id)arg1;
- (double)_getYValueForPointFromChartPointValue:(id)arg1;
- (float)_relativePositionForXPlaneValue:(id)arg1;
- (float)_relativePositionForYPlaneValue:(id)arg1;
- (void)_reloadMinMaxValues;
- (void)animate;
- (float)animationDuration;
- (id)dataSet;
- (id)dataSource;
- (id)delegate;
- (struct UIEdgeInsets { double x1; double x2; double x3; double x4; })edgeInsets;
- (id)getChartPointFromDataSetAtIndex:(long long)arg1;
- (id)getLabelsFromSet;
- (struct CGPoint { double x1; double x2; })getPointFromChartPoint:(id)arg1 forKey:(id)arg2;
- (struct CGPoint { double x1; double x2; })getPointFromChartPoint:(id)arg1;
- (id)getPointsFromDataSet;
- (id)init;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })insetBounds;
- (void)layoutSubviews;
- (id)maxYValue;
- (id)minYValue;
- (void)refreshView;
- (void)selectedPointIndexesUpdated:(id)arg1 selectionPoints:(id)arg2;
- (void)setAnimationDuration:(float)arg1;
- (void)setDataSet:(id)arg1;
- (void)setDataSource:(id)arg1;
- (void)setDelegate:(id)arg1;
- (void)setEdgeInsets:(struct UIEdgeInsets { double x1; double x2; double x3; double x4; })arg1;
- (void)setMaxYValue:(id)arg1;
- (void)setMinYValue:(id)arg1;
- (void)tapDragGestureRecognizerUpdated:(id)arg1;

@end
