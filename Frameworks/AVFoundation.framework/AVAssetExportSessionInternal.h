/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/AVFoundation.framework/AVFoundation
 */

@interface AVAssetExportSessionInternal : NSObject {
    NSString * actualOutputFileType;
    AVAsset * asset;
    AVAudioMix * audioMix;
    NSString * audioTimePitchAlgorithm;
    BOOL  canUseFastFrameRateConversion;
    NSObject<OS_dispatch_semaphore> * canUseFastFrameRateConversionSemaphore;
    NSArray * compatibleFileTypes;
    long  compatibleFileTypesDispatchOncePredicate;
    AVCustomVideoCompositorSession * customVideoCompositorSession;
    NSURL * directoryForTemporaryFiles;
    NSError * error;
    void * figVideoCompositor;
    AVAssetTrack * firstVideoTrack;
    id /* block */  handler;
    int  maxFileSize;
    NSArray * metadata;
    AVMetadataItemFilter * metadataItemFilter;
    struct { 
        int value; 
        int timescale; 
        unsigned int flags; 
        int epoch; 
    }  minVideoFrameDuration;
    BOOL  optimizeForNetworkUse;
    BOOL  outputFileCreatedByRemaker;
    NSString * outputFileType;
    NSURL * outputURL;
    NSString * preset;
    NSString * preset16x9;
    double  progress;
    NSObject<OS_dispatch_queue> * readWriteQueue;
    struct OpaqueFigRemaker { } * remaker;
    NSObject<OS_dispatch_queue> * remakerNotificationSerializationQueue;
    int  status;
    struct { 
        struct { 
            int value; 
            int timescale; 
            unsigned int flags; 
            int epoch; 
        } start; 
        struct { 
            int value; 
            int timescale; 
            unsigned int flags; 
            int epoch; 
        } duration; 
    }  timeRange;
    BOOL  useMultiPass;
    AVVideoComposition * videoComposition;
    NSString * videoFrameRateConversionAlgorithm;
    BOOL  waitingForFastFrameRateResponse;
    AVWeakReference * weakReference;
}

@end
