/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/AVFoundation.framework/AVFoundation
 */

@interface AVPlayerItemInternal : NSObject {
    <NSObject><NSCopying> * AVKitData;
    struct CGSize { 
        double width; 
        double height; 
    }  IFramePrefetchTargetDimensions;
    unsigned int  RTCReportingFlags;
    NSURL * URL;
    BOOL  aggressivelyCachesVideoFrames;
    BOOL  aggressivelyCachesVideoFramesWasSet;
    BOOL  allowProgressiveResume;
    BOOL  allowProgressiveStartup;
    BOOL  allowProgressiveSwitchUp;
    AVAsset * asset;
    AVAsset * assetWithFigPlaybackItem;
    NSDictionary * audibleDRMInfo;
    AVAudioMix * audioMix;
    NSArray * automaticallyLoadedAssetKeys;
    BOOL  blendsVideoFrames;
    BOOL  blendsVideoFramesWasSet;
    NSArray * cachedTracks;
    BOOL  canUseExtraNetworking;
    AVWeakReference * clientsOriginalVideoComposition;
    AVCustomVideoCompositorSession * customVideoCompositorSession;
    <AVPlayerItemDelegate> * delegate;
    BOOL  didBecomeReadyForBasicInspection;
    BOOL  didBecomeReadyForInspectionOfDuration;
    BOOL  didBecomeReadyForInspectionOfMediaSelectionOptions;
    BOOL  didBecomeReadyForInspectionOfPresentationSize;
    BOOL  didBecomeReadyForInspectionOfTracks;
    BOOL  didFireKVOForAssetForNonStreamingItem;
    BOOL  didInformObserversAboutAvailabilityOfTracks;
    BOOL  didSetAssetToAssetWithFigPlaybackItem;
    int  eqPreset;
    NSError * error;
    BOOL  externalProtectionRequested;
    struct OpaqueFigCPEProtector { } * figCPEProtector;
    NSObject<OS_dispatch_queue> * figConfigurationQueue;
    struct OpaqueFigPlaybackItem { } * figPlaybackItem;
    struct OpaqueCMTimebase { } * figTimebase;
    void * figVideoCompositor;
    struct { 
        int value; 
        int timescale; 
        unsigned int flags; 
        int epoch; 
    }  forwardPlaybackEndTime;
    NSDictionary * gaplessInfo;
    NSMutableArray * handlersToCallWhenReadyForEnqueueing;
    BOOL  haveCPEProtector;
    BOOL  haveInitialSamples;
    NSArray * imageQueueInterpolationCurve;
    BOOL  imageQueueInterpolationCurveWasSet;
    BOOL  initialAlwaysMonitorsPlayability;
    BOOL  initialContinuesPlayingDuringPrerollForRateChange;
    BOOL  initialContinuesPlayingDuringPrerollForSeek;
    NSDate * initialDate;
    NSDate * initialEstimatedDate;
    struct __CFString { } * initialFigTimePitchAlgorithm;
    BOOL  initialLimitReadAhead;
    struct { 
        int value; 
        int timescale; 
        unsigned int flags; 
        int epoch; 
    }  initialMaxSnapTime;
    struct { 
        int value; 
        int timescale; 
        unsigned int flags; 
        int epoch; 
    }  initialMinSnapTime;
    int  initialPlaybackLikelyToKeepUpTrigger;
    unsigned int  initialSetTimeFlags;
    struct { 
        int value; 
        int timescale; 
        unsigned int flags; 
        int epoch; 
    }  initialTime;
    int  initialVariantIndex;
    BOOL  initialWillNeverSeekBackwardsHint;
    NSArray * itemCollectors;
    NSMutableDictionary * itemLegibleOutputsForKeys;
    NSMutableArray * itemMetadataCollectors;
    NSMutableDictionary * itemMetadataOutputsForKeys;
    NSArray * itemOutputs;
    NSMutableArray * itemVideoOutputs;
    NSObject<OS_dispatch_queue> * ivarAccessQueue;
    struct { 
        int value; 
        int timescale; 
        unsigned int flags; 
        int epoch; 
    }  maximumForwardBufferDuration;
    struct { 
        int value; 
        int timescale; 
        unsigned int flags; 
        int epoch; 
    }  maximumTrailingBufferDuration;
    NSString * mediaKind;
    NSMutableDictionary * mediaOptionsSelectedByClient;
    struct { 
        int value; 
        int timescale; 
        unsigned int flags; 
        int epoch; 
    }  minimumIntervalForIFrameOnlyPlayback;
    BOOL  minimumIntervalForIFrameOnlyPlaybackWasSet;
    AVAudioMix * mostRecentlyAppliedAudioMix;
    BOOL  needTimedMetadataNotification;
    BOOL  needToSeekAfterCreatingFigPlaybackItem;
    BOOL  networkUsuallyExceedsMaxBitRate;
    AVPlayerItem * nextItem;
    unsigned int  nextSeekIDToGenerate;
    BOOL  nonForcedSubtitlesEnabled;
    int  pendingSeekID;
    struct OpaqueVTPixelBufferAttributesMediator { } * pixelBufferAttributeMediator;
    BOOL  playHapticTracks;
    AVPlayerConnection * playerConnection;
    AVWeakReference * playerReference;
    double  preferredPeakBitRate;
    struct CGSize { 
        double width; 
        double height; 
    }  preferredPeakPresentationSize;
    AVPlayerItem * previousItem;
    AVPropertyStorage * propertyStorage;
    struct OpaqueCMTimebase { } * proxyTimebase;
    NSDictionary * rampInOutInfo;
    BOOL  requiresAccessLog;
    unsigned int  restrictions;
    struct { 
        int value; 
        int timescale; 
        unsigned int flags; 
        int epoch; 
    }  reversePlaybackEndTime;
    BOOL  reversesMoreVideoFramesInMemory;
    BOOL  reversesMoreVideoFramesInMemoryWasSet;
    BOOL  savesDownloadedDataToDiskWhenDone;
    id /* block */  seekCompletionHandler;
    struct OpaqueFigSimpleMutex { } * seekIDMutex;
    NSObject<OS_dispatch_queue> * seekQueue;
    BOOL  seekingWaitsForVideoCompositionRendering;
    NSString * serviceIdentifier;
    double  soundCheckVolumeNormalization;
    double  speedThresholdForIFrameOnlyPlayback;
    BOOL  speedThresholdForIFrameOnlyPlaybackWasSet;
    NSObject<OS_dispatch_queue> * stateDispatchQueue;
    int  status;
    BOOL  suppressesAudioOnlyVariants;
    BOOL  suppressesVideoLayers;
    NSMutableArray * syncLayers;
    NSArray * textStyleRules;
    NSArray * timedMetadata;
    NSArray * trackIDsForAssetWithFigPlaybackItem;
    BOOL  usesIFrameOnlyPlaybackForHighRateScaledEdits;
    BOOL  usesIFrameOnlyPlaybackForHighRateScaledEditsWasSet;
    BOOL  usesMinimalLatencyForVideoCompositionRendering;
    NSString * videoApertureMode;
    AVVideoComposition * videoComposition;
    double  volumeAdjustment;
    BOOL  wasInitializedWithURL;
    AVWeakReference * weakReference;
}

@end
