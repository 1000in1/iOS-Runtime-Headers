/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/CoreImage.framework/CoreImage
 */

@interface CIContext : NSObject {
    struct CIContextInternal { struct Context {} *x1; struct _opaque_pthread_mutex_t { long x_2_1_1; BOOL x_2_1_2[40]; } x2; bool x3; id x4; /* Warning: Unrecognized filer type: '' using 'void*' */ void*x5; void*x6; void*x7; void*x8; void*x9; void*x10; void*x11; oneway void*x12; void*x13; void*x14; void*x15; void*x16; void*x17; void*x18; void*x19; unsigned short x20; void*x21; long x22; void*x23; void*x24; const in void*x25; void*x26; void*x27; void*x28; BOOL x29; void*x30; int x31; void x32; void*x33; const void*x34; void*x35; void*x36; void*x37; oneway void*x38; void*x39; void*x40; void*x41; void*x42; void*x43; unsigned char x44; void*x45; unsigned short x46; void*x47; short x48; void*x49; void*x50; void*x51; void*x52; unsigned long x53; int x54; unsigned int x55/* : ? */; const void*x56; const void*x57; void*x58; void*x59; const int x60; void x61; void*x62; void*x63; void*x64; void*x65; const void*x66; void*x67; void*x68; void*x69; out const void*x70; short x71; void*x72; int x73; void*x74; out const void*x75; unsigned int x76; void*x77; void*x78; out const void*x79; void*x80; float x81; const void*x82; void*x83; void*x84; void*x85; out const void*x86; void*x87; int x88; void*x89; out const void*x90; unsigned int x91; void*x92; void*x93; out const void*x94; void*x95; void*x96; void*x97; void*x98; char *x99; void*x100; void*x101; void*x102; void*x103; int x104; void*x105; void*x106; void*x107; void*x108; void*x109; void*x110; void*x111; void*x112; void*x113; void*x114; void*x115; void*x116; void*x117; id x118; void*x119; void*x120; void*x121; void*x122; void*x123; void*x124; void*x125; void*x126; void*x127; void*x128; void*x129; oneway void*x130; void*x131; void*x132; void*x133; void*x134; void*x135; void*x136; void*x137; void*x138; void*x139; out double x140; void*x141; long x142; void*x143; const void*x144; in short x145; int x146; void*x147; int x148; out in void*x149; void*x150; void*x151; void*x152; void*x153; void*x154; void*x155; void*x156; void*x157; void*x158; void*x159; void*x160; void*x161; void*x162; void*x163; void*x164; void*x165; void*x166; void*x167; void*x168; void*x169; void*x170; void*x171; void*x172; void*x173; void*x174; void*x175; void*x176; void*x177; void*x178; void*x179; void*x180; void*x181; void*x182; void*x183; void*x184; void*x185; void*x186; void*x187; oneway void*x188; void*x189; void*x190; void*x191; void*x192; void*x193; void*x194; void*x195; unsigned short x196; void*x197; short x198; void*x199; void*x200; void*x201; void*x202; unsigned long x203; int x204; unsigned int x205/* : ? */; const void*x206; const void*x207; void*x208; void*x209; const int x210; void x211; void*x212; void*x213; void*x214; void*x215; const void*x216; void*x217; void*x218; void*x219; out const void*x220; short x221; void*x222; unsigned char x223; long x224; out void*x225; double x226; long doublex227; out BOOL x228; short x229; void*x230; float x231; const void*x232; void*x233; void*x234; void*x235; out const void*x236; void*x237; unsigned char x238; long x239; out void*x240; double x241; long doublex242; out BOOL x243; short x244; void*x245; void*x246; void*x247; void*x248; void*x249; void*x250; void*x251; void*x252; void*x253; void*x254; void*x255; void*x256; void*x257; void*x258; void*x259; void*x260; void*x261; void*x262; void*x263; char *x264; void*x265; void*x266; void*x267; char *x268; void*x269; void*x270; void*x271; void*x272; void*x273; void*x274; void*x275; char *x276; void*x277; void*x278; void*x279; char *x280; void*x281; void*x282; void*x283; void*x284; void*x285; void*x286; void*x287; char *x288; void*x289; void*x290; void*x291; char *x292; void*x293; void*x294; void*x295; void*x296; void*x297; void*x298; void*x299; char *x300; void*x301; void*x302; void*x303; char *x304; void*x305; void*x306; void*x307; void*x308; void*x309; void*x310; void*x311; char *x312; void*x313; void*x314; void*x315; char *x316; void*x317; void*x318; void*x319; void*x320; void*x321; void*x322; void*x323; char *x324; void*x325; void*x326; void*x327; char *x328; void*x329; void*x330; void*x331; void*x332; void*x333; void*x334; void*x335; void*x336; void*x337; void*x338; void*x339; void*x340; void*x341; void*x342; void*x343; void*x344; void*x345; void*x346; void*x347; void*x348; void*x349; void*x350; void*x351; void*x352; void*x353; SEL x354; void*x355; void*x356; void*x357; void*x358; void*x359; void*x360; void*x361; void*x362; void*x363; void*x364; void*x365; void*x366; void*x367; void*x368; void*x369; void*x370; void*x371; void*x372; void*x373; void*x374; void*x375; void*x376; void*x377; void*x378; void*x379; void*x380; void*x381; void*x382; void*x383; void*x384; void*x385; in void*x386; long long x387; void*x388; void*x389; void*x390; void*x391; unsigned short x392; void*x393; short x394; short x395; int x396; out in long doublex397; void*x398; void*x399; void*x400; void*x401; void*x402; in void*x403; void*x404; void*x405; const void*x406; void*x407; void*x408; void*x409; void*x410; void*x411; void*x412; void*x413; void*x414; void*x415; void*x416; void*x417; unsigned short x418; void*x419; short x420; void*x421; void*x422; void*x423; void*x424; unsigned long x425; int x426; unsigned int x427/* : ? */; const void*x428; const void*x429; void*x430; void*x431; const int x432; void x433; void*x434; void*x435; void*x436; void*x437; const void*x438; void*x439; void*x440; void*x441; out const void*x442; short x443; void*x444; void*x445; void*x446; void*x447; void*x448; float x449; const void*x450; void*x451; void*x452; void*x453; out const void*x454; void*x455; void*x456; void*x457; void*x458; void*x459; void*x460; void*x461; void*x462; void*x463; void*x464; void*x465; void*x466; void*x467; void*x468; void*x469; void*x470; void*x471; void*x472; void*x473; void*x474; void*x475; void*x476; void*x477; void*x478; void*x479; void*x480; void*x481; void*x482; void*x483; void*x484; void*x485; void*x486; void*x487; void*x488; void*x489; void*x490; void*x491; void*x492; void*x493; void*x494; void*x495; void*x496; void*x497; void*x498; void*x499; BOOL x500; void*x501; void*x502; void*x503; void*x504; void*x505; void*x506; void*x507; id x508; void*x509; void*x510; void*x511; void*x512; void*x513; void*x514; void*x515; void*x516; void*x517; void*x518; void*x519; void*x520; void*x521; void*x522; void*x523; void*x524; void*x525; void*x526; void*x527; void*x528; void*x529; float x530; void*x531; void*x532; void*x533; const void*x534; void*x535; void*x536; void*x537; void*x538; void*x539; id x540; void*x541; void*x542; void*x543; void*x544; void*x545; void*x546; void*x547; void*x548; void*x549; void*x550; void*x551; void*x552; void*x553; void*x554; void*x555; void*x556; void*x557; void*x558; void*x559; } *_priv;
}

+ (int)_crashed_because_nonaddressable_memory_was_passed_to_render:(id)arg1 toBitmap:(void*)arg2 rowBytes:(int)arg3 bounds:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg4 format:(int)arg5 colorSpace:(struct CGColorSpace { }*)arg6;
+ (id)_singletonContext;
+ (id)clContextOptions:(id)arg1;
+ (id)context;
+ (id)contextWithEAGLContext:(id)arg1;
+ (id)contextWithEAGLContext:(id)arg1 options:(id)arg2;
+ (id)contextWithOptions:(id)arg1;
+ (id)glesContextOptions:(id)arg1;
+ (struct Context { int (**x1)(); struct Atomic { struct { int x_1_2_1; } x_2_1_1; } x2; struct CGColorSpace {} *x3; struct CGColorSpace {} *x4; int x5; bool x6; }*)glesInternalContextWithEAGLContext:(id)arg1 options:(id)arg2;
+ (struct Context { int (**x1)(); struct Atomic { struct { int x_1_2_1; } x_2_1_1; } x2; struct CGColorSpace {} *x3; struct CGColorSpace {} *x4; int x5; bool x6; }*)glesInternalContextWithOptions:(id)arg1;

- (struct CGColorSpace { }*)_colorspace;
- (void)_gpuContextCheck;
- (id)_initWithInternalRepresentation:(void*)arg1;
- (void)_insertEventMarker:(const char *)arg1;
- (bool)_isEAGLBackedContext;
- (struct CGImage { }*)createCGImage:(id)arg1 fromRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg2;
- (struct CGImage { }*)createCGImage:(id)arg1 fromRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg2 format:(int)arg3;
- (struct CGImage { }*)createCGImage:(id)arg1 fromRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg2 format:(int)arg3 colorSpace:(struct CGColorSpace { }*)arg4;
- (id)createColorCubeDataForFilters:(id)arg1 dimension:(int)arg2;
- (struct __IOSurface { }*)createIOSurface:(id)arg1;
- (struct __IOSurface { }*)createIOSurface:(id)arg1 fromRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg2;
- (void)dealloc;
- (void)drawImage:(id)arg1 atPoint:(struct CGPoint { float x1; float x2; })arg2 fromRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg3;
- (void)drawImage:(id)arg1 inRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg2 fromRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg3;
- (id)init;
- (id)initWithEAGLContext:(id)arg1;
- (id)initWithEAGLContext:(id)arg1 options:(id)arg2;
- (struct CGSize { float x1; float x2; })inputImageMaximumSize;
- (void)lock;
- (unsigned long)maximumInputImageSize;
- (unsigned long)maximumOutputImageSize;
- (struct CGSize { float x1; float x2; })outputImageMaximumSize;
- (void)render:(id)arg1 toBitmap:(void*)arg2 rowBytes:(int)arg3 bounds:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg4 format:(int)arg5 colorSpace:(struct CGColorSpace { }*)arg6;
- (void)render:(id)arg1 toCVPixelBuffer:(struct __CVBuffer { }*)arg2;
- (void)render:(id)arg1 toCVPixelBuffer:(struct __CVBuffer { }*)arg2 bounds:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg3 colorSpace:(struct CGColorSpace { }*)arg4;
- (void)render:(id)arg1 toIOSurface:(struct __IOSurface { }*)arg2 bounds:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg3 colorSpace:(struct CGColorSpace { }*)arg4;
- (void)render:(id)arg1 toTexture:(unsigned int)arg2 bounds:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg3 colorSpace:(struct CGColorSpace { }*)arg4;
- (void)unlock;

@end
