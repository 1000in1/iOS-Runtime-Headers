/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/UIKit.framework/UIKit
 */

@interface _UIFlowLayoutSection : NSObject {
    double  _actualGap;
    double  _beginMargin;
    double  _endMargin;
    BOOL  _fixedItemSize;
    double  _footerDimension;
    struct CGRect { 
        struct CGPoint { 
            double x; 
            double y; 
        } origin; 
        struct CGSize { 
            double width; 
            double height; 
        } size; 
    }  _footerFrame;
    struct CGRect { 
        struct CGPoint { 
            double x; 
            double y; 
        } origin; 
        struct CGSize { 
            double width; 
            double height; 
        } size; 
    }  _frame;
    double  _headerDimension;
    struct CGRect { 
        struct CGPoint { 
            double x; 
            double y; 
        } origin; 
        struct CGSize { 
            double width; 
            double height; 
        } size; 
    }  _headerFrame;
    double  _horizontalInterstice;
    int  _indexOfIncompleteRow;
    NSMutableSet * _invalidatedIndexPaths;
    BOOL  _isValid;
    struct CGSize { 
        double width; 
        double height; 
    }  _itemSize;
    NSMutableArray * _items;
    int  _itemsByRowCount;
    int  _itemsCount;
    double  _lastRowActualGap;
    double  _lastRowBeginMargin;
    double  _lastRowEndMargin;
    BOOL  _lastRowIncomplete;
    _UIFlowLayoutInfo * _layoutInfo;
    double  _otherMargin;
    struct CGRect { 
        struct CGPoint { 
            double x; 
            double y; 
        } origin; 
        struct CGSize { 
            double width; 
            double height; 
        } size; 
    }  _rectToKeepValid;
    struct { 
        int commonRowHorizontalAlignment; 
        int lastRowHorizontalAlignment; 
        int rowVerticalAlignment; 
    }  _rowAlignmentOptions;
    NSMutableArray * _rows;
    struct UIEdgeInsets { 
        double top; 
        double left; 
        double bottom; 
        double right; 
    }  _sectionMargins;
    struct _NSRange { 
        unsigned int location; 
        unsigned int length; 
    }  _validItemRange;
    struct CGRect { 
        struct CGPoint { 
            double x; 
            double y; 
        } origin; 
        struct CGSize { 
            double width; 
            double height; 
        } size; 
    }  _validRect;
    double  _verticalInterstice;
}

@property (nonatomic, readonly) double actualGap;
@property (nonatomic, readonly) double beginMargin;
@property (nonatomic, readonly) struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; } effectiveFooterFrameWithSectionMarginsApplied;
@property (nonatomic, readonly) struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; } effectiveHeaderFrameWithSectionMarginsApplied;
@property (nonatomic, readonly) double endMargin;
@property (nonatomic) BOOL fixedItemSize;
@property (nonatomic, readonly) double footerDimension;
@property (nonatomic) struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; } footerFrame;
@property (nonatomic) struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; } frame;
@property (nonatomic, readonly) double headerDimension;
@property (nonatomic) struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; } headerFrame;
@property (nonatomic) double horizontalInterstice;
@property (nonatomic, readonly) int indexOfIncompleteRow;
@property (nonatomic, readonly) NSArray *invalidatedIndexPaths;
@property (nonatomic) struct CGSize { double x1; double x2; } itemSize;
@property (nonatomic, readonly) NSMutableArray *items;
@property (nonatomic, readonly) int itemsByRowCount;
@property (nonatomic) int itemsCount;
@property (nonatomic, readonly) double lastRowActualGap;
@property (nonatomic, readonly) double lastRowBeginMargin;
@property (nonatomic, readonly) double lastRowEndMargin;
@property (nonatomic, readonly) BOOL lastRowIncomplete;
@property (nonatomic) _UIFlowLayoutInfo *layoutInfo;
@property (nonatomic, readonly) double otherMargin;
@property (nonatomic) struct { int x1; int x2; int x3; } rowAlignmentOptions;
@property (nonatomic, readonly) NSMutableArray *rows;
@property (nonatomic) struct UIEdgeInsets { double x1; double x2; double x3; double x4; } sectionMargins;
@property (nonatomic, readonly) struct _NSRange { unsigned int x1; unsigned int x2; } validItemRange;
@property (nonatomic) double verticalInterstice;

- (void).cxx_destruct;
- (float)actualGap;
- (void)addInvalidatedIndexPath:(id)arg1;
- (id)addItem;
- (id)addRowAtEnd:(BOOL)arg1;
- (float)beginMargin;
- (void)computeLayout;
- (void)computeLayoutInRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 forSection:(int)arg2 invalidating:(BOOL)arg3 invalidationContext:(id)arg4;
- (id)copyFromLayoutInfo:(id)arg1;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })effectiveFooterFrameWithSectionMarginsApplied;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })effectiveHeaderFrameWithSectionMarginsApplied;
- (float)endMargin;
- (int)estimatedIndexOfItemAtPoint:(struct CGPoint { double x1; double x2; })arg1;
- (BOOL)fixedItemSize;
- (float)footerDimension;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })footerFrame;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })frame;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })frameForItemAtIndexPath:(id)arg1;
- (float)headerDimension;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })headerFrame;
- (float)horizontalInterstice;
- (int)indexOfIncompleteRow;
- (id)init;
- (void)invalidate;
- (id)invalidatedIndexPaths;
- (struct CGSize { double x1; double x2; })itemSize;
- (id)items;
- (int)itemsByRowCount;
- (int)itemsCount;
- (float)lastRowActualGap;
- (float)lastRowBeginMargin;
- (float)lastRowEndMargin;
- (BOOL)lastRowIncomplete;
- (id)layoutInfo;
- (void)logInvalidSizes;
- (void)logInvalidSizesForHorizontalDirection:(BOOL)arg1 warnAboutDelegateValues:(BOOL)arg2;
- (float)otherMargin;
- (struct { int x1; int x2; int x3; })rowAlignmentOptions;
- (id)rows;
- (id)rowsInRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (struct UIEdgeInsets { double x1; double x2; double x3; double x4; })sectionMargins;
- (void)setEstimatedSize:(struct CGSize { double x1; double x2; })arg1 forSection:(int)arg2;
- (void)setFixedItemSize:(BOOL)arg1;
- (void)setFooterDimension:(float)arg1 forSection:(int)arg2;
- (void)setFooterFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)setFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)setHeaderDimension:(float)arg1 forSection:(int)arg2;
- (void)setHeaderFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)setHorizontalInterstice:(float)arg1;
- (void)setItemSize:(struct CGSize { double x1; double x2; })arg1;
- (void)setItemsCount:(int)arg1;
- (void)setLayoutInfo:(id)arg1;
- (void)setRowAlignmentOptions:(struct { int x1; int x2; int x3; })arg1;
- (void)setSectionMargins:(struct UIEdgeInsets { double x1; double x2; double x3; double x4; })arg1;
- (void)setSize:(struct CGSize { double x1; double x2; })arg1 forItemAtIndexPath:(id)arg2 invalidationContext:(id)arg3;
- (void)setVerticalInterstice:(float)arg1;
- (void)sizeChangedForItem:(id)arg1 atIndexPath:(id)arg2 inRow:(id)arg3;
- (id)snapshot;
- (void)updateEstimatedSizeForSection:(int)arg1;
- (struct _NSRange { unsigned int x1; unsigned int x2; })validItemRange;
- (float)verticalInterstice;

@end
