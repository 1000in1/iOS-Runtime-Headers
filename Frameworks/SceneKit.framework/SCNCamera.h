/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/SceneKit.framework/SceneKit
 */

@interface SCNCamera : NSObject <NSCopying, NSSecureCoding, SCNAnimatable, SCNTechniqueSupport> {
    SCNOrderedDictionary * _animations;
    double  _aperture;
    unsigned int  _automaticallyAdjustsZRange;
    double  _averageGray;
    double  _bloomBlurRadius;
    double  _bloomIntensity;
    double  _bloomThreshold;
    struct __C3DCamera { struct __C3DEntity { struct __CFRuntimeBase { unsigned int x_1_2_1; unsigned char x_1_2_2[4]; } x_1_1_1; void *x_1_1_2; struct __CFString {} *x_1_1_3; struct __CFString {} *x_1_1_4; struct __CFDictionary {} *x_1_1_5; int x_1_1_6; int x_1_1_7; } x1; struct { unsigned int x_2_1_1 : 1; unsigned int x_2_1_2 : 1; unsigned int x_2_1_3 : 1; unsigned int x_2_1_4 : 1; double x_2_1_5; double x_2_1_6; double x_2_1_7; double x_2_1_8; double x_2_1_9; double x_2_1_10; union C3DMatrix4x4 { double x_11_2_1[16]; /* Warning: Unrecognized filer type: ']' using 'void*' */ void*x_11_2_2[4]; void*x_11_2_3[4]; } x_2_1_11; } x2; } * _camera;
    unsigned int  _categoryBitMask;
    double  _colorFringeIntensity;
    double  _colorFringeStrength;
    SCNMaterialProperty * _colorGrading;
    double  _contrast;
    unsigned int  _custom;
    double  _exposureAdaptationBrighteningSpeedFactor;
    double  _exposureAdaptationDarkeningSpeedFactor;
    double  _exposureAdaptationDuration;
    double  _exposureOffset;
    double  _focalBlurRadius;
    double  _focalDistance;
    double  _focalSize;
    unsigned int  _isPresentationInstance;
    double  _maximumExposure;
    double  _minimumExposure;
    double  _motionBlurIntensity;
    NSString * _name;
    double  _orthographicScale;
    struct SCNMatrix4 { 
        double m11; 
        double m12; 
        double m13; 
        double m14; 
        double m21; 
        double m22; 
        double m23; 
        double m24; 
        double m31; 
        double m32; 
        double m33; 
        double m34; 
        double m41; 
        double m42; 
        double m43; 
        double m44; 
    }  _projectionTransform;
    double  _saturation;
    struct { 
        double amount; 
        double radius; 
        double strength; 
        double falloff; 
    }  _screenSpaceAmbientOcclusion;
    SCNTechnique * _technique;
    unsigned int  _usesOrthographicProjection;
    double  _vignettingIntensity;
    double  _vignettingPower;
    BOOL  _wantsExposureAdaptation;
    BOOL  _wantsHDR;
    double  _whitePoint;
    double  _xFov;
    double  _yFov;
    double  _zFar;
    double  _zNear;
}

@property (readonly) NSArray *animationKeys;
@property (nonatomic) double aperture;
@property (nonatomic) BOOL automaticallyAdjustsZRange;
@property (nonatomic) double averageGray;
@property (nonatomic) double bloomBlurRadius;
@property (nonatomic) double bloomIntensity;
@property (nonatomic) double bloomThreshold;
@property (nonatomic) unsigned int categoryBitMask;
@property (nonatomic) double colorFringeIntensity;
@property (nonatomic) double colorFringeStrength;
@property (nonatomic, readonly) SCNMaterialProperty *colorGrading;
@property (nonatomic) double contrast;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic) double exposureAdaptationBrighteningSpeedFactor;
@property (nonatomic) double exposureAdaptationDarkeningSpeedFactor;
@property (nonatomic) double exposureOffset;
@property (nonatomic) double focalBlurRadius;
@property (nonatomic) double focalDistance;
@property (nonatomic) double focalSize;
@property (readonly) unsigned int hash;
@property (nonatomic) double maximumExposure;
@property (nonatomic) double minimumExposure;
@property (nonatomic) double motionBlurIntensity;
@property (nonatomic, copy) NSString *name;
@property (nonatomic) double orthographicScale;
@property (nonatomic) struct SCNMatrix4 { double x1; double x2; double x3; double x4; double x5; double x6; double x7; double x8; double x9; double x10; double x11; double x12; double x13; double x14; double x15; double x16; } projectionTransform;
@property (nonatomic) double saturation;
@property (readonly) Class superclass;
@property (nonatomic, copy) SCNTechnique *technique;
@property (nonatomic) BOOL usesOrthographicProjection;
@property (nonatomic) double vignettingIntensity;
@property (nonatomic) double vignettingPower;
@property (nonatomic) BOOL wantsExposureAdaptation;
@property (nonatomic) BOOL wantsHDR;
@property (nonatomic) double whitePoint;
@property (nonatomic) double xFov;
@property (nonatomic) double yFov;
@property (nonatomic) double zFar;
@property (nonatomic) double zNear;

+ (id)camera;
+ (id)cameraWithCameraRef:(struct __C3DCamera { struct __C3DEntity { struct __CFRuntimeBase { unsigned int x_1_2_1; unsigned char x_1_2_2[4]; } x_1_1_1; void *x_1_1_2; struct __CFString {} *x_1_1_3; struct __CFString {} *x_1_1_4; struct __CFDictionary {} *x_1_1_5; int x_1_1_6; int x_1_1_7; } x1; struct { unsigned int x_2_1_1 : 1; unsigned int x_2_1_2 : 1; unsigned int x_2_1_3 : 1; unsigned int x_2_1_4 : 1; double x_2_1_5; double x_2_1_6; double x_2_1_7; double x_2_1_8; double x_2_1_9; double x_2_1_10; union C3DMatrix4x4 { double x_11_2_1[16]; /* Warning: Unrecognized filer type: ']' using 'void*' */ void*x_11_2_2[4]; void*x_11_2_3[4]; } x_2_1_11; } x2; }*)arg1;
+ (id)cameraWithMDLCamera:(id)arg1;
+ (BOOL)supportsSecureCoding;

- (const void*)__CFObject;
- (BOOL)__removeAnimation:(id)arg1 forKey:(id)arg2;
- (void)_customEncodingOfSCNCamera:(id)arg1;
- (void)_didDecodeSCNCamera:(id)arg1;
- (void)_pauseAnimation:(BOOL)arg1 forKey:(id)arg2;
- (void)_registerAsObserver;
- (void)_syncEntityObjCModel;
- (void)_syncObjCAnimations;
- (void)_syncObjCModel;
- (void)addAnimation:(id)arg1;
- (void)addAnimation:(id)arg1 forKey:(id)arg2;
- (id)animationForKey:(id)arg1;
- (id)animationKeys;
- (struct __C3DAnimationManager { struct __CFRuntimeBase { unsigned int x_1_1_1; unsigned char x_1_1_2[4]; } x1; struct __C3DModelValueStorage {} *x2; struct __CFDictionary {} *x3; struct __CFDictionary {} *x4; struct __CFSet {} *x5; struct __CFArray {} *x6; struct __CFArray {} *x7; bool x8; bool x9; bool x10; struct _C3DAnimationPendingEvent {} *x11; struct __C3DAllocator {} *x12; struct __CFDictionary {} *x13; struct __CFArray {} *x14; double x15; double x16; double x17; struct _opaque_pthread_mutex_t { long x_18_1_1; BOOL x_18_1_2[40]; } x18; int x19; int x20; int x21; int x22; }*)animationManager;
- (float)aperture;
- (BOOL)automaticallyAdjustsZRange;
- (float)averageGray;
- (void)bindAnimatablePath:(id)arg1 toObject:(id)arg2 withKeyPath:(id)arg3 options:(id)arg4;
- (float)bloomBlurRadius;
- (float)bloomIntensity;
- (float)bloomThreshold;
- (struct __C3DCamera { struct __C3DEntity { struct __CFRuntimeBase { unsigned int x_1_2_1; unsigned char x_1_2_2[4]; } x_1_1_1; void *x_1_1_2; struct __CFString {} *x_1_1_3; struct __CFString {} *x_1_1_4; struct __CFDictionary {} *x_1_1_5; int x_1_1_6; int x_1_1_7; } x1; struct { unsigned int x_2_1_1 : 1; unsigned int x_2_1_2 : 1; unsigned int x_2_1_3 : 1; unsigned int x_2_1_4 : 1; double x_2_1_5; double x_2_1_6; double x_2_1_7; double x_2_1_8; double x_2_1_9; double x_2_1_10; union C3DMatrix4x4 { double x_11_2_1[16]; /* Warning: Unrecognized filer type: ']' using 'void*' */ void*x_11_2_2[4]; void*x_11_2_3[4]; } x_2_1_11; } x2; }*)cameraRef;
- (unsigned int)categoryBitMask;
- (float)colorFringeIntensity;
- (float)colorFringeStrength;
- (id)colorGrading;
- (float)contrast;
- (id)copy;
- (struct __C3DAnimationChannel { struct __CFRuntimeBase { unsigned int x_1_1_1; unsigned char x_1_1_2[4]; } x1; struct __C3DAnimation {} *x2; struct __CFArray {} *x3; void *x4; struct __C3DModelTarget {} *x5; struct __CFString {} *x6; }*)copyAnimationChannelForKeyPath:(id)arg1 animation:(id)arg2;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (void)dealloc;
- (id)debugQuickLookData;
- (id)debugQuickLookObject;
- (id)description;
- (void)encodeWithCoder:(id)arg1;
- (float)exposureAdaptationBrighteningSpeedFactor;
- (float)exposureAdaptationDarkeningSpeedFactor;
- (float)exposureAdaptationDuration;
- (float)exposureOffset;
- (float)focalBlurRadius;
- (float)focalDistance;
- (float)focalSize;
- (BOOL)hasCustomProjectionTransform;
- (id)identifier;
- (id)init;
- (id)initPresentationCameraWithCameraRef:(struct __C3DCamera { struct __C3DEntity { struct __CFRuntimeBase { unsigned int x_1_2_1; unsigned char x_1_2_2[4]; } x_1_1_1; void *x_1_1_2; struct __CFString {} *x_1_1_3; struct __CFString {} *x_1_1_4; struct __CFDictionary {} *x_1_1_5; int x_1_1_6; int x_1_1_7; } x1; struct { unsigned int x_2_1_1 : 1; unsigned int x_2_1_2 : 1; unsigned int x_2_1_3 : 1; unsigned int x_2_1_4 : 1; double x_2_1_5; double x_2_1_6; double x_2_1_7; double x_2_1_8; double x_2_1_9; double x_2_1_10; union C3DMatrix4x4 { double x_11_2_1[16]; /* Warning: Unrecognized filer type: ']' using 'void*' */ void*x_11_2_2[4]; void*x_11_2_3[4]; } x_2_1_11; } x2; }*)arg1;
- (id)initWithCameraRef:(struct __C3DCamera { struct __C3DEntity { struct __CFRuntimeBase { unsigned int x_1_2_1; unsigned char x_1_2_2[4]; } x_1_1_1; void *x_1_1_2; struct __CFString {} *x_1_1_3; struct __CFString {} *x_1_1_4; struct __CFDictionary {} *x_1_1_5; int x_1_1_6; int x_1_1_7; } x1; struct { unsigned int x_2_1_1 : 1; unsigned int x_2_1_2 : 1; unsigned int x_2_1_3 : 1; unsigned int x_2_1_4 : 1; double x_2_1_5; double x_2_1_6; double x_2_1_7; double x_2_1_8; double x_2_1_9; double x_2_1_10; union C3DMatrix4x4 { double x_11_2_1[16]; /* Warning: Unrecognized filer type: ']' using 'void*' */ void*x_11_2_2[4]; void*x_11_2_3[4]; } x_2_1_11; } x2; }*)arg1;
- (id)initWithCoder:(id)arg1;
- (BOOL)isAnimationForKeyPaused:(id)arg1;
- (BOOL)isPausedOrPausedByInheritance;
- (float)maximumExposure;
- (float)minimumExposure;
- (float)motionBlurIntensity;
- (id)name;
- (double)orthographicScale;
- (void)pauseAnimationForKey:(id)arg1;
- (id)presentationCamera;
- (id)presentationInstance;
- (struct SCNMatrix4 { double x1; double x2; double x3; double x4; double x5; double x6; double x7; double x8; double x9; double x10; double x11; double x12; double x13; double x14; double x15; double x16; })projectionTransform;
- (void)removeAllAnimations;
- (void)removeAnimationForKey:(id)arg1;
- (void)removeAnimationForKey:(id)arg1 fadeOutDuration:(float)arg2;
- (void)resumeAnimationForKey:(id)arg1;
- (float)saturation;
- (id)scene;
- (struct __C3DScene { }*)sceneRef;
- (float)screenSpaceAmbientOcclusionAmount;
- (float)screenSpaceAmbientOcclusionFalloff;
- (float)screenSpaceAmbientOcclusionRadius;
- (float)screenSpaceAmbientOcclusionStrength;
- (void)setAperture:(float)arg1;
- (void)setAutomaticallyAdjustsZRange:(BOOL)arg1;
- (void)setAverageGray:(float)arg1;
- (void)setBloomBlurRadius:(float)arg1;
- (void)setBloomIntensity:(float)arg1;
- (void)setBloomThreshold:(float)arg1;
- (void)setCategoryBitMask:(unsigned int)arg1;
- (void)setColorFringeIntensity:(float)arg1;
- (void)setColorFringeStrength:(float)arg1;
- (void)setContrast:(float)arg1;
- (void)setExposureAdaptationBrighteningSpeedFactor:(float)arg1;
- (void)setExposureAdaptationDarkeningSpeedFactor:(float)arg1;
- (void)setExposureAdaptationDuration:(float)arg1;
- (void)setExposureOffset:(float)arg1;
- (void)setFocalBlurRadius:(float)arg1;
- (void)setFocalDistance:(float)arg1;
- (void)setFocalSize:(float)arg1;
- (void)setIdentifier:(id)arg1;
- (void)setMaximumExposure:(float)arg1;
- (void)setMinimumExposure:(float)arg1;
- (void)setMotionBlurIntensity:(float)arg1;
- (void)setName:(id)arg1;
- (void)setOrthographicScale:(double)arg1;
- (void)setProjectionTransform:(struct SCNMatrix4 { double x1; double x2; double x3; double x4; double x5; double x6; double x7; double x8; double x9; double x10; double x11; double x12; double x13; double x14; double x15; double x16; })arg1;
- (void)setSaturation:(float)arg1;
- (void)setScreenSpaceAmbientOcclusionAmount:(float)arg1;
- (void)setScreenSpaceAmbientOcclusionFalloff:(float)arg1;
- (void)setScreenSpaceAmbientOcclusionRadius:(float)arg1;
- (void)setScreenSpaceAmbientOcclusionStrength:(float)arg1;
- (void)setSpeed:(float)arg1 forAnimationKey:(id)arg2;
- (void)setTechnique:(id)arg1;
- (void)setUsesOrthographicProjection:(BOOL)arg1;
- (void)setVignettingIntensity:(float)arg1;
- (void)setVignettingPower:(float)arg1;
- (void)setWantsExposureAdaptation:(BOOL)arg1;
- (void)setWantsHDR:(BOOL)arg1;
- (void)setWhitePoint:(float)arg1;
- (void)setXFov:(double)arg1;
- (void)setXMag:(double)arg1;
- (void)setYFov:(double)arg1;
- (void)setYMag:(double)arg1;
- (void)setZFar:(double)arg1;
- (void)setZNear:(double)arg1;
- (id)technique;
- (void)unbindAnimatablePath:(id)arg1;
- (BOOL)usesOrthographicProjection;
- (float)vignettingIntensity;
- (float)vignettingPower;
- (BOOL)wantsExposureAdaptation;
- (BOOL)wantsHDR;
- (float)whitePoint;
- (double)xFov;
- (double)xMag;
- (double)yFov;
- (double)yMag;
- (double)zFar;
- (double)zNear;

@end
