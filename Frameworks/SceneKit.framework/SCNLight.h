/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/SceneKit.framework/SceneKit
 */

@interface SCNLight : NSObject <NSCopying, NSSecureCoding, SCNAnimatable, SCNTechniqueSupport> {
    NSURL * _IESProfileURL;
    SCNOrderedDictionary * _animations;
    double  _attenuationEndDistance;
    double  _attenuationFalloffExponent;
    double  _attenuationStartDistance;
    unsigned int  _baked;
    unsigned int  _castsShadow;
    unsigned int  _categoryBitMask;
    id  _color;
    SCNMaterialProperty * _gobo;
    unsigned int  _goboProjectShadows;
    SCNMaterialProperty * _ies;
    double  _intensity;
    unsigned int  _isPresentationInstance;
    struct __C3DLight { struct __C3DEntity { struct __CFRuntimeBase { unsigned int x_1_2_1; unsigned char x_1_2_2[4]; } x_1_1_1; void *x_1_1_2; struct __CFString {} *x_1_1_3; struct __CFString {} *x_1_1_4; struct __CFDictionary {} *x_1_1_5; int x_1_1_6; int x_1_1_7; } x1; struct C3DColor4 { union { double x_1_2_1[4]; struct { double x_2_3_1; double x_2_3_2; double x_2_3_3; double x_2_3_4; } x_1_2_2; } x_2_1_1; } x2; long x3; double x4; double x5; double x6; double x7; double x8; double x9; double x10; double x11; struct C3DColor4 { union { double x_1_2_1[4]; struct { double x_2_3_1; double x_2_3_2; double x_2_3_3; double x_2_3_4; } x_1_2_2; } x_12_1_1; } x12; double x13; double x14; unsigned int x15; unsigned int x16; bool x17; unsigned int x18 : 1; unsigned int x19 : 1; unsigned int x20 : 1; unsigned int x21 : 1; unsigned int x22 : 1; unsigned int x23 : 1; double x24; double x25; double x26; struct __C3DEffectSlot {} *x27; struct __C3DEffectSlot {} *x28; long x29; double x30; struct __C3DFXTechnique {} *x31; void *x32; struct __CFData {} *x33; } * _light;
    NSString * _name;
    double  _orthographicScale;
    <MTLTexture> * _probeTexture;
    double  _shadowBias;
    id  _shadowColor;
    struct CGSize { 
        double width; 
        double height; 
    }  _shadowMapSize;
    double  _shadowRadius;
    unsigned int  _shadowSampleCount;
    unsigned int  _shouldBakeDirectLighting;
    unsigned int  _shouldBakeIndirectLighting;
    NSData * _sphericalHarmonics;
    double  _spotFalloffExponent;
    double  _spotInnerAngle;
    double  _spotOuterAngle;
    SCNTechnique * _technique;
    double  _temperature;
    NSString * _type;
    unsigned int  _usesDeferredShadows;
    unsigned int  _usesModulatedMode;
    double  _zFar;
    double  _zNear;
}

@property (nonatomic, retain) NSURL *IESProfileURL;
@property (readonly) NSArray *animationKeys;
@property (nonatomic) double attenuationEndDistance;
@property (nonatomic) double attenuationFalloffExponent;
@property (nonatomic) double attenuationStartDistance;
@property (nonatomic) BOOL castsShadow;
@property (nonatomic) unsigned int categoryBitMask;
@property (nonatomic, retain) id color;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic, readonly) SCNMaterialProperty *gobo;
@property (readonly) unsigned int hash;
@property (nonatomic) double intensity;
@property (nonatomic, copy) NSString *name;
@property (nonatomic) double orthographicScale;
@property (nonatomic) double shadowBias;
@property (nonatomic, retain) id shadowColor;
@property (nonatomic) struct CGSize { double x1; double x2; } shadowMapSize;
@property (nonatomic) int shadowMode;
@property (nonatomic) double shadowRadius;
@property (nonatomic) unsigned int shadowSampleCount;
@property (nonatomic) double spotInnerAngle;
@property (nonatomic) double spotOuterAngle;
@property (readonly) Class superclass;
@property (nonatomic, copy) SCNTechnique *technique;
@property (nonatomic) double temperature;
@property (nonatomic, copy) NSString *type;
@property (nonatomic) double zFar;
@property (nonatomic) double zNear;

+ (id)light;
+ (id)lightWithLightRef:(struct __C3DLight { struct __C3DEntity { struct __CFRuntimeBase { unsigned int x_1_2_1; unsigned char x_1_2_2[4]; } x_1_1_1; void *x_1_1_2; struct __CFString {} *x_1_1_3; struct __CFString {} *x_1_1_4; struct __CFDictionary {} *x_1_1_5; int x_1_1_6; int x_1_1_7; } x1; struct C3DColor4 { union { double x_1_2_1[4]; struct { double x_2_3_1; double x_2_3_2; double x_2_3_3; double x_2_3_4; } x_1_2_2; } x_2_1_1; } x2; long x3; double x4; double x5; double x6; double x7; double x8; double x9; double x10; double x11; struct C3DColor4 { union { double x_1_2_1[4]; struct { double x_2_3_1; double x_2_3_2; double x_2_3_3; double x_2_3_4; } x_1_2_2; } x_12_1_1; } x12; double x13; double x14; unsigned int x15; unsigned int x16; bool x17; unsigned int x18 : 1; unsigned int x19 : 1; unsigned int x20 : 1; unsigned int x21 : 1; unsigned int x22 : 1; unsigned int x23 : 1; double x24; double x25; double x26; struct __C3DEffectSlot {} *x27; struct __C3DEffectSlot {} *x28; long x29; double x30; struct __C3DFXTechnique {} *x31; void *x32; struct __CFData {} *x33; }*)arg1;
+ (id)lightWithMDLLight:(id)arg1;
+ (id)lightWithMDLLightProbe:(id)arg1;
+ (BOOL)supportsSecureCoding;

- (id)IESProfileURL;
- (const void*)__CFObject;
- (BOOL)__removeAnimation:(id)arg1 forKey:(id)arg2;
- (void)_customDecodingOfSCNLight:(id)arg1;
- (void)_customEncodingOfSCNLight:(id)arg1;
- (void)_didDecodeSCNLight:(id)arg1;
- (void)_pauseAnimation:(BOOL)arg1 forKey:(id)arg2;
- (id)_probeTexture;
- (id)_sphericalHarmonics;
- (void)_syncEntityObjCModel;
- (void)_syncObjCAnimations;
- (void)_syncObjCModel;
- (void)addAnimation:(id)arg1;
- (void)addAnimation:(id)arg1 forKey:(id)arg2;
- (id)animationForKey:(id)arg1;
- (id)animationKeys;
- (struct __C3DAnimationManager { struct __CFRuntimeBase { unsigned int x_1_1_1; unsigned char x_1_1_2[4]; } x1; struct __C3DModelValueStorage {} *x2; struct __CFDictionary {} *x3; struct __CFDictionary {} *x4; struct __CFSet {} *x5; struct __CFArray {} *x6; struct __CFArray {} *x7; bool x8; bool x9; bool x10; struct _C3DAnimationPendingEvent {} *x11; struct __C3DAllocator {} *x12; struct __CFDictionary {} *x13; struct __CFArray {} *x14; double x15; double x16; double x17; struct _opaque_pthread_mutex_t { long x_18_1_1; BOOL x_18_1_2[40]; } x18; int x19; int x20; int x21; int x22; }*)animationManager;
- (float)attenuationEndDistance;
- (float)attenuationFalloffExponent;
- (float)attenuationStartDistance;
- (id)attributeForKey:(id)arg1;
- (void)bindAnimatablePath:(id)arg1 toObject:(id)arg2 withKeyPath:(id)arg3 options:(id)arg4;
- (BOOL)castsShadow;
- (unsigned int)categoryBitMask;
- (id)color;
- (id)copy;
- (struct __C3DAnimationChannel { struct __CFRuntimeBase { unsigned int x_1_1_1; unsigned char x_1_1_2[4]; } x1; struct __C3DAnimation {} *x2; struct __CFArray {} *x3; void *x4; struct __C3DModelTarget {} *x5; struct __CFString {} *x6; }*)copyAnimationChannelForKeyPath:(id)arg1 animation:(id)arg2;
- (struct __C3DAnimationChannel { struct __CFRuntimeBase { unsigned int x_1_1_1; unsigned char x_1_1_2[4]; } x1; struct __C3DAnimation {} *x2; struct __CFArray {} *x3; void *x4; struct __C3DModelTarget {} *x5; struct __CFString {} *x6; }*)copyAnimationChannelForKeyPath:(id)arg1 property:(id)arg2;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (void)dealloc;
- (id)description;
- (void)encodeWithCoder:(id)arg1;
- (id)gobo;
- (id)identifier;
- (id)init;
- (id)initPresentationLightWithLightRef:(struct __C3DLight { struct __C3DEntity { struct __CFRuntimeBase { unsigned int x_1_2_1; unsigned char x_1_2_2[4]; } x_1_1_1; void *x_1_1_2; struct __CFString {} *x_1_1_3; struct __CFString {} *x_1_1_4; struct __CFDictionary {} *x_1_1_5; int x_1_1_6; int x_1_1_7; } x1; struct C3DColor4 { union { double x_1_2_1[4]; struct { double x_2_3_1; double x_2_3_2; double x_2_3_3; double x_2_3_4; } x_1_2_2; } x_2_1_1; } x2; long x3; double x4; double x5; double x6; double x7; double x8; double x9; double x10; double x11; struct C3DColor4 { union { double x_1_2_1[4]; struct { double x_2_3_1; double x_2_3_2; double x_2_3_3; double x_2_3_4; } x_1_2_2; } x_12_1_1; } x12; double x13; double x14; unsigned int x15; unsigned int x16; bool x17; unsigned int x18 : 1; unsigned int x19 : 1; unsigned int x20 : 1; unsigned int x21 : 1; unsigned int x22 : 1; unsigned int x23 : 1; double x24; double x25; double x26; struct __C3DEffectSlot {} *x27; struct __C3DEffectSlot {} *x28; long x29; double x30; struct __C3DFXTechnique {} *x31; void *x32; struct __CFData {} *x33; }*)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithLightRef:(struct __C3DLight { struct __C3DEntity { struct __CFRuntimeBase { unsigned int x_1_2_1; unsigned char x_1_2_2[4]; } x_1_1_1; void *x_1_1_2; struct __CFString {} *x_1_1_3; struct __CFString {} *x_1_1_4; struct __CFDictionary {} *x_1_1_5; int x_1_1_6; int x_1_1_7; } x1; struct C3DColor4 { union { double x_1_2_1[4]; struct { double x_2_3_1; double x_2_3_2; double x_2_3_3; double x_2_3_4; } x_1_2_2; } x_2_1_1; } x2; long x3; double x4; double x5; double x6; double x7; double x8; double x9; double x10; double x11; struct C3DColor4 { union { double x_1_2_1[4]; struct { double x_2_3_1; double x_2_3_2; double x_2_3_3; double x_2_3_4; } x_1_2_2; } x_12_1_1; } x12; double x13; double x14; unsigned int x15; unsigned int x16; bool x17; unsigned int x18 : 1; unsigned int x19 : 1; unsigned int x20 : 1; unsigned int x21 : 1; unsigned int x22 : 1; unsigned int x23 : 1; double x24; double x25; double x26; struct __C3DEffectSlot {} *x27; struct __C3DEffectSlot {} *x28; long x29; double x30; struct __C3DFXTechnique {} *x31; void *x32; struct __CFData {} *x33; }*)arg1;
- (float)intensity;
- (BOOL)isAnimationForKeyPaused:(id)arg1;
- (BOOL)isBaked;
- (BOOL)isPausedOrPausedByInheritance;
- (struct __C3DLight { struct __C3DEntity { struct __CFRuntimeBase { unsigned int x_1_2_1; unsigned char x_1_2_2[4]; } x_1_1_1; void *x_1_1_2; struct __CFString {} *x_1_1_3; struct __CFString {} *x_1_1_4; struct __CFDictionary {} *x_1_1_5; int x_1_1_6; int x_1_1_7; } x1; struct C3DColor4 { union { double x_1_2_1[4]; struct { double x_2_3_1; double x_2_3_2; double x_2_3_3; double x_2_3_4; } x_1_2_2; } x_2_1_1; } x2; long x3; double x4; double x5; double x6; double x7; double x8; double x9; double x10; double x11; struct C3DColor4 { union { double x_1_2_1[4]; struct { double x_2_3_1; double x_2_3_2; double x_2_3_3; double x_2_3_4; } x_1_2_2; } x_12_1_1; } x12; double x13; double x14; unsigned int x15; unsigned int x16; bool x17; unsigned int x18 : 1; unsigned int x19 : 1; unsigned int x20 : 1; unsigned int x21 : 1; unsigned int x22 : 1; unsigned int x23 : 1; double x24; double x25; double x26; struct __C3DEffectSlot {} *x27; struct __C3DEffectSlot {} *x28; long x29; double x30; struct __C3DFXTechnique {} *x31; void *x32; struct __CFData {} *x33; }*)lightRef;
- (id)name;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void*)arg4;
- (float)orthographicScale;
- (void)pauseAnimationForKey:(id)arg1;
- (id)presentationInstance;
- (id)presentationLight;
- (void)removeAllAnimations;
- (void)removeAnimationForKey:(id)arg1;
- (void)removeAnimationForKey:(id)arg1 fadeOutDuration:(float)arg2;
- (void)resumeAnimationForKey:(id)arg1;
- (id)scene;
- (struct __C3DScene { }*)sceneRef;
- (void)setAttenuationEndDistance:(float)arg1;
- (void)setAttenuationFalloffExponent:(float)arg1;
- (void)setAttenuationStartDistance:(float)arg1;
- (void)setAttribute:(id)arg1 forKey:(id)arg2;
- (void)setBaked:(BOOL)arg1;
- (void)setCastsShadow:(BOOL)arg1;
- (void)setCategoryBitMask:(unsigned int)arg1;
- (void)setColor:(id)arg1;
- (void)setIESProfileURL:(id)arg1;
- (void)setIdentifier:(id)arg1;
- (void)setIntensity:(float)arg1;
- (void)setName:(id)arg1;
- (void)setOrthographicScale:(float)arg1;
- (void)setShadowBias:(float)arg1;
- (void)setShadowColor:(id)arg1;
- (void)setShadowMapSize:(struct CGSize { double x1; double x2; })arg1;
- (void)setShadowMode:(int)arg1;
- (void)setShadowRadius:(float)arg1;
- (void)setShadowSampleCount:(unsigned int)arg1;
- (void)setShouldBakeDirectLighting:(BOOL)arg1;
- (void)setShouldBakeIndirectLighting:(BOOL)arg1;
- (void)setSpeed:(float)arg1 forAnimationKey:(id)arg2;
- (void)setSpotFalloffExponent:(float)arg1;
- (void)setSpotInnerAngle:(float)arg1;
- (void)setSpotOuterAngle:(float)arg1;
- (void)setTechnique:(id)arg1;
- (void)setTemperature:(float)arg1;
- (void)setType:(id)arg1;
- (void)setUsesDeferredShadows:(BOOL)arg1;
- (void)setUsesModulatedMode:(BOOL)arg1;
- (void)setZFar:(float)arg1;
- (void)setZNear:(float)arg1;
- (void)set_probeTexture:(id)arg1;
- (void)set_sphericalHarmonics:(id)arg1;
- (float)shadowBias;
- (id)shadowColor;
- (struct CGSize { double x1; double x2; })shadowMapSize;
- (int)shadowMode;
- (float)shadowRadius;
- (unsigned int)shadowSampleCount;
- (BOOL)shouldBakeDirectLighting;
- (BOOL)shouldBakeIndirectLighting;
- (float)spotFalloffExponent;
- (float)spotInnerAngle;
- (float)spotOuterAngle;
- (id)technique;
- (float)temperature;
- (id)type;
- (void)unbindAnimatablePath:(id)arg1;
- (BOOL)usesDeferredShadows;
- (BOOL)usesModulatedMode;
- (float)zFar;
- (float)zNear;

@end
