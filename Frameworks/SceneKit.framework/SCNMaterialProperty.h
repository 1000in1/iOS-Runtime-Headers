/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/SceneKit.framework/SceneKit
 */

@interface SCNMaterialProperty : NSObject <NSSecureCoding, SCNAnimatable> {
    SCNOrderedDictionary *_animations;
    UIColor *_borderColor;
    struct __C3DImage { } *_c3dImage;
    struct SCNMatrix4 { float x1; float x2; float x3; float x4; float x5; float x6; float x7; float x8; float x9; float x10; float x11; float x12; float x13; float x14; float x15; float x16; } *_contentTransform;
    unsigned char _contentType;
    id _contents;
    struct __C3DEffectSlot { struct __CFRuntimeBase { unsigned int x_1_1_1; unsigned char x_1_1_2[4]; } x1; struct C3DColor4 { union { float x_1_2_1[4]; struct { float x_2_3_1; float x_2_3_2; float x_2_3_3; float x_2_3_4; } x_1_2_2; } x_2_1_1; } x2; struct __C3DImage {} *x3; struct __C3DTextureSampler {} *x4; struct __C3DTexture {} *x5; struct __C3DImageProxy {} *x6; struct __C3DTransforms {} *x7; long x8; float x9; int x10; void *x11; } *_customSlot;
    NSString *_customSlotName;
    float _intensity;
    unsigned int _isCommonProfileProperty;
    unsigned int _isPresentationInstance;
    int _magnificationFilter;
    int _mappingChannel;
    float _maxAnisotropy;
    int _minificationFilter;
    int _mipFilter;
    id _parent;
    long _propertyType;
    id _reserved;
    struct __C3DTextureProxy { } *_textureProxy;
    int _wrapS;
    int _wrapT;
}

@property (nonatomic, retain) id borderColor;
@property (nonatomic, retain) id contents;
@property (nonatomic) struct SCNMatrix4 { float x1; float x2; float x3; float x4; float x5; float x6; float x7; float x8; float x9; float x10; float x11; float x12; float x13; float x14; float x15; float x16; } contentsTransform;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned int hash;
@property (nonatomic) float intensity;
@property (nonatomic) int magnificationFilter;
@property (nonatomic) int mappingChannel;
@property (nonatomic) float maxAnisotropy;
@property (nonatomic) int minificationFilter;
@property (nonatomic) int mipFilter;
@property (readonly) Class superclass;
@property (nonatomic) int wrapS;
@property (nonatomic) int wrapT;

+ (id)SCNJSExportProtocol;
+ (struct __C3DImage { }*)_copyC3DImageFromImageData:(id)arg1 typeID:(unsigned long)arg2;
+ (id)_copyImageFromC3DImage:(struct __C3DImage { }*)arg1;
+ (struct __C3DImage { }*)copyC3DImageFromImage:(id)arg1;
+ (id)copyImageFromC3DImage:(struct __C3DImage { }*)arg1;
+ (id)materialPropertyWithContents:(id)arg1;
+ (BOOL)supportsSecureCoding;

- (void*)__CFObject;
- (void)__allocateContentTransformIfNeeded;
- (void)__removeAnimation:(id)arg1 forKey:(id)arg2;
- (id)_animationPathForKey:(id)arg1;
- (void)_clearContents;
- (void)_customDecodingOfSCNMaterialProperty:(id)arg1;
- (void)_customEncodingOfSCNMaterialProperty:(id)arg1;
- (void)_didDecodeSCNMaterialProperty:(id)arg1;
- (void)_layerDidChange:(id)arg1;
- (void)_pauseAnimation:(BOOL)arg1 forKey:(id)arg2;
- (int)_presentationMappingChannel;
- (void)_setC3DImageRef:(struct __C3DImage { }*)arg1;
- (void)_setColor:(id)arg1;
- (void)_setParent:(id)arg1;
- (void)_syncObjCAnimations;
- (void)_syncObjCModel;
- (void)_updateMaterialAttachment:(id)arg1;
- (void)_updateMaterialBorderColor:(id)arg1;
- (void)_updateMaterialColor:(id)arg1;
- (void)_updateMaterialFilters;
- (void)_updateMaterialImage:(id)arg1;
- (void)_updateMaterialLayer:(id)arg1;
- (void)_updateMaterialProceduralContents:(id)arg1;
- (void)_updateMaterialPropertyTransform:(union C3DMatrix4x4 { float x1[16]; /* Warning: Unrecognized filer type: ']' using 'void*' */ void*x2[4]; void*x3; void*x4; void*x5; void*x6; void*x7; void*x8; void*x9; void*x10; void*x11; void*x12; void*x13; void*x14; void*x15; void*x16; void*x17; void*x18; void*x19; void*x20; void*x21; void*x22; void*x23; void*x24; void*x25; void*x26; void*x27; double x28; void*x29; void*x30; void*x31; double x32; void*x33; void*x34; void*x35; void*x36; void*x37; void*x38; void*x39; void*x40; void*x41; void*x42; void*x43; void*x44; void*x45; void*x46; void*x47; void*x48; void*x49; void*x50; void*x51; oneway void*x52; void*x53; void*x54; void*x55; void*x56; void*x57; void*x58; unsigned short x59; unsigned char x60; void*x61; unsigned char x62; void*x63; void*x64; void*x65; void*x66; void*x67; void*x68; void*x69; const void*x70; short x71; short x72; int x73; out in void*x74; void*x75; void*x76; void*x77; void*x78; void*x79; oneway void*x80; void*x81; void*x82; void*x83; void*x84; void*x85; void*x86; void*x87; void*x88; unsigned char x89; const out void*x90; bycopy void x91; void*x92; const long x93; void*x94; void*x95; oneway int x96; void*x97; void*x98; void*x99; void*x100; void*x101; void*x102; void*x103; void*x104; void*x105; oneway void*x106; void*x107; void*x108; void*x109; void*x110; void*x111; void*x112; void*x113; unsigned short x114; void*x115; short x116; void*x117; void*x118; void*x119; void*x120; unsigned long x121; int x122; unsigned int x123/* : ? */; const void*x124; const void*x125; void*x126; void*x127; const void*x128; void*x129; void*x130; void*x131; out const void*x132; short x133; void*x134; void*x135; void*x136; out void*x137; out short x138; void*x139; unsigned int x140; void*x141; float x142; const void*x143; void*x144; void*x145; void*x146; out const void*x147; void*x148; void*x149; void*x150; out void*x151; out short x152; void*x153; unsigned int x154; void*x155; void*x156; void*x157; void*x158; void*x159; void*x160; void*x161; void*x162; void*x163; void*x164; void*x165; void*x166; void*x167; void*x168; void*x169; void*x170; void*x171; void*x172; void*x173; void*x174; void*x175; void*x176; void*x177; void*x178; void*x179; void*x180; void*x181; void*x182; void*x183; void*x184; void*x185; void*x186; void*x187; void*x188; void*x189; void*x190; void*x191; void*x192; void*x193; struct x194; void*x195; void*x196; const void*x197; void*x198; out void x199; void*x200; void*x201; int x202; void*x203; void*x204; void*x205; int x206; out in SEL x207; float x208; out const void*x209; void*x210; void*x211; SEL x212; void*x213; void*x214; void*x215; void*x216; void*x217; void*x218; void*x219; void*x220; void*x221; void*x222; void*x223; void*x224; void*x225; void*x226; void*x227; void*x228; void*x229; void*x230; void*x231; void*x232; void*x233; void*x234; void*x235; void*x236; void*x237; void*x238; void*x239; void*x240; void*x241; void*x242; void*x243; void*x244; void*x245; void*x246; void*x247; void*x248; void*x249; void*x250; void*x251; void*x252; void*x253; void*x254; void*x255; void*x256; void*x257; void*x258; void*x259; void*x260; void*x261; void*x262; void*x263; void*x264; void*x265; void*x266; void*x267; void*x268; void*x269; void*x270; void*x271; void*x272; void*x273; void*x274; void*x275; void*x276; short x277; void*x278; void*x279; void*x280; void*x281; void*x282; void*x283; void*x284; void*x285; void*x286; void*x287; void*x288; void*x289; void*x290; void*x291; void*x292; void*x293; void*x294; void*x295; void*x296; void*x297; void*x298; void*x299; void*x300; void*x301; void*x302; void*x303; void*x304; void*x305; void*x306; void*x307; void*x308; void*x309; void*x310; void*x311; void*x312; void*x313; void*x314; void*x315; void*x316; void*x317; void*x318; void*x319; void*x320; void*x321; void*x322; void*x323; void*x324; void*x325; void*x326; void*x327; void*x328; void*x329; void*x330; void*x331; void*x332; void*x333; void*x334; void*x335; void*x336; void*x337; void*x338; void*x339; int x340; void*x341; void*x342; void*x343; void*x344; void*x345; void*x346; void*x347; void*x348; void*x349; void*x350; void*x351; void*x352; void*x353; void*x354; void*x355; oneway void*x356; void*x357; void*x358; void*x359; void*x360; void*x361; void*x362; void*x363; void*x364; void*x365; out const int x366; void*x367; out in void*x368; void*x369; long x370; void*x371; int x372; long x373; void*x374; double x375; unsigned long x376; void*x377; void*x378; out void*x379; void*x380; void*x381; void*x382; in void*x383; const void*x384; void*x385; out const void*x386; void*x387; void*x388; void*x389; void*x390; void*x391; void*x392; void*x393; void*x394; void*x395; void*x396; void*x397; void*x398; void*x399; void*x400; void*x401; void*x402; void*x403; void*x404; void*x405; void*x406; void*x407; void*x408; void*x409; void*x410; void*x411; void*x412; void*x413; void*x414; void*x415; void*x416; void*x417; void*x418; void*x419; void*x420; void*x421; void*x422; void*x423; void*x424; void*x425; void*x426; void*x427; void*x428; void*x429; void*x430; void*x431; void*x432; void*x433; void*x434; void*x435; void*x436; void*x437; void*x438; void*x439; void*x440; void*x441; void*x442; void*x443; void*x444; void*x445; void*x446; void*x447; void*x448; void*x449; void*x450; void*x451; void*x452; void*x453; void*x454; void*x455; void*x456; void*x457; oneway void*x458; void*x459; void*x460; void*x461; void*x462; void*x463; void*x464; void*x465; void*x466; void*x467; void*x468; void*x469; void*x470; void*x471; void*x472; void*x473; void*x474; void*x475; void*x476; void*x477; void*x478; void*x479; void*x480; void*x481; void*x482; void*x483; void*x484; void*x485; void*x486; void*x487; void*x488; void*x489; void*x490; void*x491; void*x492; void*x493; void*x494; void*x495; void*x496; void*x497; void*x498; void*x499; void*x500; void*x501; void*x502; void*x503; void*x504; void*x505; void*x506; void*x507; void*x508; void*x509; void*x510; void*x511; void*x512; void*x513; void*x514; void*x515; void*x516; void*x517; void*x518; void*x519; void*x520; void*x521; void*x522; void*x523; void*x524; void*x525; void*x526; void*x527; void*x528; void*x529; void*x530; void*x531; void*x532; void*x533; void*x534; void*x535; void*x536; void*x537; void*x538; void*x539; void*x540; void*x541; void*x542; void*x543; void*x544; void*x545; void*x546; void*x547; void*x548; void*x549; void*x550; void*x551; void*x552; oneway void*x553; void*x554; void*x555; void*x556; void*x557; void*x558; void*x559; unsigned short x560; void*x561; void*x562; unsigned int x563; bool x564; const int x565; BOOL x566; void*x567; unsigned short x568; void*x569; out out short x570; void*x571; void*x572; void*x573; void*x574; out const void*x575; unsigned long x576; out void*x577; double x578; void*x579; const void*x580; void*x581; void*x582; void*x583; void*x584; void*x585; void*x586; void*x587; void*x588; void*x589; void*x590; void*x591; oneway void*x592; void*x593; void*x594; void*x595; void*x596; void*x597; void*x598; inout void*x599; oneway void*x600; inout void*x601; const out void*x602; out BOOL x603; out long x604; void*x605; void*x606; void*x607; void*x608; void*x609; void*x610; void*x611; void*x612; void*x613; void*x614; oneway void*x615; void*x616; void*x617; void*x618; void*x619; void*x620; long long x621; void*x622; void*x623; void*x624; void*x625; void*x626; void*x627; void*x628; void*x629; void*x630; void*x631; int x632; void*x633; void*x634; void*x635; void*x636; void*x637; void*x638; void*x639; void*x640; void*x641; void*x642; void*x643; void*x644; void*x645; void*x646; void*x647; void*x648; void*x649; void*x650; void*x651; void*x652; void*x653; void*x654; void*x655; void*x656; void*x657; void*x658; void*x659; void*x660; void*x661; void*x662; void*x663; void*x664; void*x665; void*x666; void*x667; void*x668; void*x669; void*x670; void*x671; void*x672; void*x673; void*x674; void*x675; void*x676; void*x677; void*x678; void*x679; void*x680; void*x681; void*x682; void*x683; void*x684; void*x685; void*x686; void*x687; void*x688; void*x689; void*x690; void*x691; void*x692; void*x693; void*x694; void*x695; void*x696; void*x697; id x698; void*x699; void*x700; void*x701; void*x702; void*x703; void*x704; void*x705; void*x706; void*x707; void*x708; void*x709; void*x710; void*x711; void*x712; void*x713; void*x714; void*x715; void*x716; unsigned int x717; })arg1;
- (void)_updateMaterialSKScene:(id)arg1;
- (void)_updateMaterialSKTexture:(id)arg1;
- (void)addAnimation:(id)arg1;
- (void)addAnimation:(id)arg1 forKey:(id)arg2;
- (id)animationForKey:(id)arg1;
- (id)animationKeys;
- (struct __C3DAnimationManager { struct __CFRuntimeBase { unsigned int x_1_1_1; unsigned char x_1_1_2[4]; } x1; struct __C3DModelValueStorage {} *x2; struct __CFDictionary {} *x3; struct __CFDictionary {} *x4; struct __CFSet {} *x5; struct __CFArray {} *x6; bool x7; bool x8; bool x9; struct _C3DAnimationPendingEvent {} *x10; struct __C3DAllocator {} *x11; struct __CFDictionary {} *x12; struct __CFArray {} *x13; double x14; double x15; struct _opaque_pthread_mutex_t { long x_16_1_1; BOOL x_16_1_2[40]; } x16; int x17; int x18; int x19; int x20; }*)animationManager;
- (id)attachment;
- (id)borderColor;
- (struct C3DColor4 { union { float x_1_1_1[4]; struct { float x_2_2_1; float x_2_2_2; float x_2_2_3; float x_2_2_4; } x_1_1_2; } x1; })borderColor4;
- (id)color;
- (struct C3DColor4 { union { float x_1_1_1[4]; struct { float x_2_2_1; float x_2_2_2; float x_2_2_3; float x_2_2_4; } x_1_1_2; } x1; })color4;
- (struct __C3DEffectCommonProfile { struct __C3DEffectProfile { struct __CFRuntimeBase { unsigned int x_1_2_1; unsigned char x_1_2_2[4]; } x_1_1_1; long x_1_1_2; } x1; struct __C3DMaterial {} *x2; long x3; struct __C3DEffectSlot {} *x4; struct __C3DEffectSlot {} *x5; struct __C3DEffectSlot {} *x6; struct __C3DEffectSlot {} *x7; struct __C3DEffectSlot {} *x8; struct __C3DEffectSlot {} *x9; struct __C3DEffectSlot {} *x10; struct __C3DEffectSlot {} *x11; float x12; float x13; float x14; float x15; float x16; BOOL x17; int x18; bool x19; bool x20; unsigned int x21 : 1; unsigned int x22 : 1; unsigned int x23 : 1; unsigned int x24 : 1; unsigned int x25 : 1; unsigned int x26 : 1; unsigned int x27 : 1; unsigned int x28 : 1; unsigned int x29 : 1; unsigned int x30 : 10; struct __C3DFXProgram {} *x31; }*)commonProfile;
- (id)content;
- (id)contents;
- (struct SCNMatrix4 { float x1; float x2; float x3; float x4; float x5; float x6; float x7; float x8; float x9; float x10; float x11; float x12; float x13; float x14; float x15; float x16; })contentsTransform;
- (struct __C3DAnimationChannel { struct __CFRuntimeBase { unsigned int x_1_1_1; unsigned char x_1_1_2[4]; } x1; struct __C3DAnimation {} *x2; struct __CFArray {} *x3; void *x4; struct __C3DModelTarget {} *x5; struct __CFString {} *x6; }*)copyAnimationChannelForKeyPath:(id)arg1;
- (void)copyPropertiesFrom:(id)arg1;
- (void)dealloc;
- (id)description;
- (struct __C3DEffectSlot { struct __CFRuntimeBase { unsigned int x_1_1_1; unsigned char x_1_1_2[4]; } x1; struct C3DColor4 { union { float x_1_2_1[4]; struct { float x_2_3_1; float x_2_3_2; float x_2_3_3; float x_2_3_4; } x_1_2_2; } x_2_1_1; } x2; struct __C3DImage {} *x3; struct __C3DTextureSampler {} *x4; struct __C3DTexture {} *x5; struct __C3DImageProxy {} *x6; struct __C3DTransforms {} *x7; long x8; float x9; int x10; void *x11; }*)effectSlot;
- (struct __C3DEffectSlot { struct __CFRuntimeBase { unsigned int x_1_1_1; unsigned char x_1_1_2[4]; } x1; struct C3DColor4 { union { float x_1_2_1[4]; struct { float x_2_3_1; float x_2_3_2; float x_2_3_3; float x_2_3_4; } x_1_2_2; } x_2_1_1; } x2; struct __C3DImage {} *x3; struct __C3DTextureSampler {} *x4; struct __C3DTexture {} *x5; struct __C3DImageProxy {} *x6; struct __C3DTransforms {} *x7; long x8; float x9; int x10; void *x11; }*)effectSlotCreateIfNeeded:(BOOL)arg1;
- (void)encodeWithCoder:(id)arg1;
- (struct __C3DImage { }*)getC3DImageRef;
- (id)image;
- (id)init;
- (id)initPresentationMaterialPropertyWithModelProperty:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithParent:(id)arg1 andCustomName:(id)arg2;
- (id)initWithParent:(id)arg1 propertyType:(long)arg2;
- (float)intensity;
- (BOOL)isAnimationForKeyPaused:(id)arg1;
- (BOOL)isPausedOrPausedByInheritance;
- (id)layer;
- (int)magnificationFilter;
- (int)mappingChannel;
- (float)maxAnisotropy;
- (int)minificationFilter;
- (int)mipFilter;
- (id)parent;
- (void)parentWillDie:(id)arg1;
- (void)pauseAnimationForKey:(id)arg1;
- (id)presentationInstance;
- (id)presentationMaterialProperty;
- (id)proceduralContents;
- (long)propertyType;
- (id)pvrtcData;
- (void)removeAllAnimations;
- (void)removeAnimationForKey:(id)arg1;
- (void)removeAnimationForKey:(id)arg1 fadeOutDuration:(float)arg2;
- (void)resumeAnimationForKey:(id)arg1;
- (struct __C3DScene { }*)sceneRef;
- (void)setAttachment:(id)arg1;
- (void)setBorderColor:(id)arg1;
- (void)setColor:(id)arg1;
- (void)setContent:(id)arg1;
- (void)setContents:(id)arg1;
- (void)setContentsTransform:(struct SCNMatrix4 { float x1; float x2; float x3; float x4; float x5; float x6; float x7; float x8; float x9; float x10; float x11; float x12; float x13; float x14; float x15; float x16; })arg1;
- (void)setImage:(id)arg1;
- (void)setIntensity:(float)arg1;
- (void)setLayer:(id)arg1;
- (void)setMagnificationFilter:(int)arg1;
- (void)setMappingChannel:(int)arg1;
- (void)setMaxAnisotropy:(float)arg1;
- (void)setMinificationFilter:(int)arg1;
- (void)setMipFilter:(int)arg1;
- (void)setProceduralContents:(id)arg1;
- (void)setSkScene:(id)arg1;
- (void)setSkTexture:(id)arg1;
- (void)setWrapS:(int)arg1;
- (void)setWrapT:(int)arg1;
- (id)skScene;
- (id)skTexture;
- (id)slotName;
- (void)synchronizeCustomPropertyWithParent:(id)arg1 andCustomName:(id)arg2;
- (struct __C3DTextureSampler { struct __CFRuntimeBase { unsigned int x_1_1_1; unsigned char x_1_1_2[4]; } x1; long x2; long x3; long x4; long x5; long x6; long x7; struct C3DColor4 { union { float x_1_2_1[4]; struct { float x_2_3_1; float x_2_3_2; float x_2_3_3; float x_2_3_4; } x_1_2_2; } x_8_1_1; } x8; float x9; unsigned char x10; long x11; unsigned int x12; }*)textureSampler;
- (int)wrapS;
- (int)wrapT;

@end
