/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/CoreMotion.framework/CoreMotion
 */

@interface CMDeviceMotionLite : NSObject <NSCopying, NSSecureCoding> {
    CMAttitude * fAttitude;
    struct { 
        double x; 
        double y; 
        double z; 
    }  fGravity;
    unsigned int  fMachTimestamp;
    NSString * fPhysicalDeviceUniqueID;
    struct { 
        double x; 
        double y; 
        double z; 
    }  fRawAcceleration;
    struct { 
        double x; 
        double y; 
        double z; 
    }  fRawRotationRate;
    struct { 
        double x; 
        double y; 
        double z; 
    }  fRotationRate;
    struct { 
        double x; 
        double y; 
        double z; 
    }  fUserAcceleration;
}

@property (nonatomic, readonly) CMAttitude *attitude;
@property (nonatomic, readonly) struct { double x1; double x2; double x3; } gravity;
@property (nonatomic, readonly) unsigned int machTimestamp;
@property (nonatomic, readonly, retain) NSString *physicalDeviceUniqueID;
@property (nonatomic, readonly) struct { double x1; double x2; double x3; } rawAcceleration;
@property (nonatomic, readonly) struct { double x1; double x2; double x3; } rawRotationRate;
@property (nonatomic, readonly) struct { double x1; double x2; double x3; } rotationRate;
@property (nonatomic, readonly) double tilt;
@property (nonatomic, readonly) double tip;
@property (nonatomic, readonly) struct { double x1; double x2; double x3; } userAcceleration;

+ (BOOL)supportsSecureCoding;

- (id)attitude;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (void)dealloc;
- (id)debugDescription;
- (id)description;
- (void)encodeWithCoder:(id)arg1;
- (struct { double x1; double x2; double x3; })gravity;
- (id)initWithCoder:(id)arg1;
- (id)initWithDeviceMotionLite:(struct { struct { double x_1_1_1; double x_1_1_2; double x_1_1_3; double x_1_1_4; } x1; struct { double x_2_1_1; double x_2_1_2; double x_2_1_3; } x2; struct { double x_3_1_1; double x_3_1_2; double x_3_1_3; } x3; struct { double x_4_1_1; double x_4_1_2; double x_4_1_3; } x4; struct { double x_5_1_1; double x_5_1_2; double x_5_1_3; } x5; unsigned int x6; })arg1 andDeviceID:(id)arg2;
- (unsigned int)machTimestamp;
- (id)physicalDeviceUniqueID;
- (struct { double x1; double x2; double x3; })rawAcceleration;
- (struct { double x1; double x2; double x3; })rawRotationRate;
- (struct { double x1; double x2; double x3; })rotationRate;
- (float)tilt;
- (float)tip;
- (struct { double x1; double x2; double x3; })userAcceleration;

@end
