/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/CFNetwork.framework/CFNetwork
 */

@interface __NSCFURLSessionTaskInfo : NSObject <NSSecureCoding> {
    unsigned int  _AVAssetDownloadToken;
    AVURLAsset * _AVURLAsset;
    NSURL * _URL;
    NSURLSessionTaskMetrics * __backgroundTaskMetrics;
    NSDictionary * __backgroundTaskTimingData;
    NSDictionary * __backgroundTrailers;
    NSData * _assetArtworkData;
    NSString * _assetTitle;
    int  _basePriority;
    NSString * _bundleID;
    int  _bytesPerSecondLimit;
    int  _countOfBytesExpectedToReceive;
    int  _countOfBytesExpectedToSend;
    int  _countOfBytesReceived;
    int  _countOfBytesSent;
    double  _creationTime;
    NSURLRequest * _currentRequest;
    NSURL * _destinationURL;
    BOOL  _disablesRetry;
    BOOL  _discretionary;
    NSURL * _downloadFileURL;
    unsigned int  _downloadTokenFromInitialization;
    NSError * _error;
    BOOL  _establishedConnection;
    BOOL  _expectingResumeCallback;
    NSURL * _fileURL;
    BOOL  _hasStarted;
    unsigned int  _identifier;
    BOOL  _initializedFromToken;
    double  _loadingPriority;
    unsigned int  _lowThroughputTimerRetryCount;
    BOOL  _mayBeDemotedToDiscretionary;
    NSDictionary * _options;
    NSURLRequest * _originalRequest;
    NSString * _pathToDownloadTaskFile;
    NSURLResponse * _response;
    unsigned int  _retryCount;
    NSString * _sessionID;
    BOOL  _shouldCancelOnDisconnect;
    int  _state;
    NSString * _storagePartitionIdentifier;
    unsigned int  _suspendCount;
    NSString * _taskDescription;
    unsigned int  _taskKind;
    NSURL * _temporaryDestinationURL;
    NSString * _uniqueIdentifier;
}

@property unsigned int AVAssetDownloadToken;
@property (retain) AVURLAsset *AVURLAsset;
@property (copy) NSURL *URL;
@property (retain) NSURLSessionTaskMetrics *_backgroundTaskMetrics;
@property (copy) NSDictionary *_backgroundTaskTimingData;
@property (retain) NSDictionary *_backgroundTrailers;
@property (copy) NSData *assetArtworkData;
@property (copy) NSString *assetTitle;
@property int basePriority;
@property (copy) NSString *bundleID;
@property int bytesPerSecondLimit;
@property int countOfBytesExpectedToReceive;
@property int countOfBytesExpectedToSend;
@property int countOfBytesReceived;
@property int countOfBytesSent;
@property double creationTime;
@property (copy) NSURLRequest *currentRequest;
@property (copy) NSURL *destinationURL;
@property BOOL disablesRetry;
@property (getter=isDiscretionary) BOOL discretionary;
@property (copy) NSURL *downloadFileURL;
@property unsigned int downloadTokenFromInitialization;
@property (copy) NSError *error;
@property BOOL establishedConnection;
@property BOOL expectingResumeCallback;
@property (copy) NSURL *fileURL;
@property BOOL hasStarted;
@property unsigned int identifier;
@property BOOL initializedFromToken;
@property double loadingPriority;
@property unsigned int lowThroughputTimerRetryCount;
@property BOOL mayBeDemotedToDiscretionary;
@property (copy) NSDictionary *options;
@property (copy) NSURLRequest *originalRequest;
@property (copy) NSString *pathToDownloadTaskFile;
@property (copy) NSURLResponse *response;
@property unsigned int retryCount;
@property (copy) NSString *sessionID;
@property BOOL shouldCancelOnDisconnect;
@property int state;
@property (copy) NSString *storagePartitionIdentifier;
@property unsigned int suspendCount;
@property (copy) NSString *taskDescription;
@property unsigned int taskKind;
@property (copy) NSURL *temporaryDestinationURL;
@property (copy) NSString *uniqueIdentifier;

+ (BOOL)supportsSecureCoding;

- (unsigned int)AVAssetDownloadToken;
- (id)AVURLAsset;
- (id)URL;
- (id)_backgroundTaskMetrics;
- (id)_backgroundTaskTimingData;
- (id)_backgroundTrailers;
- (id)assetArtworkData;
- (id)assetTitle;
- (int)basePriority;
- (id)bundleID;
- (int)bytesPerSecondLimit;
- (int)countOfBytesExpectedToReceive;
- (int)countOfBytesExpectedToSend;
- (int)countOfBytesReceived;
- (int)countOfBytesSent;
- (double)creationTime;
- (id)currentRequest;
- (void)dealloc;
- (id)destinationURL;
- (BOOL)disablesRetry;
- (id)downloadFileURL;
- (unsigned int)downloadTokenFromInitialization;
- (void)encodeWithCoder:(id)arg1;
- (id)error;
- (BOOL)establishedConnection;
- (BOOL)expectingResumeCallback;
- (id)fileURL;
- (BOOL)hasStarted;
- (unsigned int)identifier;
- (id)initWithAVAssetDownloadURL:(id)arg1 destinationURL:(id)arg2 assetTitle:(id)arg3 assetArtworkData:(id)arg4 options:(id)arg5 taskIdentifier:(unsigned int)arg6 bundleID:(id)arg7 sessionID:(id)arg8;
- (id)initWithCoder:(id)arg1;
- (id)initWithDataTask:(id)arg1 bundleID:(id)arg2 sessionID:(id)arg3;
- (id)initWithDownloadTask:(id)arg1 bundleID:(id)arg2 sessionID:(id)arg3;
- (id)initWithTask:(id)arg1 bundleID:(id)arg2 sessionID:(id)arg3;
- (id)initWithUploadTask:(id)arg1 bundleID:(id)arg2 sessionID:(id)arg3;
- (BOOL)initializedFromToken;
- (BOOL)isDiscretionary;
- (double)loadingPriority;
- (unsigned int)lowThroughputTimerRetryCount;
- (BOOL)mayBeDemotedToDiscretionary;
- (id)options;
- (id)originalRequest;
- (id)pathToDownloadTaskFile;
- (id)response;
- (unsigned int)retryCount;
- (id)sessionID;
- (void)setAVAssetDownloadToken:(unsigned int)arg1;
- (void)setAVURLAsset:(id)arg1;
- (void)setAssetArtworkData:(id)arg1;
- (void)setAssetTitle:(id)arg1;
- (void)setBasePriority:(int)arg1;
- (void)setBundleID:(id)arg1;
- (void)setBytesPerSecondLimit:(int)arg1;
- (void)setCountOfBytesExpectedToReceive:(int)arg1;
- (void)setCountOfBytesExpectedToSend:(int)arg1;
- (void)setCountOfBytesReceived:(int)arg1;
- (void)setCountOfBytesSent:(int)arg1;
- (void)setCreationTime:(double)arg1;
- (void)setCurrentRequest:(id)arg1;
- (void)setDestinationURL:(id)arg1;
- (void)setDisablesRetry:(BOOL)arg1;
- (void)setDiscretionary:(BOOL)arg1;
- (void)setDownloadFileURL:(id)arg1;
- (void)setDownloadTokenFromInitialization:(unsigned int)arg1;
- (void)setError:(id)arg1;
- (void)setEstablishedConnection:(BOOL)arg1;
- (void)setExpectingResumeCallback:(BOOL)arg1;
- (void)setFileURL:(id)arg1;
- (void)setHasStarted:(BOOL)arg1;
- (void)setIdentifier:(unsigned int)arg1;
- (void)setInitializedFromToken:(BOOL)arg1;
- (void)setLoadingPriority:(double)arg1;
- (void)setLowThroughputTimerRetryCount:(unsigned int)arg1;
- (void)setMayBeDemotedToDiscretionary:(BOOL)arg1;
- (void)setOptions:(id)arg1;
- (void)setOriginalRequest:(id)arg1;
- (void)setPathToDownloadTaskFile:(id)arg1;
- (void)setResponse:(id)arg1;
- (void)setRetryCount:(unsigned int)arg1;
- (void)setSessionID:(id)arg1;
- (void)setShouldCancelOnDisconnect:(BOOL)arg1;
- (void)setState:(int)arg1;
- (void)setStoragePartitionIdentifier:(id)arg1;
- (void)setSuspendCount:(unsigned int)arg1;
- (void)setTaskDescription:(id)arg1;
- (void)setTaskKind:(unsigned int)arg1;
- (void)setTemporaryDestinationURL:(id)arg1;
- (void)setURL:(id)arg1;
- (void)setUniqueIdentifier:(id)arg1;
- (void)set_backgroundTaskMetrics:(id)arg1;
- (void)set_backgroundTaskTimingData:(id)arg1;
- (void)set_backgroundTrailers:(id)arg1;
- (BOOL)shouldCancelOnDisconnect;
- (int)state;
- (id)storagePartitionIdentifier;
- (unsigned int)suspendCount;
- (id)taskDescription;
- (unsigned int)taskKind;
- (id)temporaryDestinationURL;
- (id)uniqueIdentifier;

@end
