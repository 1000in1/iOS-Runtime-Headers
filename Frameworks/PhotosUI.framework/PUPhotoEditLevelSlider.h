/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/PhotosUI.framework/PhotosUI
 */

@interface PUPhotoEditLevelSlider : UIView <PUPhotoEditLayoutStaticAdaptable> {
    UIView * __sliderContentView;
    PUAdjustmentsMode * _adjustmentsMode;
    double  _baseValue;
    BOOL  _baseValueIndicatorHidden;
    UIView * _baseValueIndicatorView;
    NSArray * _baseValueIndicatorViewConstraints;
    NSLayoutConstraint * _baseValueIndicatorViewPositionConstraint;
    struct CGSize { 
        double width; 
        double height; 
    }  _contentSize;
    NSArray * _contentViewConstraints;
    NSLayoutConstraint * _contentViewOffsetConstraint;
    double  _currentValue;
    BOOL  _directionReversed;
    double  _identityOffset;
    double  _identityValue;
    int  _layoutOrientation;
    UIView * _levelIndicatorView;
    NSArray * _levelIndicatorViewConstraints;
    NSLayoutConstraint * _levelIndicatorViewOffsetConstraint;
    NSLayoutConstraint * _levelIndicatorViewSpanConstraint;
    double  _maxValue;
    double  _minValue;
    double  _pointsPerUnitAboveIdentity;
    double  _pointsPerUnitBelowIdentity;
    BOOL  _scaleFactorsAreValid;
}

@property (nonatomic, retain) PUAdjustmentsMode *adjustmentsMode;
@property (nonatomic) double baseValue;
@property (getter=isBaseValueIndicatorHidden, nonatomic) BOOL baseValueIndicatorHidden;
@property (nonatomic) struct CGSize { double x1; double x2; } contentSize;
@property (nonatomic) double currentValue;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (getter=isDirectionReversed, nonatomic) BOOL directionReversed;
@property (readonly) unsigned int hash;
@property (nonatomic, readonly) double identityOffset;
@property (nonatomic) double identityValue;
@property (nonatomic, readonly) int layoutOrientation;
@property (nonatomic) double maxValue;
@property (nonatomic) double minValue;
@property (readonly) Class superclass;
@property (nonatomic, readonly) BOOL wantsLevelIndicator;

- (void).cxx_destruct;
- (float)_baseValueIndicatorOffset;
- (float)_contentOffsetForLevelValue:(float)arg1;
- (void)_invalidateContentViewConstraints;
- (float)_levelIndicatorOffset;
- (float)_levelIndicatorWidth;
- (id)_sliderContentView;
- (void)_updateBaseValueIndicatorVisibiliyAnimated:(BOOL)arg1;
- (void)_updateConversionFactorsIfNeeded;
- (void)_updateLevelDisplay;
- (id)adjustmentsMode;
- (float)baseValue;
- (struct CGSize { double x1; double x2; })contentSize;
- (float)currentValue;
- (float)identityOffset;
- (float)identityValue;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)invalidateConversionFactors;
- (BOOL)isBaseValueIndicatorHidden;
- (BOOL)isDirectionReversed;
- (int)layoutOrientation;
- (float)levelValueForOffset:(float)arg1;
- (float)maxValue;
- (float)minValue;
- (float)offsetForLevelValue:(float)arg1;
- (id)preferredSliderContentView;
- (void)setAdjustmentsMode:(id)arg1;
- (void)setBaseValue:(float)arg1;
- (void)setBaseValueIndicatorHidden:(BOOL)arg1;
- (void)setBaseValueIndicatorHidden:(BOOL)arg1 animated:(BOOL)arg2;
- (void)setBounds:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)setContentSize:(struct CGSize { double x1; double x2; })arg1;
- (void)setCurrentValue:(float)arg1;
- (void)setDirectionReversed:(BOOL)arg1;
- (void)setIdentityValue:(float)arg1;
- (void)setMaxValue:(float)arg1;
- (void)setMinValue:(float)arg1;
- (void)setupWithLayoutOrientation:(int)arg1;
- (void)updateConstraints;
- (BOOL)wantsLevelIndicator;

@end
