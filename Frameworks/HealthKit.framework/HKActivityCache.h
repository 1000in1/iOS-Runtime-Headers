/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/HealthKit.framework/HealthKit
 */

@interface HKActivityCache : HKSample <HDCoding, NSCopying> {
    int  _activeEnergyBurnedAnchor;
    double  _activeHours;
    int  _activeHoursAnchor;
    double  _briskMinutes;
    int  _briskMinutesAnchor;
    int  _cacheIndex;
    NSDateComponents * _dateComponents;
    double  _deepBreathingDuration;
    int  _deepBreathingSessionAnchor;
    HKQuantity * _energyBurned;
    HKQuantity * _energyBurnedGoal;
    int  _energyBurnedGoalAnchor;
    NSDate * _energyBurnedGoalDate;
    int  _flightsClimbed;
    int  _flightsClimbedAnchor;
    unsigned int  _knownFields;
    int  _pushCount;
    int  _pushCountAnchor;
    int  _stepCount;
    int  _stepCountAnchor;
    HKQuantity * _walkingAndRunningDistance;
    int  _walkingAndRunningDistanceAnchor;
    int  _wheelchairUse;
    int  _workoutAnchor;
}

@property (setter=_setActiveEnergyBurnedAnchor:) int activeEnergyBurnedAnchor;
@property (setter=_setActiveHours:) double activeHours;
@property (setter=_setActiveHoursAnchor:) int activeHoursAnchor;
@property (readonly) double activeHoursGoal;
@property (readonly) double activeHoursGoalPercentage;
@property (setter=_setBriskMinutes:) double briskMinutes;
@property (setter=_setBriskMinutesAnchor:) int briskMinutesAnchor;
@property (readonly) double briskMinutesGoal;
@property (readonly) double briskMinutesGoalPercentage;
@property (setter=_setCacheIndex:) int cacheIndex;
@property (readonly) NSDateComponents *dateComponents;
@property (readonly, copy) NSString *debugDescription;
@property (setter=_setDeepBreathingDuration:) double deepBreathingDuration;
@property (setter=_setDeepBreathingSessionAnchor:) int deepBreathingSessionAnchor;
@property (readonly, copy) NSString *description;
@property (setter=_setEnergyBurned:, retain) HKQuantity *energyBurned;
@property (setter=_setEnergyBurnedGoal:, retain) HKQuantity *energyBurnedGoal;
@property (setter=_setEnergyBurnedGoalAnchor:) int energyBurnedGoalAnchor;
@property (readonly) NSDate *energyBurnedGoalDate;
@property (readonly) double energyBurnedGoalPercentage;
@property (setter=_setFlightsClimbed:) int flightsClimbed;
@property (setter=_setFlightsClimbedAnchor:) int flightsClimbedAnchor;
@property (readonly) BOOL hasActiveHours;
@property (readonly) BOOL hasActiveHoursGoal;
@property (readonly) BOOL hasActiveHoursGoalPercentage;
@property (readonly) BOOL hasBriskMinutes;
@property (readonly) BOOL hasBriskMinutesGoal;
@property (readonly) BOOL hasBriskMinutesGoalPercentage;
@property (readonly) BOOL hasDateComponents;
@property (readonly) BOOL hasDeepBreathingDuration;
@property (readonly) BOOL hasEnergyBurned;
@property (readonly) BOOL hasEnergyBurnedGoal;
@property (readonly) BOOL hasEnergyBurnedGoalPercentage;
@property (readonly) BOOL hasFlightsClimbed;
@property (readonly) BOOL hasPushCount;
@property (readonly) BOOL hasStepCount;
@property (readonly) BOOL hasWalkingAndRunningDistance;
@property (readonly) BOOL hasWheelchairUse;
@property (readonly) unsigned int hash;
@property (setter=_setKnownFields:) unsigned int knownFields;
@property (setter=_setPushCount:) int pushCount;
@property (setter=_setPushCountAnchor:) int pushCountAnchor;
@property (setter=_setStepCount:) int stepCount;
@property (setter=_setStepCountAnchor:) int stepCountAnchor;
@property (readonly) Class superclass;
@property (setter=_setWalkingAndRunningDistance:, retain) HKQuantity *walkingAndRunningDistance;
@property (setter=_setWalkingAndRunningDistanceAnchor:) int walkingAndRunningDistanceAnchor;
@property (setter=_setWheelchairUse:) int wheelchairUse;
@property (setter=_setWorkoutAnchor:) int workoutAnchor;

// Image: /System/Library/Frameworks/HealthKit.framework/HealthKit

+ (BOOL)_isConcreteObjectClass;
+ (id)_newActivityCacheWithStartDate:(id)arg1 endDate:(id)arg2 dateComponents:(id)arg3 energyBurned:(id)arg4 energyBurnedGoal:(id)arg5 walkingAndRunningDistance:(id)arg6 metadata:(id)arg7;
+ (id)_newActivityCacheWithUUID:(id)arg1 startDate:(id)arg2 endDate:(id)arg3 dateComponents:(id)arg4;
+ (BOOL)supportsSecureCoding;

- (void).cxx_destruct;
- (double)_energyBurnedGoalInKilocalories;
- (double)_energyBurnedInKilocalories;
- (BOOL)_isEqualToActivityCache:(id)arg1;
- (int)_minCategoryAnchor;
- (int)_minQuantityAnchor;
- (void)_setActiveEnergyBurnedAnchor:(int)arg1;
- (void)_setActiveHours:(double)arg1;
- (void)_setActiveHoursAnchor:(int)arg1;
- (void)_setBriskMinutes:(double)arg1;
- (void)_setBriskMinutesAnchor:(int)arg1;
- (void)_setCacheIndex:(int)arg1;
- (void)_setCategoryAnchor:(int)arg1;
- (void)_setDeepBreathingDuration:(double)arg1;
- (void)_setDeepBreathingSessionAnchor:(int)arg1;
- (void)_setEnergyBurned:(id)arg1;
- (void)_setEnergyBurnedGoal:(id)arg1;
- (void)_setEnergyBurnedGoal:(id)arg1 date:(id)arg2;
- (void)_setEnergyBurnedGoalAnchor:(int)arg1;
- (void)_setEnergyBurnedGoalDateOnly:(id)arg1;
- (void)_setEnergyBurnedGoalOnly:(id)arg1;
- (void)_setFlightsClimbed:(int)arg1;
- (void)_setFlightsClimbedAnchor:(int)arg1;
- (void)_setKnownFields:(unsigned int)arg1;
- (void)_setPushCount:(int)arg1;
- (void)_setPushCountAnchor:(int)arg1;
- (void)_setQuantityAnchor:(int)arg1;
- (void)_setStepCount:(int)arg1;
- (void)_setStepCountAnchor:(int)arg1;
- (void)_setWalkingAndRunningDistance:(id)arg1;
- (void)_setWalkingAndRunningDistanceAnchor:(int)arg1;
- (void)_setWheelchairUse:(int)arg1;
- (void)_setWorkoutAnchor:(int)arg1;
- (id)_valueDescription;
- (double)_walkingAndRunningDistanceInMeters;
- (int)activeEnergyBurnedAnchor;
- (double)activeHours;
- (int)activeHoursAnchor;
- (double)activeHoursGoal;
- (double)activeHoursGoalPercentage;
- (double)briskMinutes;
- (int)briskMinutesAnchor;
- (double)briskMinutesGoal;
- (double)briskMinutesGoalPercentage;
- (int)cacheIndex;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (id)dateComponents;
- (double)deepBreathingDuration;
- (int)deepBreathingSessionAnchor;
- (void)encodeWithCoder:(id)arg1;
- (id)energyBurned;
- (id)energyBurnedGoal;
- (int)energyBurnedGoalAnchor;
- (id)energyBurnedGoalDate;
- (double)energyBurnedGoalPercentage;
- (int)flightsClimbed;
- (int)flightsClimbedAnchor;
- (BOOL)hasActiveHours;
- (BOOL)hasActiveHoursGoal;
- (BOOL)hasActiveHoursGoalPercentage;
- (BOOL)hasBriskMinutes;
- (BOOL)hasBriskMinutesGoal;
- (BOOL)hasBriskMinutesGoalPercentage;
- (BOOL)hasDateComponents;
- (BOOL)hasDeepBreathingDuration;
- (BOOL)hasEnergyBurned;
- (BOOL)hasEnergyBurnedGoal;
- (BOOL)hasEnergyBurnedGoalPercentage;
- (BOOL)hasFlightsClimbed;
- (BOOL)hasPushCount;
- (BOOL)hasStepCount;
- (BOOL)hasWalkingAndRunningDistance;
- (BOOL)hasWheelchairUse;
- (id)initWithCoder:(id)arg1;
- (unsigned int)knownFields;
- (int)pushCount;
- (int)pushCountAnchor;
- (void)reset;
- (int)stepCount;
- (int)stepCountAnchor;
- (id)walkingAndRunningDistance;
- (int)walkingAndRunningDistanceAnchor;
- (int)wheelchairUse;
- (int)workoutAnchor;

// Image: /System/Library/PrivateFrameworks/HealthDaemon.framework/HealthDaemon

+ (id)createWithCodable:(id)arg1;
+ (Class)hd_dataEntityClass;

- (BOOL)addCodableRepresentationToCollectionForJournal:(id)arg1;
- (BOOL)addCodableRepresentationToCollectionForSync:(id)arg1;
- (id)codableRepresentationForJournal;
- (id)codableRepresentationForSync;

@end
