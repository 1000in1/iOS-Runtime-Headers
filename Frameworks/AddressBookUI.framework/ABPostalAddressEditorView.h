/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/AddressBookUI.framework/AddressBookUI
 */

@class <ABPresenterDelegate>, CNPostalAddress, NSArray, NSDictionary, NSMutableDictionary, UITableView;

@interface ABPostalAddressEditorView : UIControl <UITableViewDataSource, UITableViewDelegate, UITextFieldDelegate, ABCountryPickerControllerDelegate> {
    CNPostalAddress *_address;
    NSDictionary *_addressFormats;
    NSArray *_cellsLayout;
    <ABPresenterDelegate> *_delegate;
    UITableView *_tableView;
    NSMutableDictionary *_textFields;
    NSDictionary *_valueTextAttributes;
}

@property(copy) CNPostalAddress * address;
@property(copy) NSDictionary * addressFormats;
@property(copy) NSArray * cellsLayout;
@property <ABPresenterDelegate> * delegate;
@property(retain) UITableView * tableView;
@property(copy) NSMutableDictionary * textFields;
@property(copy) NSDictionary * valueTextAttributes;

+ (void)preCacheCells;
+ (void)preCacheContent;

- (id)_addressPlaceholderForKey:(id)arg1;
- (id)_addressValueForKey:(id)arg1;
- (id)_cellsLayoutForCountryCode:(id)arg1;
- (id)_countryCode;
- (id)_normalizeCountryCodeToISO:(id)arg1;
- (void)_setAddressValue:(id)arg1 forKey:(id)arg2;
- (void)_setupCountryPickerOnLine:(id)arg1;
- (void)_setupCoutryPickerOnTextField:(id)arg1;
- (id)address;
- (id)addressFormats;
- (BOOL)becomeFirstResponder;
- (BOOL)canBecomeFirstResponder;
- (id)cellsLayout;
- (void)countryPicker:(id)arg1 didPickCountryCode:(id)arg2;
- (void)countryPickerDidCancel:(id)arg1;
- (void)dealloc;
- (id)delegate;
- (id)initWithFrame:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (BOOL)isFirstResponder;
- (void)setAddress:(id)arg1;
- (void)setAddressFormats:(id)arg1;
- (void)setBackgroundColor:(id)arg1;
- (void)setCellsLayout:(id)arg1;
- (void)setDelegate:(id)arg1;
- (void)setEnabled:(BOOL)arg1;
- (void)setTableView:(id)arg1;
- (void)setTextFields:(id)arg1;
- (void)setValueTextAttributes:(id)arg1;
- (struct CGSize { float x1; float x2; })sizeThatFits:(struct CGSize { float x1; float x2; })arg1;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (int)tableView:(id)arg1 numberOfRowsInSection:(int)arg2;
- (void)tableView:(id)arg1 willDisplayCell:(id)arg2 forRowAtIndexPath:(id)arg3;
- (id)tableView;
- (void)textFieldChanged:(id)arg1;
- (BOOL)textFieldShouldBeginEditing:(id)arg1;
- (id)textFields;
- (id)valueTextAttributes;

@end
