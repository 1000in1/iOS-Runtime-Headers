/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer
 */

@interface MPItemDownloadProperties : NSObject <MPStoreDownloadManagerObserver, NSCopying> {
    long long _assetFileSize;
    NSURL *_destinationURL;
    SSDownload *_download;
    BOOL _downloadExists;
    NSString *_downloadIdentifier;
    long long _downloadSizeLimit;
    unsigned long long _downloadToken;
    NSMutableSet *_downloadTokenCompletionHandlers;
    NSArray *_sinfs;
    NSURL *_sourceURL;
}

@property (nonatomic, readonly) long long assetFileSize;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic, readonly) NSURL *destinationURL;
@property (nonatomic, readonly) BOOL downloadExists;
@property (nonatomic, readonly) NSString *downloadIdentifier;
@property (nonatomic, readonly) long long downloadSizeLimit;
@property (nonatomic) unsigned long long downloadToken;
@property (readonly) unsigned int hash;
@property (nonatomic, readonly) NSURL *sourceURL;
@property (readonly) Class superclass;

- (void).cxx_destruct;
- (void)_attemptToFindDownloadTokenForPossibleDownloads:(id)arg1;
- (void)_reloadNetworkConstraints;
- (void)acquireDownloadTokenWithCompletionHandler:(id /* block */)arg1;
- (long long)assetFileSize;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (void)dealloc;
- (id)description;
- (id)destinationURL;
- (BOOL)downloadExists;
- (id)downloadIdentifier;
- (void)downloadManager:(id)arg1 didAddDownloads:(id)arg2 removeDownloads:(id)arg3;
- (void)downloadManager:(id)arg1 downloadDidProgress:(id)arg2;
- (long long)downloadSizeLimit;
- (unsigned long long)downloadToken;
- (unsigned int)hash;
- (id)initWithContext:(id)arg1;
- (id)initWithDownload:(id)arg1;
- (id)initWithDownloadIdentifier:(long long)arg1;
- (BOOL)isEqual:(id)arg1;
- (id)newAVAssetOptionsWithDownloadStyle:(int)arg1;
- (void)setDownloadToken:(unsigned long long)arg1;
- (id)sourceURL;

@end
