/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer
 */

@interface MPTransportControls : UIView {
    BOOL  _allowsWirelessPlayback;
    MPButton * _alternatesButton;
    MPButton * _bookmarkButton;
    MPButton * _chaptersButton;
    unsigned int  _desiredParts;
    unsigned int  _disabledParts;
    MPButton * _emailButton;
    MPButton * _fastForward15SecondsButton;
    NSMutableIndexSet * _heldParts;
    MPAVItem * _item;
    MPButton * _likeOrBanButton;
    MPButton * _nextButton;
    MPButton * _playButton;
    MPAVController * _player;
    unsigned int  _playing;
    MPButton * _previousButton;
    BOOL  _registeredForPlayerNotifications;
    MPButton * _rewind15SecondsButton;
    MPButton * _rewind30SecondsButton;
    MPButton * _scaleButton;
    id  _target;
    MPButton * _toggleFullscreenButton;
    unsigned int  _visibleParts;
    id  _volumeSlider;
}

@property (nonatomic) BOOL allowsWirelessPlayback;
@property (nonatomic) unsigned int desiredParts;
@property (nonatomic) unsigned int disabledParts;
@property (nonatomic, retain) MPAVItem *item;
@property (nonatomic, readonly) NSString *pauseButtonImage;
@property (nonatomic, readonly) NSString *playButtonImage;
@property (nonatomic, readonly) NSString *playPauseButtonImage;
@property (nonatomic, retain) MPAVController *player;
@property (nonatomic) BOOL registeredForPlayerNotifications;
@property (nonatomic) id target;
@property (nonatomic) unsigned int visibleParts;

+ (Class)buttonClass;
+ (BOOL)buttonImagesUseBackgroundImage;
+ (int)buttonType;
+ (unsigned int)defaultVisibleParts;

- (void).cxx_destruct;
- (void)_alternateTypesChangedNotification:(id)arg1;
- (void)_applyDesiredPartsWithAnimation:(BOOL)arg1;
- (unsigned int)_applyPossibleVisiblePartsToParts:(unsigned int)arg1;
- (void)_availableRoutesChangedNotification:(id)arg1;
- (BOOL)_handleHoldForPart:(unsigned int)arg1;
- (BOOL)_handleReleaseForPart:(unsigned int)arg1;
- (BOOL)_handleTapForPart:(unsigned int)arg1;
- (void)_isExternalPlaybackActiveDidChangeNotification:(id)arg1;
- (void)_itemChangedNotification:(id)arg1;
- (void)_itemDurationDidChangeNotification:(id)arg1;
- (void)_playbackStateChangedNotification:(id)arg1;
- (void)_reloadViewWithAnimation:(BOOL)arg1;
- (void)_timeMarkersAvailableNotification:(id)arg1;
- (id)_updateAdditions:(id)arg1 removals:(id)arg2 forPart:(unsigned int)arg3;
- (void)_updateEnabledStates:(BOOL)arg1;
- (void)_updatePlayButtonImage;
- (void)_updateTintColorForPart:(unsigned int)arg1;
- (void)_validityChangedNotification:(id)arg1;
- (BOOL)allowsWirelessPlayback;
- (BOOL)allowsWirelessPlaybackForCurrentItem;
- (BOOL)alwaysHidesSystemVolumeHUD;
- (void)buttonDown:(id)arg1;
- (id)buttonForPart:(unsigned int)arg1;
- (void)buttonHeld:(id)arg1;
- (void)buttonHoldReleased:(id)arg1;
- (id)buttonImageForPart:(unsigned int)arg1;
- (void)buttonUp:(id)arg1;
- (void)dealloc;
- (unsigned int)desiredParts;
- (void)didMoveToSuperview;
- (void)didMoveToWindow;
- (id)disabledButtonImageForPart:(unsigned int)arg1;
- (unsigned int)disabledParts;
- (id)highlightedButtonImageForPart:(unsigned int)arg1;
- (id)init;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (id)item;
- (id)newButtonForPart:(unsigned int)arg1;
- (id)newVolumeSlider;
- (id)pauseButtonImage;
- (id)playButtonImage;
- (id)playPauseButtonImage;
- (id)player;
- (void)registerForPlayerNotifications;
- (BOOL)registeredForPlayerNotifications;
- (void)reloadForAdditions:(id)arg1 removals:(id)arg2 animate:(BOOL)arg3;
- (void)setAllowsWirelessPlayback:(BOOL)arg1;
- (void)setAlpha:(float)arg1;
- (void)setDesiredParts:(unsigned int)arg1;
- (void)setDesiredParts:(unsigned int)arg1 animated:(BOOL)arg2;
- (void)setDisabledParts:(unsigned int)arg1;
- (void)setFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)setHidden:(BOOL)arg1;
- (void)setItem:(id)arg1;
- (void)setPlayer:(id)arg1;
- (void)setRegisteredForPlayerNotifications:(BOOL)arg1;
- (void)setTarget:(id)arg1;
- (void)setVisibleParts:(unsigned int)arg1;
- (void)setVisibleParts:(unsigned int)arg1 animated:(BOOL)arg2;
- (BOOL)showsVolumeSliderWhenNoVolumeControlAvailable;
- (id)target;
- (void)tintColorDidChange;
- (id)tintColorForPart:(unsigned int)arg1;
- (void)unregisterForPlayerNotifications;
- (BOOL)usesTintColorForControls;
- (unsigned int)visibleParts;

@end
