/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/GameKit.framework/Frameworks/GameCenterFoundation.framework/GameCenterFoundation
 */

@class <GKDaemonProxyDataUpdateDelegate>, <GKDaemonProxyNetworkActivityIndicatorDelegate>, GKThreadsafeDictionary, NSDictionary, NSObject<OS_dispatch_queue>, NSObject<OS_dispatch_semaphore>, NSXPCConnection;

@interface GKDaemonProxy : NSObject <NSXPCConnectionDelegate, GKClientProtocol> {
    NSObject<OS_dispatch_semaphore> *_concurrentRequestSemaphore;
    NSXPCConnection *_connection;
    <GKDaemonProxyDataUpdateDelegate> *_dataUpdateDelegate;
    NSDictionary *_interfaceLookup;
    NSObject<OS_dispatch_queue> *_invocationQueue;
    <GKDaemonProxyNetworkActivityIndicatorDelegate> *_networkActivityIndicatorDelegate;
    GKThreadsafeDictionary *_pendingRequests;
    NSDictionary *_serviceLookup;
    NSObject<OS_dispatch_semaphore> *_serviceSemaphore;
}

@property NSXPCConnection * connection;
@property <GKDaemonProxyDataUpdateDelegate> * dataUpdateDelegate;
@property <GKDaemonProxyNetworkActivityIndicatorDelegate> * networkActivityIndicatorDelegate;

+ (id)accountServicePrivateProxy;
+ (id)accountServiceProxy;
+ (id)bulletinServicePrivateProxy;
+ (id)bulletinServiceProxy;
+ (id)challengeServicePrivateProxy;
+ (id)challengeServiceProxy;
+ (id)daemonProxy;
+ (id)friendServicePrivateProxy;
+ (id)friendServiceProxy;
+ (id)gameServicePrivateProxy;
+ (id)gameServiceProxy;
+ (id)gameStatServicePrivateProxy;
+ (id)gameStatServiceProxy;
+ (id)linkedAccountsServicePrivateProxy;
+ (id)linkedAccountsServiceProxy;
+ (id)multiplayerServicePrivateProxy;
+ (id)multiplayerServiceProxy;
+ (id)profileServicePrivateProxy;
+ (id)profileServiceProxy;
+ (id)turnBasedServicePrivateProxy;
+ (id)turnBasedServiceProxy;
+ (id)utilityServicePrivateProxy;
+ (id)utilityServiceProxy;

- (void)_replyToDuplicatesForRequest:(id)arg1 withInvocation:(id)arg2 queue:(id)arg3;
- (id)accountName;
- (oneway void)achievementSelected:(id)arg1;
- (void)addInterface:(id)arg1 toLookup:(id)arg2;
- (void)addService:(id)arg1 forProtocol:(id)arg2 toLookup:(id)arg3;
- (id)authenticatedPlayerID;
- (oneway void)beginNetworkActivity;
- (void)buildInterfaceLookup;
- (void)buildServiceLookup;
- (void)buildServiceLookupIfNeccessary;
- (oneway void)challengeCompleted:(id)arg1;
- (oneway void)challengeReceived:(id)arg1;
- (oneway void)completedChallengeSelected:(id)arg1;
- (oneway void)completedOptimisticAuthenticationWithResponse:(id)arg1 error:(id)arg2;
- (void)connection:(id)arg1 handleInvocation:(id)arg2 isReply:(BOOL)arg3;
- (id)connection;
- (id)dataUpdateDelegate;
- (void)dealloc;
- (void)dispatchCompletedChallenge:(id)arg1;
- (oneway void)endNetworkActivity;
- (void)forwardInvocation:(id)arg1;
- (oneway void)getAccountNameWithHandler:(id)arg1;
- (oneway void)getAuthenticatedPlayerIDWithHandler:(id)arg1;
- (BOOL)hasAuthenticatedAccount;
- (id)init;
- (id)methodSignatureForProtocol:(id)arg1 selector:(SEL)arg2;
- (id)methodSignatureForSelector:(SEL)arg1;
- (id)networkActivityIndicatorDelegate;
- (oneway void)receivedChallengeSelected:(id)arg1;
- (oneway void)refreshContentsForDataType:(unsigned int)arg1 userInfo:(id)arg2;
- (id)replyQueueForRequestSelector:(SEL)arg1;
- (oneway void)resetNetworkActivity;
- (void)resetServiceLookup;
- (oneway void)respondedToNearbyInvite:(id)arg1;
- (oneway void)scoreSelected:(id)arg1;
- (oneway void)setBadgeCount:(unsigned int)arg1 forType:(unsigned int)arg2;
- (void)setConnection:(id)arg1;
- (oneway void)setCurrentGame:(id)arg1 sandboxed:(BOOL)arg2 reply:(id)arg3;
- (void)setDataUpdateDelegate:(id)arg1;
- (oneway void)setLocalPlayer:(id)arg1 authenticated:(BOOL)arg2 reply:(id)arg3;
- (oneway void)setLogBits:(unsigned int)arg1;
- (void)setNetworkActivityIndicatorDelegate:(id)arg1;
- (oneway void)setPreferencesValues:(id)arg1;

@end
