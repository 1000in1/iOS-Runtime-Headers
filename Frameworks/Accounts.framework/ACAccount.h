/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/Accounts.framework/Accounts
 */

/* RuntimeBrowser encountered an ivar type encoding it does not handle. 
   See Warning(s) below.
 */

@class ACAccount, ACAccountCredential, ACAccountStore, ACAccountType, NSArray, NSDate, NSDictionary, NSMutableDictionary, NSMutableSet, NSSet, NSString, NSURL;

@interface ACAccount : NSObject <NSSecureCoding> {
    BOOL _accountAccessAvailable;
    NSString *_accountDescription;
    id _accountPropertiesTransformer;
    ACAccountType *_accountType;
    BOOL _active;
    BOOL _authenticated;
    NSString *_authenticationType;
    NSArray *_childAccounts;
    NSString *_clientToken;
    BOOL _creatingFromManagedObject;
    ACAccountCredential *_credential;
    NSString *_credentialType;
    id _credentialsDidChangeObserver;
    NSMutableDictionary *_dataclassProperties;
    NSDate *_date;
    NSMutableSet *_dirtyAccountProperties;
    NSMutableSet *_dirtyProperties;
    NSMutableSet *_enabledDataclasses;
    BOOL _haveCheckedForChildAccounts;
    BOOL _haveCheckedForClientToken;
    BOOL _haveCheckedForParentAccount;
    NSString *_identifier;
    NSDate *_lastCredentialRenewalRejectionDate;
    NSURL *_objectID;
    NSString *_owningBundleID;
    ACAccount *_parentAccount;
    NSString *_parentAccountIdentifier;
    NSMutableDictionary *_properties;
    NSMutableSet *_provisionedDataclasses;
    ACAccountStore *_store;
    BOOL _supportsAuthentication;
    NSString *_username;
    BOOL _visible;
}

@property(readonly) NSDictionary * aa_accountFirstDisplayAlert;
@property(readonly) NSDictionary * aa_accountFooterButton;
@property(readonly) NSString * aa_accountFooterText;
@property(readonly) NSString * aa_accountTypeString;
@property(readonly) NSArray * aa_appleIDAliases;
@property(readonly) NSString * aa_appleId;
@property(setter=aa_setAuthToken:,copy) NSString * aa_authToken;
@property(readonly) ACAccount * aa_childMailAccount;
@property(readonly) NSString * aa_displayName;
@property(readonly) NSString * aa_firstName;
@property(readonly) ACAccount * aa_fmipAccount;
@property(readonly) NSString * aa_fmipToken;
@property(readonly) NSString * aa_hsaToken;
@property(setter=aa_setPrimaryAccount:) BOOL aa_isPrimaryAccount;
@property(setter=aa_setPrimaryEmailVerified:) BOOL aa_isPrimaryEmailVerified;
@property(setter=aa_setSyncedAccount:) BOOL aa_isSyncedAccount;
@property(readonly) NSString * aa_lastName;
@property(readonly) ACAccount * aa_liverpoolAccount;
@property(readonly) NSString * aa_mapsToken;
@property(readonly) BOOL aa_needsEmailConfiguration;
@property(readonly) BOOL aa_needsRegistration;
@property(setter=aa_setNeedsToVerifyTerms:) BOOL aa_needsToVerifyTerms;
@property(setter=aa_setPassword:,copy) NSString * aa_password;
@property(readonly) NSString * aa_personID;
@property(readonly) NSString * aa_primaryEmail;
@property(readonly) NSString * aa_protocolVersion;
@property(readonly) BOOL aa_serviceUnavailable;
@property(readonly) NSDictionary * aa_serviceUnavailableInfo;
@property(readonly) NSString * aa_syncStoreIdentifier;
@property(copy) NSString * accountDescription;
@property(readonly) NSDictionary * accountProperties;
@property(copy) id accountPropertiesTransformer;
@property(readonly) ACAccountStore * accountStore;
@property(retain) ACAccountType * accountType;
@property(getter=isActive) BOOL active;
@property(getter=isAuthenticated) BOOL authenticated;
@property(readonly) NSString * authenticationType;
@property(readonly) NSArray * childAccounts;
@property(readonly) NSString * clientToken;
@property(retain) NSDate * creationDate;
@property(retain) ACAccountCredential * credential;
@property(readonly) NSString * credentialType;
@property(readonly) NSDictionary * dataclassProperties;
@property(getter=isDirty,readonly) BOOL dirty;
@property(readonly) NSSet * dirtyAccountProperties;
@property(readonly) NSSet * dirtyProperties;
@property(readonly) ACAccount * displayAccount;
@property(retain) NSMutableSet * enabledDataclasses;
@property(readonly) NSString * identifier;
@property(retain) NSDate * lastCredentialRenewalRejectionDate;
@property(retain) NSString * mcPayloadUUID;
@property(retain) NSString * mcProfileUUID;
@property(readonly) NSURL * objectID;
@property(retain) ACAccount * parentAccount;
@property(readonly) NSString * parentAccountIdentifier;
@property(retain) NSMutableSet * provisionedDataclasses;
@property(readonly) NSString * shortDebugName;
@property BOOL supportsAuthentication;
@property(readonly) BOOL supportsPush;
@property(readonly) NSString * userFullName;
@property(copy) NSString * username;
@property(getter=isVisible) BOOL visible;

+ (id)_createNewAccountUID;
+ (id)aa_dataclassesBoundToPrimaryAppleAccount;
+ (id)aa_dataclassesBoundToSingleAppleAccount;
+ (BOOL)supportsSecureCoding;

- (void).cxx_destruct;
- (void)_clearCachedChildAccounts;
- (void)_clearCachedCredentials;
- (void)_clearDirtyProperties;
- (void)_installCredentialsChangedObserver;
- (void)_loadAllCachedProperties;
- (void)_markAccountPropertyDirty:(id)arg1;
- (void)_markCredentialDirty;
- (void)_markPropertyDirty:(id)arg1;
- (id)_registeredBundles;
- (void)_setAccountStore:(id)arg1;
- (void)_setObjectID:(id)arg1;
- (BOOL)_useParentForCredentials;
- (id)_usernameFromProperties:(id)arg1;
- (id)aa_accountFirstDisplayAlert;
- (id)aa_accountFooterButton;
- (id)aa_accountFooterText;
- (id)aa_accountTypeString;
- (id)aa_appleIDAliases;
- (id)aa_appleId;
- (id)aa_authToken;
- (id)aa_authTokenWithError:(id*)arg1;
- (id)aa_childMailAccount;
- (void)aa_configureCerts;
- (id)aa_displayName;
- (id)aa_firstName;
- (id)aa_fmipAccount;
- (id)aa_fmipToken;
- (id)aa_hsaToken;
- (id)aa_hsaTokenWithError:(id*)arg1;
- (BOOL)aa_isPrimaryAccount;
- (BOOL)aa_isPrimaryEmailVerified;
- (BOOL)aa_isSyncedAccount;
- (id)aa_lastName;
- (id)aa_liverpoolAccount;
- (id)aa_mapsToken;
- (BOOL)aa_needsEmailConfiguration;
- (BOOL)aa_needsRegistration;
- (BOOL)aa_needsToVerifyTerms;
- (id)aa_password;
- (id)aa_personID;
- (id)aa_primaryEmail;
- (id)aa_protocolVersion;
- (void)aa_removeCerts;
- (BOOL)aa_serviceUnavailable;
- (id)aa_serviceUnavailableInfo;
- (void)aa_setAuthToken:(id)arg1;
- (void)aa_setHSAToken:(id)arg1;
- (void)aa_setMapsToken:(id)arg1;
- (void)aa_setNeedsToVerifyTerms:(BOOL)arg1;
- (void)aa_setPassword:(id)arg1;
- (void)aa_setPrimaryAccount:(BOOL)arg1;
- (void)aa_setPrimaryEmailVerified:(BOOL)arg1;
- (void)aa_setSyncedAccount:(BOOL)arg1;
- (void)aa_setUseCellular:(BOOL)arg1 forDataclass:(id)arg2;
- (id)aa_syncStoreIdentifier;
- (void)aa_updateWithProvisioningResponse:(id)arg1;
- (BOOL)aa_useCellularForDataclass:(id)arg1;
- (id)accountByCleaningThirdPartyTransformations;
- (id)accountDescription;
- (id)accountProperties;
- (id)accountPropertiesTransformer;
- (id)accountPropertyForKey:(id)arg1;
- (id)accountStore;
- (id)accountType;
- (BOOL)addClientToken:(id)arg1;
- (id)appleID;
- (void)applySyncProperties:(id)arg1;
- (BOOL)authenticated;
- (id)authenticationType;
- (BOOL)canRemoveAccount;
- (id)childAccounts;
- (id)childAccountsWithAccountTypeIdentifier:(id)arg1;
- (id)clientToken;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (id)creationDate;
- (id)credential;
- (id)credentialType;
- (id)credentialWithError:(id*)arg1;
- (void)credentialsChanged:(id)arg1;
- (id)dataclassProperties;
- (void)dealloc;
- (id)description;
- (id)diffAccount:(id)arg1;
- (id)dirtyAccountProperties;
- (id)dirtyProperties;
- (id)displayAccount;
- (id)displayUsername;
- (id)dsid;
- (id)enabledAndSyncableDataclasses;
- (id)enabledDataclasses;
- (void)encodeWithCoder:(id)arg1;
- (id)identifier;
- (id)initWithAccountType:(id)arg1;
- (id)initWithAppleID:(id)arg1 password:(id)arg2;
- (id)initWithCoder:(id)arg1;
- (id)initWithManagedAccount:(id)arg1 accountStore:(id)arg2;
- (id)initWithManagedAccount:(id)arg1;
- (BOOL)isActive;
- (BOOL)isAuthenticated;
- (BOOL)isDirty;
- (BOOL)isEnabledForDataclass:(id)arg1;
- (BOOL)isEnabledToSyncDataclass:(id)arg1;
- (BOOL)isMobileMeAccount;
- (BOOL)isPropertyDirty:(id)arg1;
- (BOOL)isProvisionedForDataclass:(id)arg1;
- (BOOL)isVisible;
- (id)lastCredentialRenewalRejectionDate;
- (void)markAllPropertiesDirty;
- (id)mcBackingPayload;
- (id)mcPayloadUUID;
- (id)mcProfileUUID;
- (int)mobileMeAccountStatus;
- (id)objectID;
- (id)owningBundleID;
- (id)parentAccount;
- (id)parentAccountIdentifier;
- (id)propertiesForDataclass:(id)arg1;
- (id)provisionedDataclasses;
- (void)refresh;
- (void)reload;
- (void)setAccountDescription:(id)arg1;
- (void)setAccountProperties:(id)arg1;
- (void)setAccountPropertiesTransformer:(id)arg1;
- (void)setAccountProperty:(id)arg1 forKey:(id)arg2;
- (void)setAccountType:(id)arg1;
- (void)setActive:(BOOL)arg1;
- (void)setAuthenticated:(BOOL)arg1;
- (void)setAuthenticationType:(id)arg1;
- (void)setCreatingFromManagedObject:(BOOL)arg1;
- (void)setCreationDate:(id)arg1;
- (void)setCredential:(id)arg1;
- (void)setCredentialType:(id)arg1;
- (void)setDSID:(id)arg1;
- (void)setDataclassProperties:(id)arg1;
- (void)setEnabled:(BOOL)arg1 forDataclass:(id)arg2;
- (void)setEnabledDataclasses:(id)arg1;
- (void)setIdentifier:(id)arg1;
- (void)setLastCredentialRenewalRejectionDate:(id)arg1;
- (void)setMcPayloadUUID:(id)arg1;
- (void)setMcProfileUUID:(id)arg1;
- (void)setOwningBundleID:(id)arg1;
- (void)setParentAccount:(id)arg1;
- (void)setPasswordFromSync:(id)arg1;
- (void)setProperties:(id)arg1 forDataclass:(id)arg2;
- (void)setProvisionedDataclasses:(id)arg1;
- (void)setSupportsAuthentication:(BOOL)arg1;
- (void)setUsername:(id)arg1;
- (void)setVisible:(BOOL)arg1;
- (id)shortDebugName;
- (void)storeOriginalUsername;
- (BOOL)supportsAuthentication;
- (BOOL)supportsPush;
- (id)syncIdentityString;
- (void)takeValuesFromModifiedAccount:(id)arg1;
- (id)userFullName;
- (id)username;

@end
